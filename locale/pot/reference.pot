# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2018, PySPH developers
# This file is distributed under the same license as the PySPH package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PySPH 1.0b1.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-17 01:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../pysph/docs/source/reference/application.rst:2
msgid "Module application"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:1
msgid "Subclass this to run any SPH simulation. There are several important methods that this class provides. The application is typically used as follows::"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:17
msgid "The :py:meth:`post_process` method is entirely optional and typically performs the post-processing. It is important to understand the correct sequence of the method calls. When the ``Application`` instance is created, the following methods are invoked by the :py:meth:`__init__` method:"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:22
msgid ":py:meth:`initialize()`: use this to setup any constants etc."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:24
msgid ":py:meth:`create_scheme()`: this needs to be overridden if one wishes to use a :py:class:`pysph.sph.scheme.Scheme`. If one does not want to use a scheme, the :py:meth:`create_equations` and :py:meth:`create_solver` methods must be overridden."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:29
msgid "``self.scheme.add_user_options()``: i.e. the scheme's command line options are added, if there is a scheme."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:32
msgid ":py:meth:`add_user_options()`: add any user specified command line options."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:35
msgid "When ``app.run()`` is called, the following methods are called in order:"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:37
msgid "``_parse_command_line()``: this is a private method but it is important to note that the command line arguments are first parsed."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:40
msgid ":py:meth:`consume_user_options()`: this is called right after the command line args are parsed."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:43
msgid ":py:meth:`configure_scheme()`: This is where one may configure the scheme according to the passed command line arguments."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:46
msgid ":py:meth:`create_solver()`: Create the solver, note that this is needed only if one has not used a scheme, otherwise, this will by default return the solver created by the scheme chosen."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:50
msgid ":py:meth:`create_equations()`: Create any equations. Defaults to letting the scheme generate and return the desired equations."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:53
msgid ":py:meth:`create_particles()`"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:55
msgid ":py:meth:`create_inlet_outlet()`"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:57
msgid ":py:meth:`create_domain()`:  Not needed for non-periodic domains."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:59
msgid ":py:meth:`create_nnps()`: Not needed unless one wishes to override the default NNPS."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:62
msgid ":py:meth:`create_tools()`: Add any ``pysph.solver.tools.Tool`` instances."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:65
msgid ":py:meth:`customize_output()`: Customize the output visualization."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:67
msgid "Additionally, as the application runs there are several convenient optional callbacks setup:"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:70
msgid ":py:meth:`pre_step`: Called before each time step."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:72
msgid ":py:meth:`post_stage`: Called after every stage of the integration."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:74
msgid ":py:meth:`post_step`: Called after each time step."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:76
msgid "Finally, it is a good idea to overload the :py:meth:`post_process` method to perform any post processing for the generated data."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:79
msgid "The application instance also has several important attributes, some of these are as follows:"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:82
msgid "``args``: command line arguments, typically ``sys.argv[1:]``."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:84
msgid "``domain``: optional :py:class:`pysph.base.nnps_base.DomainManager` instance."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:87
msgid "``fname``: filename pattern to use when dumping output."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:89
msgid "``inlet_outlet``: list of inlet/outlets."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:91
msgid "``nnps``: instance of :py:class:`pysph.base.nnps_base.NNPS`."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:93
msgid "``num_procs``: total number of processes running."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:95
msgid "``output_dir``: Output directory."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:97
msgid "``parallel_manager``: in parallel, an instance of :py:class:`pysph.parallel.parallel_manager.ParallelManager`."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:100
msgid "``particles``: list of :py:class:`pysph.base.particle_array.ParticleArray`."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:103
msgid "``rank``: Rank of this process."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:105
msgid "``scheme``: the optional :py:class:`pysph.sph.scheme.Scheme` instance."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:107
msgid "``solver``: the solver instance, :py:class:`pysph.solver.solver.Solver`."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:109
msgid "``tools``: a list of possible :py:class:`pysph.solver.tools.Tool`."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:112
#: ../docstring of pysph.base.nnps_base.CPUDomainManager:12
#: ../docstring of pysph.base.nnps_base.Cell:8
#: ../docstring of pysph.base.nnps_base.DomainManager:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase:1
#: ../docstring of pysph.base.particle_array.ParticleArray:44
msgid "Constructor"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:0
#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.run:0
#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.setup:0
#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Equation:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.BodyForce:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.ContinuityEquation:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.IsothermalEOS:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.SummationDensity:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrection:0
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPH:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.PressureGradientUsingNumberDensity:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:0
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:0
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:0
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosity:0
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:0
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.MonaghanSignalViscosityFluids:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuityEquation:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuitySolid:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationViscosity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeFromMassDensity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeSummation:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.ContinuityEquationGTVF:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.configure_solver:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.setup_properties:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStress:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStressSolid:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationViscosity:0
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.VelocityGradient:0
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:0
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder3D:0
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.ShepardFilter:0
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrection:0
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrectionPreStep:0
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.KernelCorrection:0
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedGradientCorrection:0
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHPreStep:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.configure_solver:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.setup_properties:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHUpdateGhostProps:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.NumberDensity:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SpeedOfSound:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.StateEquation:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:0
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.VelocityGradient:0
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:0
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationPressureGradient:0
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationViscosity:0
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme:0
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.configure_solver:0
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.setup_properties:0
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.Predict:0
#: ../../pysph/pysph/sph/boundary_equations.py:docstring of pysph.sph.boundary_equations.MonaghanBoundaryForce:0
#: ../../pysph/pysph/sph/boundary_equations.py:docstring of pysph.sph.boundary_equations.MonaghanKajtarBoundaryForce:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme.configure_solver:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.EnergyEquationWithStress:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.HookesDeviatoricStressRate:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.IsothermalEOS:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MomentumEquationWithStress:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress.loop:0
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.get_particle_array_elastic_dynamics:0
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.MieGruneisenEOS:0
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.StiffenedGasEOS:0
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.VonMisesPlasticity2D:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEAccelerations:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEUpdateGhostProps:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.IdealGasEOS:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.MPMAccelerations:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.MPMUpdateGhostProps:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.Monaghan92Accelerations:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ScaleSmoothingLength:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensityADKE:0
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.UpdateSmoothingLengthFromVolume:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiColorGradient:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiReproducingDivergence:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForce:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForceAdami:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientAdami:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientUsingNumberDensity:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ConstructStressMatrix:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromDensity:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromNumberDensity:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationPressureGradientAdami:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationPressureGradientMorris:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationViscosityAdami:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationViscosityMorris:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MorrisColorGradient:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11ColorGradient:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11DiracDelta:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooViscosity:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooYildizSurfaceTensionForce:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SmoothedColor:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SolidWallPressureBCnoDensity:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SummationDensitySourceMass:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SurfaceForceAdami:0
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.AdvectionAcceleration:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeAII:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeAIIBoundary:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDII:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDIIBoundary:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDIJPJ:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeRhoAdvection:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeRhoBoundary:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.setup_properties:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.NormalizedSummationDensity:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.NumberDensity:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureForce:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureForceBoundary:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureSolve:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureSolveBoundary:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.SummationDensity:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.SummationDensityBoundary:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.UpdateGhostPressure:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.UpdateGhostProps:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ViscosityAcceleration:0
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ViscosityAccelerationBoundary:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.BodyForce:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.NumberDensity:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.PressureRigidBody:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyMoments:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyMotion:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityBoundary:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityRigidBody:0
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.ViscosityRigidBody:0
#: ../../pysph/pysph/sph/misc/advection.py:docstring of pysph.sph.misc.advection.Advect:0
#: ../../pysph/pysph/sph/misc/advection.py:docstring of pysph.sph.misc.advection.MixingVelocityUpdate:0
#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:0
#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.MultiStageEquations:0
#: ../docstring of pysph.base.nnps_base.Cell:0
#: ../docstring of pysph.base.nnps_base.Cell.get_bounding_box:0
#: ../docstring of pysph.base.nnps_base.Cell.get_centroid:0
#: ../docstring of pysph.base.nnps_base.DomainManager:0
#: ../docstring of pysph.base.nnps_base.NNPSBase:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.get_nearest_particles_no_cache:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.set_context:0
#: ../docstring of pysph.base.nnps_base.get_centroid:0
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:0
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.set_context:0
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:0
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:0
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.get_nearest_particles_no_cache:0
#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS.set_context:0
#: ../docstring of pysph.base.spatial_hash_nnps.SpatialHashNNPS.set_context:0
#: ../docstring of pysph.base.particle_array.ParticleArray:0
#: ../docstring of pysph.base.particle_array.ParticleArray.add_constant:0
#: ../docstring of pysph.base.particle_array.ParticleArray.add_output_arrays:0
#: ../docstring of pysph.base.particle_array.ParticleArray.add_particles:0
#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:0
#: ../docstring of pysph.base.particle_array.ParticleArray.copy_over_properties:0
#: ../docstring of pysph.base.particle_array.ParticleArray.copy_properties:0
#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:0
#: ../docstring of pysph.base.particle_array.ParticleArray.get:0
#: ../docstring of pysph.base.particle_array.ParticleArray.get_property_arrays:0
#: ../docstring of pysph.base.particle_array.ParticleArray.remove_particles:0
#: ../docstring of pysph.base.particle_array.ParticleArray.remove_tagged_particles:0
#: ../docstring of pysph.base.particle_array.ParticleArray.set:0
#: ../docstring of pysph.base.particle_array.ParticleArray.set_output_arrays:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_gasd:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_iisph:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_rigid_body:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_swe:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_fluid:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_solid:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_wcsph:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.setup_properties:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.setup_properties:0
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:0
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.load_output:0
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup_solver:0
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.DensityCorrection:0
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.CopyNormalsandDistances:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.add_io_properties:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.create_ghost:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_equations:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_inlet_outlet:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_stepper:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.setup_iom:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.update_dx:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:0
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:0
#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:0
#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.get_files:0
#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.load:0
#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.load_and_concatenate:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.InterpolateFunction:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.InterpolateSPH:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.interpolate:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_domain:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_interpolation_points:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximation:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximationPreStep:0
#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:0
msgid "Parameters"
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:114
msgid "file name to use for the output files."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:116
msgid "output directory name."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application:118
msgid "A domain manager to use. This is used for periodic domains etc."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.add_tool:1
msgid "Add a :py:class:`pysph.solver.tools.Tool` instance to the application."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.add_user_options:1
msgid "Add any user-defined options to the given option group."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.add_user_options:3
msgid "This uses the `argparse` module."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.configure_scheme:1
msgid "This is called after :py:meth:`consume_user_options` is called. One can configure the SPH scheme here as at this point all the command line options are known."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.consume_user_options:1
msgid "This is called right after the command line arguments are parsed."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.consume_user_options:3
msgid "All the parsed options are available in ``self.options`` and can be used in this method."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.consume_user_options:6
msgid "This is meant to be overridden by users to setup any internal variables etc. that depend on the command line arguments passed.  Note that this method is called well before the solver or particles are created."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_domain:1
msgid "Create a `pysph.base.nnps_base.DomainManager` and return it if needed."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_domain:4
msgid "This is used for periodic domains etc.  Note that if the domain is passed to :py:meth:`__init__`, then this method is not called."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_equations:1
msgid "Create the equations to be used and return them."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_inlet_outlet:1
msgid "Create inlet and outlet objects and return them as a list."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_inlet_outlet:3
msgid "The method is passed a dictionary of particle arrays keyed on the name of the particle array."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_nnps:1
msgid "Create any NNPS if desired and return it, else a default NNPS will be created automatically."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_particles:1
msgid "Create particle arrays and return a list of them."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_scheme:1
msgid "Create a suitable SPH scheme and return it."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_scheme:3
msgid "Note that this method is called after the arguments are all processed and after :py:meth:`consume_user_options` is called."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_solver:1
msgid "Create the solver and return it."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.create_tools:1
msgid "Create any tools and return a sequence of them.  This method is called after particles/inlets etc. are all setup, configured etc."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.customize_output:1
msgid "Customize the output file visualization by adding any files."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.customize_output:3
msgid "For example, the pysph view command will look for a ``mayavi_config.py`` file that can be used to script the viewer. You can use self._mayavi_config('code') to add a default customization here."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.customize_output:8
msgid "Note that this is executed before the simulation starts."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.dump_code:1
msgid "Dump the generated code to given file."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.initialize:1
msgid "Called on the constructor, set constants etc. up here if needed."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.post_process:1
msgid "Given an info filename or a directory containing the info file, read the information and do any post-processing of the results.  Please overload the method to perform any processing."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.post_process:5
msgid "The info file has a few useful attributes and can be read using the :py:meth:`read_info` method."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.post_process:8
msgid "The `output_files` property should provide the output files generated."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.post_stage:1
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.Tool.post_stage:1
msgid "If overloaded, this is called automatically after each integrator stage, i.e. if the integrator is a two stage integrator it will be called after the first and second stages."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.post_stage:5
msgid "The method is passed (current_time, dt, stage). See the the :py:meth:`pysph.sph.integrator.Integrator.one_timestep` methods for examples of how this is called."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.post_step:1
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.DensityCorrection.post_step:1
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher.post_step:1
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.Tool.post_step:1
msgid "If overloaded, this is called automatically after each integrator step.  The method is passed the solver instance."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.pre_step:1
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.Tool.pre_step:1
msgid "If overloaded, this is called automatically before each integrator step.  The method is passed the solver instance."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.read_info:1
msgid "Read the information from the given info file (or directory containing the info file, the first found info file will be used)."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.run:1
msgid "Run the application."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.run:3
msgid "This basically calls ``setup()`` and then ``solve()``."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.run:5
#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.setup:9
msgid "Optional command line arguments.  Handy when running interactively."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.setup:1
msgid "Setup the application."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.setup:3
msgid "This may be used to setup the various pieces of infrastructure to run an SPH simulation, for example, this will parse the command line arguments passed, setup the scheme, solver, equations etc. It will not call the solver's solve method though. This can be useful if you wish to manually run the solver."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.solve:1
msgid "This runs the solver."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.solve:3
msgid "Note that this method expects that ``setup`` has already been called."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.Application.solve:5
msgid "Don't use this method unless you really know what you are doing."
msgstr ""

#: ../../pysph/pysph/solver/application.py:docstring of pysph.solver.application.list_all_kernels:1
msgid "Return list of available kernels."
msgstr ""

#: ../../pysph/docs/source/reference/controller.rst:2
msgid "Module controller"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller:1
msgid "Implement infrastructure for the solver to add various interfaces"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager:1
msgid "Class to manage and synchronize commands from various Controllers"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.add_function:1
msgid "add a function to to be called every `interval` iterations"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.add_interface:1
msgid "Add a callable interface to the controller"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.add_interface:3
msgid "The callable must accept an Controller instance argument. The callable is called in a new thread of its own and it can do various actions with methods defined on the Controller instance passed to it The new created thread is set to daemon mode and returned"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.cont:1
msgid "continue after a pause command"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.dispatch:1
msgid "execute/queue a command with specified arguments"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.execute_commands:1
msgid "called by the solver after each timestep"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_particle_array_combined:1
msgid "get a single particle array with combined data from all procs"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_particle_array_combined:3
#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_particle_array_from_procs:3
msgid "specifying processes is currently not implemented"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_particle_array_from_procs:1
msgid "get particle array at index from all processes"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_particle_array_index:1
msgid "get the index of the named particle array"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_particle_array_names:1
msgid "get the names of the particle arrays"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_prop:1
msgid "get a solver property"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_result:1
#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.get_result:1
msgid "get the result of a previously queued command"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_status:1
msgid "get the status of the controller"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.get_task_lock:1
msgid "get the Lock instance associated with a command"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.pause_on_next:1
msgid "pause and wait for command on the next control interval"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.set_log_level:1
msgid "set the logging level"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.set_prop:1
msgid "set a solver property"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.solver_method:1
msgid "execute a method on the solver"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.sync_commands:1
msgid "send the pending commands to all the procs in parallel run"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.CommandManager.wait_for_cmd:1
msgid "wait for command from any interface"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:1
msgid "Controller class acts a a proxy to control the solver"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:3
msgid "This is passed as an argument to the interface"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:5
msgid "**Methods available**:"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:7
msgid "get -- get the value of a solver parameter"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:8
msgid "set -- set the value of a solver parameter"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:9
msgid "get_result -- return result of a queued command"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:10
msgid "pause_on_next -- pause solver thread on next iteration"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:11
msgid "wait -- wait (block) calling thread till solver is paused (call after `pause_on_next`)"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:13
msgid "cont -- continue solver thread (call after `pause_on_next`)"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:15
msgid "Various other methods are also available as listed in :data:`CommandManager.dispatch_dict` which perform different functions."
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:18
msgid "The methods in CommandManager.active_methods do their operation and return the result (if any) immediately"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:20
msgid "The methods in CommandManager.lazy_methods do their later when solver thread is available and return a task-id. The result of the task can be obtained later using the blocking call `get_result()` which waits till result is available and returns the result. The availability of the result can be checked using the lock returned by `get_task_lock()` method"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller:27
msgid "FIXME: wait/cont currently do not work in parallel"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.cont:1
msgid "continue solver thread after it has been paused by `pause_on_next`"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.cont:3
msgid "call this only after calling the `pause_on_next` method"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.get:1
msgid "get a solver property; returns immediately"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.get_blocking:1
msgid "get the blocking mode ( True/False )"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.pause_on_next:1
msgid "pause the solver thread on next iteration"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.set:1
msgid "set a solver property; returns immediately;"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.set_blocking:1
msgid "set the blocking mode to True/False"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.set_blocking:3
msgid "In blocking mode (block=True) all methods other than getting of solver properties block until the command is executed by the solver and return the results. The blocking time can vary depending on the time taken by solver per iteration and the command_interval In non-blocking mode, these methods queue the command for later and return a string corresponding to the task_id of the operation. The result can be later obtained by a (blocking) call to get_result with the task_id as argument"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.wait:1
msgid "block the calling thread until the solver thread pauses"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.Controller.wait:3
msgid "call this only after calling the `pause_on_next` method to tell the controller to pause the solver thread"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.DummyComm:1
msgid "A dummy MPI.Comm implementation as placeholder for for serial runs"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.DummyComm.Get_rank:1
msgid "return the rank of the process (0)"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.DummyComm.Get_size:1
msgid "return the size of the comm (1)"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.DummyComm.bcast:1
msgid "bcast (broadcast) implementation for serial run"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.DummyComm.gather:1
msgid "gather implementation for serial run"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.DummyComm.recv:1
msgid "dummy recv implementation"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.DummyComm.send:1
msgid "dummy send implementation"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.in_parallel:1
msgid "return a list of results of running decorated function on all procs"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.on_root_proc:1
msgid "run the decorated function only on the root proc"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.synchronized:1
msgid "decorator for synchronized (thread safe) function"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.synchronized:3
msgid "Usage:"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.synchronized:5
msgid "sync_func = synchronized(lock)(func) # sync with an existing lock"
msgstr ""

#: ../../pysph/pysph/solver/controller.py:docstring of pysph.solver.controller.synchronized:7
msgid "sync_func = synchronized(func) # sync with a new private lock"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:2
msgid "SPH equations"
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Equation:1
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.ContinuityEquation:7
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.SummationDensity:6
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:14
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:14
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:8
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.PressureGradientUsingNumberDensity:9
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:22
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosity:1
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:10
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.MonaghanSignalViscosityFluids:1
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuityEquation:11
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuitySolid:7
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:17
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:15
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:26
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeFromMassDensity:3
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeSummation:9
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.ContinuityEquationGTVF:9
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:14
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:33
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder3D:1
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.ShepardFilter:16
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrection:12
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrectionPreStep:1
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.KernelCorrection:9
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedGradientCorrection:7
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:26
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHPreStep:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:61
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHUpdateGhostProps:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:28
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:56
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.NumberDensity:11
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SpeedOfSound:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.StateEquation:10
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:20
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:17
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationPressureGradient:9
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationViscosity:5
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.Predict:11
#: ../../pysph/pysph/sph/boundary_equations.py:docstring of pysph.sph.boundary_equations.MonaghanBoundaryForce:1
#: ../../pysph/pysph/sph/boundary_equations.py:docstring of pysph.sph.boundary_equations.MonaghanKajtarBoundaryForce:1
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.EnergyEquationWithStress:1
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.HookesDeviatoricStressRate:18
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.IsothermalEOS:6
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MomentumEquationWithStress:16
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.MieGruneisenEOS:1
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.StiffenedGasEOS:5
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.VonMisesPlasticity2D:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEAccelerations:9
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEUpdateGhostProps:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.IdealGasEOS:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.MPMAccelerations:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.MPMUpdateGhostProps:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.Monaghan92Accelerations:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ScaleSmoothingLength:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensityADKE:7
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.UpdateSmoothingLengthFromVolume:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiColorGradient:16
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiReproducingDivergence:11
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForce:13
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForceAdami:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientAdami:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientUsingNumberDensity:17
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ConstructStressMatrix:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromDensity:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromNumberDensity:10
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationPressureGradientAdami:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationPressureGradientMorris:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationViscosityAdami:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationViscosityMorris:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MorrisColorGradient:16
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11ColorGradient:14
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11DiracDelta:12
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooViscosity:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooYildizSurfaceTensionForce:14
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SmoothedColor:11
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SolidWallPressureBCnoDensity:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SummationDensitySourceMass:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SurfaceForceAdami:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.AdvectionAcceleration:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeAII:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeAIIBoundary:4
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDII:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDIIBoundary:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDIJPJ:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeRhoAdvection:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeRhoBoundary:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.NormalizedSummationDensity:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.NumberDensity:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureForce:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureForceBoundary:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureSolve:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureSolveBoundary:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.SummationDensity:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.SummationDensityBoundary:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.UpdateGhostPressure:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.UpdateGhostProps:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ViscosityAcceleration:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ViscosityAccelerationBoundary:4
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:20
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.BodyForce:1
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:20
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.NumberDensity:1
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.PressureRigidBody:6
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyMoments:1
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyMotion:1
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityBoundary:7
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityRigidBody:1
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.ViscosityRigidBody:6
#: ../../pysph/pysph/sph/misc/advection.py:docstring of pysph.sph.misc.advection.Advect:1
#: ../../pysph/pysph/sph/misc/advection.py:docstring of pysph.sph.misc.advection.MixingVelocityUpdate:1
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.CopyNormalsandDistances:3
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.InterpolateFunction:1
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.InterpolateSPH:1
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximation:15
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximationPreStep:1
msgid "name of the destination particle array"
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Equation:3
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.ContinuityEquation:9
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.SummationDensity:8
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:16
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:16
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:10
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.PressureGradientUsingNumberDensity:11
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:24
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosity:3
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:12
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.MonaghanSignalViscosityFluids:3
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuityEquation:13
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuitySolid:9
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:19
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:17
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:28
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeFromMassDensity:5
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeSummation:11
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.ContinuityEquationGTVF:11
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:16
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:35
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder3D:3
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.ShepardFilter:18
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrection:14
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrectionPreStep:3
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.KernelCorrection:11
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedGradientCorrection:9
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:28
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHPreStep:3
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:63
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHUpdateGhostProps:3
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:30
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:58
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.NumberDensity:13
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SpeedOfSound:3
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.StateEquation:12
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:22
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:19
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationPressureGradient:11
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationViscosity:7
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.Predict:13
#: ../../pysph/pysph/sph/boundary_equations.py:docstring of pysph.sph.boundary_equations.MonaghanBoundaryForce:3
#: ../../pysph/pysph/sph/boundary_equations.py:docstring of pysph.sph.boundary_equations.MonaghanKajtarBoundaryForce:3
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.EnergyEquationWithStress:3
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.HookesDeviatoricStressRate:20
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.IsothermalEOS:8
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MomentumEquationWithStress:18
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.MieGruneisenEOS:3
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.StiffenedGasEOS:7
#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.VonMisesPlasticity2D:3
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEAccelerations:11
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEUpdateGhostProps:3
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.IdealGasEOS:3
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.MPMAccelerations:3
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.MPMUpdateGhostProps:3
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.Monaghan92Accelerations:3
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ScaleSmoothingLength:3
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensityADKE:9
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.UpdateSmoothingLengthFromVolume:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiColorGradient:18
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiReproducingDivergence:13
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForce:15
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForceAdami:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientAdami:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientUsingNumberDensity:19
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ConstructStressMatrix:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromDensity:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromNumberDensity:12
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationPressureGradientAdami:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationPressureGradientMorris:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationViscosityAdami:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MomentumEquationViscosityMorris:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MorrisColorGradient:18
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11ColorGradient:16
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11DiracDelta:14
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooViscosity:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooYildizSurfaceTensionForce:16
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SmoothedColor:13
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SolidWallPressureBCnoDensity:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SummationDensitySourceMass:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SurfaceForceAdami:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.AdvectionAcceleration:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeAII:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeAIIBoundary:6
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDII:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDIIBoundary:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeDIJPJ:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeRhoAdvection:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeRhoBoundary:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.NormalizedSummationDensity:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.NumberDensity:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureForce:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureForceBoundary:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureSolve:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureSolveBoundary:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.SummationDensity:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.SummationDensityBoundary:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.UpdateGhostPressure:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.UpdateGhostProps:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ViscosityAcceleration:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ViscosityAccelerationBoundary:6
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:22
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.BodyForce:3
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:22
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.NumberDensity:3
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.PressureRigidBody:8
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyMoments:3
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyMotion:3
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityBoundary:9
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityRigidBody:3
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.ViscosityRigidBody:8
#: ../../pysph/pysph/sph/misc/advection.py:docstring of pysph.sph.misc.advection.Advect:3
#: ../../pysph/pysph/sph/misc/advection.py:docstring of pysph.sph.misc.advection.MixingVelocityUpdate:3
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.CopyNormalsandDistances:5
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.InterpolateFunction:3
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.InterpolateSPH:3
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximation:17
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximationPreStep:3
msgid "names of the source particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Equation.converged:1
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationPressureGradient.converged:1
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity.converged:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.PressureSolve.converged:1
msgid "Return > 0 to indicate converged iterations and < 0 otherwise."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations:2
msgid "Basic SPH Equations"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations:6
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPH:9
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:31
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:17
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:7
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:15
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:6
#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:4
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity:5
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf:12
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:28
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.ShepardFilter:12
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction:8
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph:6
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph:5
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic:5
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEAccelerations:4
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensityADKE:2
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator:4
#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline:20
#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.Gaussian:16
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:43
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximation:10
msgid "References"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations:7
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:32
msgid "J. Monaghan, Smoothed Particle Hydrodynamics, \"Annual Review of Astronomy and Astrophysics\", 30 (1992), pp. 543-574."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations:10
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:14
msgid "J. Monaghan, \"Smoothed particle hydrodynamics\", Reports on Progress in Physics, 68 (2005), pp. 1703-1759."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.BodyForce:1
msgid "Add a body force to the particles:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.BodyForce:3
msgid ":math:`\\boldsymbol{f} = f_x, f_y, f_z`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.BodyForce:6
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:18
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:37
msgid "Body force per unit mass along the x-axis"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.BodyForce:8
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:20
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:39
msgid "Body force per unit mass along the y-axis"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.BodyForce:10
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:22
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:41
msgid "Body force per unit mass along the z-axis"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.ContinuityEquation:1
msgid "Density rate:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.ContinuityEquation:3
msgid ":math:`\\frac{d\\rho_a}{dt} = \\sum_b m_b \\boldsymbol{v}_{ab}\\cdot \\nabla_a W_{ab}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.IsothermalEOS:1
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.IsothermalEOS:1
msgid "Compute the pressure using the Isothermal equation of state:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.IsothermalEOS:3
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.IsothermalEOS:3
msgid ":math:`p = p_0 + c_0^2(\\rho_0 - \\rho)`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.IsothermalEOS:6
msgid "Reference density of the fluid (:math:`\\rho_0`)"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.IsothermalEOS:8
msgid "Maximum speed of sound expected in the system (:math:`c0`)"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.IsothermalEOS:10
msgid "Reference pressure in the system (:math:`p0`)"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:1
msgid "Classical Monaghan style artificial viscosity [Monaghan2005]_"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:3
msgid "\\frac{d\\mathbf{v}_{a}}{dt}&=&-\\sum_{b}m_{b}\\Pi_{ab}\\nabla_{a}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:7
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:9
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:9
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:7
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:12
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:10
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationViscosity:11
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:12
#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:20
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.HookesDeviatoricStressRate:7
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MomentumEquationWithStress:8
msgid "where"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:9
msgid "\\Pi_{ab}=\\begin{cases}\\frac{-\\alpha_{\\pi}\\bar{c}_{ab}\\phi_{ab}+\n"
"\\beta_{\\pi}\\phi_{ab}^{2}}{\\bar{\\rho}_{ab}}, & \\mathbf{v}_{ab}\\cdot\n"
"\\mathbf{r}_{ab}<0\\\\0, & \\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}\\geq0\n"
"\\end{cases}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:16
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:19
msgid "with"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:18
msgid "\\phi_{ab}=\\frac{h\\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}}\n"
"{|\\mathbf{r}_{ab}|^{2}+\\epsilon^{2}}\\\\\n"
"\n"
"\\bar{c}_{ab}&=&\\frac{c_{a}+c_{b}}{2}\\\\\n"
"\n"
"\\bar{\\rho}_{ab}&=&\\frac{\\rho_{a}+\\rho_{b}}{2}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:28
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:37
msgid "produces a shear and bulk viscosity"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.MonaghanArtificialViscosity:30
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:39
msgid "used to handle high Mach number shocks"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.SummationDensity:1
msgid "Good old Summation density:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.SummationDensity:3
msgid ":math:`\\rho_a = \\sum_b m_b W_{ab}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:1
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:1
msgid "Compute the SPH evaluation for the velocity gradient tensor in 2D."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:3
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:3
msgid "The expression for the velocity gradient is:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:5
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:5
msgid ":math:`\\frac{\\partial v^i}{\\partial x^j} = \\sum_{b}\\frac{m_b}{\\rho_b}(v_b - v_a)\\frac{\\partial W_{ab}}{\\partial x_a^j}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:9
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:9
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrection:13
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:16
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:35
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:27
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:28
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:16
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:28
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:11
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:43
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:45
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:9
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:15
#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:49
#: ../docstring of pysph.base.nnps_base.get_centroid:12
#: ../docstring of pysph.base.particle_array.ParticleArray.add_particles:8
#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:21
#: ../docstring of pysph.base.particle_array.ParticleArray.align_particles:7
#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:18
#: ../docstring of pysph.base.particle_array.ParticleArray.get:12
#: ../docstring of pysph.base.particle_array.ParticleArray.get_property_arrays:11
#: ../docstring of pysph.base.particle_array.ParticleArray.remove_particles:12
#: ../docstring of pysph.base.particle_array.ParticleArray.set:7
#: ../docstring of pysph.base.particle_array.ParticleArray.set_output_arrays:7
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.load_output:9
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.solve:4
msgid "Notes"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient2D:10
msgid "The tensor properties are stored in the variables v_ij where 'i' refers to the velocity component and 'j' refers to the spatial component. Thus v_10 is :math:`\\frac{\\partial v}{\\partial x}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.VelocityGradient3D:10
msgid "The tensor properties are stored in the variables v_ij where 'i' refers to the velocity component and 'j' refers to the spatial component. Thus v_21 is :math:`\\frac{\\partial v}{\\partial x}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrection:1
msgid "Position stepping with XSPH correction [Monaghan1992]_"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrection:3
msgid "\\frac{d\\mathbf{r}_{a}}{dt}=\\mathbf{\\hat{v}}_{a}=\\mathbf{v}_{a}-\n"
"\\epsilon\\sum_{b}m_{b}\\frac{\\mathbf{v}_{ab}}{\\bar{\\rho}_{ab}}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrection:9
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:12
msgid ":math:`\\epsilon` as in the above equation"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrection:14
#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:17
msgid "This equation must be used to advect the particles. XSPH can be turned off by setting the parameter ``eps = 0``."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:1
msgid "The XSPH correction [Monaghan1992]_ alone.  This is meant to be used with a leap-frog integrator which already considers the velocity of the particles.  It simply computes the correction term and adds that to ``ax, ay, az``."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.py:docstring of pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:6
msgid "\\frac{d\\mathbf{r}_{a}}{dt}=\\mathbf{\\hat{v}}_{a}= -\n"
"\\epsilon\\sum_{b}m_{b}\\frac{\\mathbf{v}_{ab}}{\\bar{\\rho}_{ab}}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic:2
msgid "Basic WCSPH Equations"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPH:1
msgid "**Continuity equation with dissipative terms**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPH:3
msgid ":math:`\\frac{d\\rho_a}{dt} = \\sum_b \\rho_a \\frac{m_b}{\\rho_b} \\left( \\boldsymbol{v}_{ab}\\cdot \\nabla_a W_{ab} + \\delta \\eta_{ab} \\cdot \\nabla_{a} W_{ab} (h_{ab}\\frac{c_{ab}}{\\rho_a}(\\rho_b - \\rho_a)) \\right)`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPH:10
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:18
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:48
msgid "S. Marrone et al., \"delta-SPH model for simulating violent impact flows\", Computer Methods in Applied Mechanics and Engineering, 200 (2011), pp 1526--1542."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPH:14
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:35
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:28
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:22
msgid "reference speed of sound"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPH:16
msgid "coefficient used to control the intensity of diffusion of density"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:1
msgid "**Continuity equation with dissipative terms** See :class:`pysph.sph.wc.basic.ContinuityEquationDeltaSPH` The matrix :math:`L_a` is multiplied to :math:`\\nabla W_{ij}` in the :class:`pysph.sph.scheme.WCSPHScheme` class by using :class:`pysph.sph.wc.kernel_correction.GradientCorrectionPreStep` and :class:`pysph.sph.wc.kernel_correction.GradientCorrection`."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:1
msgid "**Classic Monaghan Style Momentum Equation with Artificial Viscosity**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:3
msgid "\\frac{d\\mathbf{v}_{a}}{dt}=-\\sum_{b}m_{b}\\left(\\frac{p_{b}}\n"
"{\\rho_{b}^{2}}+\\frac{p_{a}}{\\rho_{a}^{2}}+\\Pi_{ab}\\right)\n"
"\\nabla_{a}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:11
msgid "\\Pi_{ab}=\\begin{cases}\n"
"\\frac{-\\alpha\\bar{c}_{ab}\\mu_{ab}+\\beta\\mu_{ab}^{2}}{\\bar{\\rho}_{ab}} &\n"
"\\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}<0;\\\\\n"
"0 & \\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}\\geq0;\n"
"\\end{cases}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:21
msgid "\\mu_{ab}=\\frac{h\\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}}\n"
"{\\mathbf{r}_{ab}^{2}+\\eta^{2}}\\\\\n"
"\n"
"\\bar{c}_{ab} = \\frac{c_a + c_b}{2}\\\\\n"
"\n"
"\\bar{\\rho}_{ab} = \\frac{\\rho_a + \\rho_b}{2}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:41
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:47
msgid "body force per unit mass along the x-axis"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:43
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:49
msgid "body force per unit mass along the y-axis"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:45
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:51
msgid "body force per unit mass along the z-axis"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquation:47
msgid "switch for tensile instability correction (Default: False)"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:1
msgid "**Momentum equation defined in JOSEPHINE and the delta-SPH model**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:3
msgid "\\frac{du_{i}}{dt}=-\\frac{1}{\\rho_{i}}\\sum_{j}\\left(p_{j}+p_{i}\\right)\n"
"\\nabla_{i}W_{ij}V_{j}+\\mathbf{g}_{i}+\\alpha hc_{0}\\rho_{0}\\sum_{j}\n"
"\\pi_{ij}\\nabla_{i}W_{ij}V_{j}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:11
msgid "\\pi_{ij}=\\frac{\\mathbf{u}_{ij}\\cdot\\mathbf{r}_{ij}}\n"
"{|\\mathbf{r}_{ij}|^{2}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:22
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:52
msgid "J. M. Cherfils et al., \"JOSEPHINE: A parallel SPH code for free-surface flows\", Computer Physics Communications, 183 (2012), pp 1468--1480."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:26
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:20
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:31
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:23
msgid "reference density"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:30
msgid "coefficient used to control the intensity of the diffusion of velocity"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.MomentumEquationDeltaSPH:36
msgid "Artificial viscosity is used in this momentum equation and is controlled by the parameter :math:`\\alpha`. This form of the artificial viscosity is similar but not identical to the Monaghan-style artificial viscosity."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.PressureGradientUsingNumberDensity:1
msgid "Pressure gradient discretized using number density:"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.PressureGradientUsingNumberDensity:3
msgid "\\frac{d \\boldsymbol{v}_a}{dt} = -\\frac{1}{m_a}\\sum_b\n"
"(\\frac{p_a}{V_a^2} + \\frac{p_b}{V_b^2})\\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:1
msgid "**Tait equation of state for water-like fluids**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:3
msgid ":math:`p_a = \\frac{c_{0}^2\\rho_0}{\\gamma}\\left( \\left(\\frac{\\rho_a}{\\rho_0}\\right)^{\\gamma} -1\\right)`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:8
msgid "H. R. Cole, \"Underwater Explosions\", Princeton University Press, 1948."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:11
msgid "G. Batchelor, \"An Introduction to Fluid Dynamics\", Cambridge University Press, 2002."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:17
msgid "reference density of fluid particles"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:19
msgid "maximum speed of sound expected in the system"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:21
#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:24
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:22
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:47
msgid "constant"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:23
msgid "reference pressure in the system (defaults to zero)."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:28
msgid "The reference speed of sound, c0, is to be taken approximately as 10 times the maximum expected velocity in the system. The particle sound speed is given by the usual expression:"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOS:32
msgid ":math:`c_a = \\sqrt{\\frac{\\partial p}{\\partial \\rho}}`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:1
msgid "**Tait Equation of State with Hughes and Graham Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:3
msgid "p_a = \\frac{c_{0}^2\\rho_0}{\\gamma}\\left(\n"
"\\left(\\frac{\\rho_a}{\\rho_0}\\right)^{\\gamma} -1\\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:9
msgid "\\rho_{a}=\\begin{cases}\\rho_{a} & \\rho_{a}\\geq\\rho_{0}\\\\\n"
"\\rho_{0} & \\rho_{a}<\\rho_{0}\\end{cases}`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:16
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:44
msgid "J. P. Hughes and D. I. Graham, \"Comparison of incompressible and weakly-compressible SPH models for free-surface water flows\", Journal of Hydraulic Research, 48 (2010), pp. 105-117."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.TaitEOSHGCorrection:29
msgid "The correction is to be applied on boundary particles and imposes a minimum value of the density (rho0) which is set upon instantiation. This correction avoids particle sticking behaviour at walls."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:1
msgid "**Update the particle smoothing lengths**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:3
msgid ":math:`h_a = hdx \\left(\\frac{m_a}{\\rho_a}\\right)^{\\frac{1}{d}}`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:7
msgid "A. Ferrari et al., \"A new 3D parallel SPH scheme for free surface flows\", Computers and Fluids, 38 (2009), pp. 1203--1217."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:10
msgid "number of dimensions"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:12
msgid "scaling factor"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:17
msgid "Ideally, the kernel scaling factor should be determined from the kernel used based on a linear stability analysis. The default value of (hdx=1) reduces to the formulation suggested by Ferrari et al. who used a Cubic Spline kernel."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:22
msgid "Typically, a change in the smoothing length should mean the neighbors are re-computed which in PySPH means the NNPS must be updated. This equation should therefore be placed as the last equation so that after the final corrector stage, the smoothing lengths are updated and the new NNPS data structure is computed."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.py:docstring of pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:28
msgid "Note however that since this is to be used with incompressible flow equations, the density variations are small and hence the smoothing lengths should also not vary too much."
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity:1
msgid "Viscosity functions"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:1
msgid "Artificial viscosity proposed By P. Cleary:"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:3
msgid "\\mathcal{Pi}_{ab} = -\\frac{16}{\\mu_a \\mu_b}{\\rho_a \\rho_b\n"
"(\\mu_a + \\mu_b)}\\left( \\frac{\\boldsymbol{v}_{ab} \\cdot\n"
"\\boldsymbol{r}_{ab}}{\\boldsymbol{r}_{ab}^2 + \\epsilon} \\right),"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:9
msgid "where the viscosity is determined from the parameter :math:`\\alpha` as"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:12
msgid "\\mu_a = \\frac{1}{8}\\alpha h_a c_a \\rho_a"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:16
msgid "This equation is described in the 2005 review paper by Monaghan"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.ClearyArtificialViscosity:18
msgid "J. J. Monaghan, \"Smoothed Particle Hydrodynamics\", Reports on Progress in Physics, 2005, 68, pp 1703--1759 [JM05]"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:1
msgid "See section 2 of the below reference [Sun2017]"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.py:docstring of pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:5
msgid "P. Sun, A. Colagrossi, S. Marrone, A. Zhang \"The $\\delta$ plus-SPH model: simple procedures for a further improvement of the SPH scheme\", Computer Methods in Applied Mechanics and Engineering 315 (2017), pp. 25-49."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity:2
msgid "Transport Velocity Formulation"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity:6
msgid "S. Adami et. al \"A generalized wall boundary condition for smoothed particle hydrodynamics\", Journal of Computational Physics (2012), pp. 7057--7075."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity:10
msgid "S. Adami et. al \"A transport-velocity formulation for smoothed particle hydrodynamics\", Journal of Computational Physics (2013), pp. 292--307."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuityEquation:1
msgid "**Conservation of mass equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuityEquation:3
msgid "Eq (6) in [Adami2012]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuityEquation:5
msgid "\\frac{d\\rho_a}{dt} = \\rho_a \\sum_b \\frac{m_b}{\\rho_b}\n"
"\\boldsymbol{v}_{ab} \\cdot \\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuitySolid:1
msgid "Continuity equation for the solid's ghost particles."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.ContinuitySolid:3
msgid "The key difference is that we use the ghost velocity ug, and not the particle velocity u."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:1
msgid "**Artificial stress contribution to the Momentum Equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:3
msgid "\\frac{d\\boldsymbol{v}_a}{dt} = \\frac{1}{m_a}\\sum_b (V_a^2 +\n"
"V_b^2)\\left[ \\frac{1}{2}(\\boldsymbol{A}_a +\n"
"\\boldsymbol{A}_b) : \\nabla_a W_{ab}\\right]"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:9
msgid "where the artificial stress terms are given by:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:11
msgid "  \\boldsymbol{A} = \\rho \\boldsymbol{v} (\\tilde{\\boldsymbol{v}}\n"
"- \\boldsymbol{v})"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:1
msgid "**Artificial viscosity for the momentum equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:3
msgid "Eq. (11) in [Adami2012]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:5
msgid "\\frac{d \\boldsymbol{v}_a}{dt} = -\\sum_b m_b \\alpha h_{ab}\n"
"c_{ab} \\frac{\\boldsymbol{v}_{ab}\\cdot\n"
"\\boldsymbol{r}_{ab}}{\\rho_{ab}\\left(|r_{ab}|^2 + \\epsilon\n"
"\\right)}\\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:14
msgid "\\rho_{ab} = \\frac{\\rho_a + \\rho_b}{2}\\\\\n"
"\n"
"c_{ab} = \\frac{c_a + c_b}{2}\\\\\n"
"\n"
"h_{ab} = \\frac{h_a + h_b}{2}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:24
msgid "speed of sound"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:1
msgid "**Momentum equation for the Transport Velocity Formulation: Pressure**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:3
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationViscosity:3
msgid "Eq. (8) in [Adami2013]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:5
msgid "\\frac{d \\boldsymbol{v}_a}{dt} = \\frac{1}{m_a}\\sum_b (V_a^2 +\n"
"V_b^2)\\left[-\\bar{p}_{ab}\\nabla_a W_{ab} \\right]"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:12
msgid "\\bar{p}_{ab} = \\frac{\\rho_b p_a + \\rho_a p_b}{\\rho_a + \\rho_b}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:16
msgid "background pressure"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:24
msgid "damping time"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:29
msgid "This equation should have the destination as fluid and sources as fluid and boundary particles."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:32
msgid "This function also computes the contribution to the background pressure and accelerations due to a body force or gravity."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:35
msgid "The body forces are damped according to Eq. (13) in [Adami2012] to avoid instantaneous accelerations. By default, damping is neglected."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationViscosity:1
msgid "**Momentum equation for the Transport Velocity Formulation: Viscosity**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationViscosity:5
msgid "\\frac{d \\boldsymbol{v}_a}{dt} = \\frac{1}{m_a}\\sum_b (V_a^2 +\n"
"V_b^2)\\left[ \\bar{\\eta}_{ab}\\hat{r}_{ab}\\cdot \\nabla_a W_{ab}\n"
"\\frac{\\boldsymbol{v}_{ab}}{|\\boldsymbol{r}_{ab}|}\\right]"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationViscosity:13
msgid "\\bar{\\eta}_{ab} = \\frac{2\\eta_a \\eta_b}{\\eta_a + \\eta_b}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.MomentumEquationViscosity:17
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:39
msgid "kinematic viscosity"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:1
msgid "**Extrapolating the fluid velocity on to the wall**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:3
msgid "Eq. (22) in [Adami2012]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:5
msgid "\\tilde{\\boldsymbol{v}}_a = \\frac{\\sum_b\\boldsymbol{v}_b W_{ab}}\n"
"{\\sum_b W_{ab}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SetWallVelocity:12
msgid "The destination particle array for this equation should define the *filtered* velocity variables :math:`uf, vf, wf`."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:1
msgid "**Solid wall boundary condition** [Adami2012]_"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:3
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:3
msgid "This boundary condition is to be used with fixed ghost particles in SPH simulations and is formulated for the general case of moving boundaries."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:7
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:7
msgid "The velocity and pressure of the fluid particles is extrapolated to the ghost particles and these values are used in the equations of motion."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:11
msgid "No-penetration:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:13
msgid "Ghost particles participate in the continuity and state equations with fluid particles. This means as fluid particles approach the wall, the pressure of the ghost particles increases to generate a repulsion force that prevents particle penetration."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:18
msgid "No-slip:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:20
msgid "Extrapolation is used to set the `dummy` velocity of the ghost particles for viscous interaction. First, the smoothed velocity field of the fluid phase is extrapolated to the wall particles:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:24
msgid "\\tilde{v}_a = \\frac{\\sum_b v_b W_{ab}}{\\sum_b W_{ab}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:28
msgid "In the second step, for the viscous interaction in Eqs. (10) in [Adami2012] and Eq. (8) in [Adami2013], the velocity of the ghost particles is assigned as:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:32
msgid "v_b = 2v_w -\\tilde{v}_a,"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:36
msgid "where :math:`v_w` is the prescribed wall velocity and :math:`v_b` is the ghost particle in the interaction."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:44
msgid "For this equation the destination particle array should be the fluid and the source should be ghost or boundary particles. The boundary particles must define a prescribed velocity :math:`u_0, v_0, w_0`"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:1
msgid "**Solid wall pressure boundary condition** [Adami2012]_"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:11
msgid "Pressure boundary condition:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:13
msgid "The pressure of the ghost particle is also calculated from the fluid particle by interpolation using:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:16
msgid "p_g = \\frac{\\sum_f p_f W_{gf} + \\boldsymbol{g - a_g} \\cdot\n"
"\\sum_f \\rho_f \\boldsymbol{r}_{gf}W_{gf}}{\\sum_f W_{gf}},"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:21
msgid "where the subscripts `g` and `f` relate to the ghost and fluid particles respectively."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:24
msgid "Density of the wall particle is then set using this pressure"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:26
msgid "\\rho_w=\\rho_0\\left(\\frac{p_w - \\mathcal{X}}{p_0} +\n"
"1\\right)^{\\frac{1}{\\gamma}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:33
#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:21
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:45
msgid "reference pressure"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:35
msgid "constant (default 1.0)"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:46
msgid "For a two fluid system (boundary, fluid), this equation must be instantiated with boundary as the destination and fluid as the source."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SolidWallPressureBC:50
msgid "The boundary particle array must additionally define a property :math:`wij` for the denominator in Eq. (27) from [Adami2012]. This array sums the kernel terms from the ghost particle to the fluid particle."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:1
msgid "**Generalized Weakly Compressible Equation of State**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:3
msgid "p_a = p_0\\left[ \\left(\\frac{\\rho}{\\rho_0}\\right)^\\gamma - b\n"
"\\right] + \\mathcal{X}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:10
msgid "This is the generalized Tait's equation of state and the suggested values in [Adami2013] are :math:`\\mathcal{X} = 0`, :math:`\\gamma=1` and :math:`b = 1`."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:14
msgid "The reference pressure :math:`p_0` is calculated from the artificial sound speed and reference density:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:17
msgid "p_0 = \\frac{c^2\\rho_0}{\\gamma}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.StateEquation:25
msgid "constant (default 1.0)."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:1
msgid "**Summation density with volume summation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:3
msgid "In addition to the standard summation density, the number density for the particle is also computed. The number density is important for multi-phase flows to define a local particle volume independent of the material density."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:8
msgid "\\rho_a = \\sum_b m_b W_{ab}\\\\\n"
"\n"
"\\mathcal{V}_a = \\frac{1}{\\sum_b W_{ab}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:16
msgid "Note that in the pysph implementation, V is the inverse volume of a particle, i.e. the equation computes V as follows:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:19
msgid "\\mathcal{V}_a = \\sum_b W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.SummationDensity:23
msgid "For this equation, the destination particle array must define the variable `V` for particle volume."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeFromMassDensity:1
msgid "**Set the inverse volume using mass density**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeSummation:1
msgid "**Number density for volume computation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeSummation:3
msgid "See `SummationDensity`"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.py:docstring of pysph.sph.wc.transport_velocity.VolumeSummation:5
msgid "Note that the quantity `V` is really :math:`\\sigma` of the original paper, i.e. inverse of the particle volume."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf:2
msgid "Generalized Transport Velocity Formulation"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf:4
msgid "Some notes on the paper,"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf:6
msgid "In the viscosity term of equation (17) a factor of '2' is missing."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf:7
msgid "A negative sign is missing from equation (22) i.e, either put a negative sign in equation (22) or at the integrator step equation(25)."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf:9
msgid "The Solid Mechanics Equations are not tested."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf:13
msgid "Chi Zhang, Xiangyu Y. Hu, Nikolaus A. Adams \"A generalized transport-velocity formulation for smoothed particle hydrodynamics\", Journal of Computational Physics 237 (2017), pp. 216--232."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.ContinuityEquationGTVF:1
msgid "**Evolution of density**"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.ContinuityEquationGTVF:3
msgid "From [ZhangHuAdams2017], equation (12),"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.ContinuityEquationGTVF:5
msgid "\\frac{\\tilde{d} \\rho_i}{dt} = \\rho_i \\sum_j \\frac{m_j}{\\rho_j}\n"
"\\nabla W_{ij} \\cdot \\tilde{\\boldsymbol{v}}_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:1
msgid "**Density correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:3
msgid "From [ZhangHuAdams2017], equation (13),"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:5
msgid "\\rho_i = \\frac{\\sum_j m_j W_{ij}}\n"
"{\\min(1, \\sum_j \\frac{m_j}{\\rho_j^{*}} W_{ij})}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:9
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:11
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:13
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:33
#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:11
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:18
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:20
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:10
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:9
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:8
msgid "where,"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.CorrectDensity:11
msgid "\\rho_j^{*} = \\text{density before this correction is applied.}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:1
msgid "**Stress rate for solids**"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:3
msgid "From [ZhangHuAdams2017], equation (5),"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:5
msgid "\\frac{d \\boldsymbol{\\sigma}'}{dt} = 2 G (\\boldsymbol{\\epsilon}\n"
"- \\frac{1}{3} \\text{Tr}(\\boldsymbol{\\epsilon})\\textbf{I}) +\n"
"\\boldsymbol{\\sigma}' \\cdot \\boldsymbol{\\Omega}^{T} +\n"
"\\boldsymbol{\\Omega} \\cdot \\boldsymbol{\\sigma}'\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:13
msgid "\\boldsymbol{\\Omega_{i/j}} = \\frac{1}{2}\n"
"\\left(\\nabla \\otimes \\boldsymbol{v}_{i/j} -\n"
"(\\nabla \\otimes \\boldsymbol{v}_{i/j})^{T}\\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:18
msgid "\\boldsymbol{\\epsilon_{i/j}} = \\frac{1}{2}\n"
"\\left(\\nabla \\otimes \\boldsymbol{v}_{i/j} +\n"
"(\\nabla \\otimes \\boldsymbol{v}_{i/j})^{T}\\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:23
msgid "see the class VelocityGradient for :math:`\\nabla \\otimes \\boldsymbol{v}_i`"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:25
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:5
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStress:5
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStressSolid:5
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.VelocityGradient:7
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:60
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme:5
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme:5
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:7
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme:15
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:5
msgid "Dimensionality of the problem."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.DeviatoricStressRate:27
msgid "value of shear modulus"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator:1
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:33
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator:4
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator:4
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator:13
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator:14
msgid "Pass fluid names and suitable `IntegratorStep` instances."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator:3
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator:3
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:35
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator:16
msgid "For example::"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator:7
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator:7
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator:7
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:39
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator:7
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator:20
msgid "where \"fluid\" and \"solid\" are the names of the particle arrays."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:1
msgid "User written function that actually does one timestep."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:3
msgid "This function is used in the high-performance Cython implementation. The assumptions one may make are the following:"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:6
msgid "t and dt are passed."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:8
msgid "the following methods are available:"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:10
msgid "self.initialize()"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:12
msgid "self.stage1(), self.stage2() etc. depending on the number of stages available."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:15
msgid "self.compute_accelerations(index=0, update_nnps=True)"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:16
msgid "self.do_post_stage(stage_dt, stage_count_from_1)"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:17
msgid "self.update_domain()"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EulerIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator.one_timestep:19
msgid "Please see any of the concrete implementations of the Integrator class to study.  By default the Integrator implements a predict-evaluate-correct method, the same as PECIntegrator."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:1
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme:1
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme:11
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:1
msgid "List of names of fluid particle arrays."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:5
msgid "List of names of solid particle arrays."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:7
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:7
msgid "Reference density."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:9
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:9
msgid "Reference speed of sound."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:11
msgid "Real viscosity of the fluid."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:13
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:13
msgid "Reference smoothing length."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:15
msgid "reference pressure for rate of change of transport velocity."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:17
msgid "Body force acceleration components in x direction."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:19
msgid "Body force acceleration components in y direction."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:21
msgid "Body force acceleration components in z direction."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme:23
msgid "constant for the equation of state."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.configure_solver:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.configure_solver:1
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.configure_solver:1
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme.configure_solver:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.configure_solver:1
msgid "Configure the solver to be generated."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.configure_solver:3
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.configure_solver:3
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.configure_solver:3
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme.configure_solver:3
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:7
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure_solver:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.configure_solver:3
msgid "Kernel to use, if none is passed a default one is used."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.configure_solver:5
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.configure_solver:5
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.configure_solver:5
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme.configure_solver:5
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:9
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure_solver:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.configure_solver:5
msgid "Integrator class to use, use sensible default if none is passed."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.configure_solver:8
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.configure_solver:8
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.configure_solver:8
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme.configure_solver:8
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:12
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure_solver:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.configure_solver:8
msgid "Additional integration stepper instances as a dict."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.configure_solver:10
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.configure_solver:10
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.configure_solver:10
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme.configure_solver:10
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:14
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure_solver:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.configure_solver:10
msgid "Any additional keyword args are passed to the solver instance."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.setup_properties:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.setup_properties:1
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.setup_properties:1
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.setup_properties:1
msgid "Setup the particle arrays so they have the right set of properties for this scheme."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.setup_properties:4
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.setup_properties:4
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.setup_properties:4
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.setup_properties:4
msgid "List of particle arrays."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.GTVFScheme.setup_properties:6
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme.setup_properties:6
#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme.setup_properties:6
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme.setup_properties:6
msgid "If True, removes any unnecessary properties."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStress:1
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStressSolid:1
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationViscosity:1
msgid "**Momentum equation Artificial stress for solids**"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStress:3
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationArtificialStressSolid:3
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationViscosity:3
msgid "See the class MomentumEquationPressureGradient for details."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:1
msgid "**Momentum Equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:3
msgid "From [ZhangHuAdams2017], equation (17),"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:5
msgid "\\frac{\\tilde{d} \\boldsymbol{v}_i}{dt} = - \\sum_j m_j \\nabla W_{ij}\n"
"\\cdot \\left[\\left(\\frac{p_i}{\\rho_i^2} + \\frac{p_j}{\\rho_j^2}\n"
"\\right)\\textbf{I} - \\left(\\frac{\\boldsymbol{A_i}}{\\rho_i^2} +\n"
"\\frac{\\boldsymbol{A_j}}{\\rho_j^2} \\right)\\right] + \\sum_j\n"
"\\frac{\\eta_{ij}\\boldsymbol{v}_{ij}}{\\rho_i \\rho_j r_{ij}}\n"
"\\nabla W_{ij} \\cdot \\boldsymbol{x}_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:15
msgid "\\boldsymbol{A_{i/j}} = \\rho_{i/j} \\boldsymbol{v}_{i/j} \\otimes\n"
"(\\tilde{\\boldsymbol{v}}_{i/j} - \\boldsymbol{v}_{i/j})\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:19
msgid "\\eta_{ij} = \\frac{2\\eta_i \\eta_j}{\\eta_i + \\eta_j}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:21
msgid "\\eta_{i/j} = \\rho_{i/j} \\nu\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:24
msgid "for solids, replace :math:`\\boldsymbol{A}_{i/j}` with :math:`\\boldsymbol{\\sigma}'_{i/j}`."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:27
msgid "The rate of change of transport velocity is given by,"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:29
msgid "(\\frac{d\\boldsymbol{v}_i}{dt})_c = -p_i^0 \\sum_j \\frac{m_j}\n"
"{\\rho_i^2} \\nabla \\tilde{W}_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:35
msgid "\\tilde{W}_{ij} = W(\\boldsymbol{x}_ij, \\tilde{0.5 h_{ij}})\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:37
msgid "p_i^0 = \\min(10|p_i|, p_{ref})\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:40
#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationViscosity:5
#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:17
#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VerletSymplecticWCSPHStep:7
msgid "Notes:"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationPressureGradient:42
msgid "A negative sign in :math:`(\\frac{d\\boldsymbol{v}_i}{dt})_c` is missing in the paper [ZhangHuAdams2017]."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationViscosity:7
msgid "A factor of '2' is missing in the viscosity equation given by [ZhangHuAdams2017]."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.MomentumEquationViscosity:10
msgid "viscosity of the fluid."
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.VelocityGradient:1
msgid "**Gradient of velocity vector**"
msgstr ""

#: ../../pysph/pysph/sph/wc/gtvf.py:docstring of pysph.sph.wc.gtvf.VelocityGradient:3
msgid "(\\nabla \\otimes \\tilde{\\boldsymbol{v}})_i = \\sum_j \\frac{m_j}\n"
"{\\rho_j} \\tilde{\\boldsymbol{v}}_{ij} \\otimes \\nabla W_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:1
msgid "**Moving Least Squares density reinitialization** This is a first order density reinitialization"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:4
msgid "W_{ab}^{MLS} = \\beta\\left(\\mathbf{r_{a}}\\right)\\cdot\\left(\n"
"\\mathbf{r}_a - \\mathbf{r}_b\\right)W_{ab}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:8
msgid "\\beta\\left(\\mathbf{r_{a}}\\right) = A^{-1}\n"
"\\left[1 0 0\\right]^{T}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:14
msgid "A = \\sum_{b}W_{ab}\\tilde{A}\\frac{m_{b}}{\\rho_{b}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:17
msgid "\\tilde{A} = pp^{T}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:22
msgid "p = \\left[1 x_{a}-x_{b} y_{a}-y_{b}\\right]^{T}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.MLSFirstOrder2D:25
msgid "\\rho_{a} = \\sum_{b} \\m_{b}W_{ab}^{MLS}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.ShepardFilter:1
msgid "**Shepard Filter density reinitialization** This is a zeroth order density reinitialization"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.ShepardFilter:4
msgid "\\tilde{W_{ab}} = \\frac{W_{ab}}{\\sum_{b} W_{ab}\\frac{m_{b}}\n"
"{\\rho_{b}}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.py:docstring of pysph.sph.wc.density_correction.ShepardFilter:8
msgid "\\rho_{a} = \\sum_{b} \\m_{b}\\tilde{W_{ab}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction:2
msgid "Kernel Corrections"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction:4
msgid "These are the equations for the kernel corrections that are mentioned in the paper by Bonet and Lok [BonetLok1999]."
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction:9
msgid "Bonet, J. and Lok T.-S.L. (1999) Variational and Momentum Preservation Aspects of Smoothed Particle Hydrodynamic Formulations."
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrection:1
msgid "**Kernel Gradient Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrection:3
msgid "From [BonetLok1999], equations (42) and (45)"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrection:5
msgid "\\nabla \\tilde{W}_{ab} = L_{a}\\nabla W_{ab}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.GradientCorrection:8
msgid "L_{a} = \\left(\\sum \\frac{m_{b}}{\\rho_{b}} \\nabla W_{ab}\n"
"\\mathbf{\\otimes}x_{ba} \\right)^{-1}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.KernelCorrection:1
msgid "**Kernel Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.KernelCorrection:3
msgid "From [BonetLok1999], equation (53):"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.KernelCorrection:5
msgid "\\mathbf{f}_{a} = \\frac{\\sum_{b}\\frac{m_{b}}{\\rho_{b}}\n"
"\\mathbf{f}_{b}W_{ab}}{\\sum_{b}\\frac{m_{b}}{\\rho_{b}}W_{ab}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedGradientCorrection:1
msgid "**Mixed Kernel Gradient Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedGradientCorrection:3
msgid "This is as per [BonetLok1999]. See the MixedKernelCorrectionPreStep for the equations."
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:1
msgid "**Mixed Kernel Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:3
msgid "From [BonetLok1999], equations (54), (57) and (58)"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:5
msgid "\\tilde{W}_{ab} = \\frac{W_{ab}}{\\sum_{b} V_{b}W_{ab}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:8
msgid "\\nabla \\tilde{W}_{ab} = L_{a}\\nabla \\bar{W}_{ab}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:13
msgid "L_{a} = \\left(\\sum_{b} V_{b} \\nabla \\bar{W}_{ab}\n"
"\\mathbf{\\otimes}x_{ba} \\right)^{-1}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:17
msgid "\\nabla \\bar{W}_{ab} = \\frac{\\nabla W_{ab} - \\gamma}\n"
"{\\sum_{b} V_{b}W_{ab}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.py:docstring of pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:21
msgid "\\gamma = \\frac{\\sum_{b} V_{b}\\nabla W_{ab}}\n"
"{\\sum_{b} V_{b}W_{ab}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph:1
msgid "CRKSPH corrections"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph:3
msgid "These are equations for the basic kernel corrections in [CRKSPH2017]."
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph:7
msgid "Nicholas Frontiere, Cody D. Raskin, J. Michael Owen \"CRKSPH - A Conservative Reproducing Kernel Smoothed Particle Hydrodynamics Scheme\", Journal of Computational Physics 332 (2017), pp. 160--209."
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:1
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:1
msgid "**Conservative Reproducing Kernel SPH**"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:3
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:5
msgid "Equations from the paper [CRKSPH2017]."
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:5
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:7
msgid "W_{ij}^{R} = A_{i}\\left(1+B_{i}^{\\alpha}x_{ij}^{\\alpha}\n"
"\\right)W_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:8
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:10
msgid "\\partial_{\\gamma}W_{ij}^{R} = A_{i}\\left(1+B_{i}^{\\alpha}\n"
"x_{ij}^{\\alpha}\\right)\\partial_{\\gamma}W_{ij} +\n"
"\\partial_{\\gamma}A_{i}\\left(1+B_{i}^{\\alpha}x_{ij}^{\\alpha}\n"
"\\right)W_{ij} + A_{i}\\left(\\partial_{\\gamma}B_{i}^{\\alpha}\n"
"x_{ij}^{\\alpha} + B_{i}^{\\gamma}\\right)W_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:14
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:16
msgid "\\nabla\\tilde{W}_{ij} = 0.5 * \\left(\\nabla W_{ij}^{R}-\\nabla\n"
" W_{ji}^{R} \\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:20
msgid "A_{i} = \\left[m_{0} - \\left(m_{2}^{-1}\\right)^{\\alpha \\beta}\n"
"m_1^{\\beta}m_1^{\\alpha}\\right]^{-1}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:23
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:25
msgid "B_{i}^{\\alpha} = -\\left(m_{2}^{-1}\\right)^{\\alpha \\beta}\n"
"m_{1}^{\\beta}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:26
msgid "\\partial_{\\gamma}A_{i} = -A_{i}^{2}\\left(\\partial_{\\gamma}\n"
"m_{0}-\\left(m_{2}^{-1}\\right)^{\\alpha \\beta}\\left(\n"
"m_{1}^{\\beta}\\partial_{\\gamma}m_{1}^{\\alpha} +\n"
"\\partial_{\\gamma}m_{1}^{\\beta}m_{1}^{\\alpha}\\right) +\n"
"\\left(m_{2}^{-1}\\right)^{\\alpha \\phi}\\partial_{\\gamma}\n"
"m_{2}^{\\phi \\psi}\\left(m_{2}^{-1}\\right)^{\\psi \\beta}\n"
"m_{1}^{\\beta}m_{1}^{\\alpha} \\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:34
msgid "\\partial_{\\gamma}B_{i}^{\\alpha} = -\\left(m_{2}^{-1}\\right)^\n"
"{\\alpha \\beta}\\partial_{\\gamma}m_{1}^{\\beta} +\n"
"\\left(m_{2}^{-1}\\right)^\n"
"{\\alpha \\phi}\\partial_{\\gamma}m_{2}^{\\phi \\psi}\\left(m_{2}^\n"
"{-1}\\right)^{\\psi \\beta}m_{1}^{\\beta}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:40
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:41
msgid "m_{0} = \\sum_{j}V_{j}W_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:42
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:43
msgid "m_{1}^{\\alpha} = \\sum_{j}V_{j}x_{ij}^{\\alpha}W_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:44
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:45
msgid "m_{2}^{\\alpha \\beta} = \\sum_{j}V_{j}x_{ij}^{\\alpha}\n"
"x_{ij}^{\\beta}W_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:47
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:48
msgid "\\partial_{\\gamma}m_{0} = \\sum_{j}V_{j}\\partial_{\\gamma}\n"
"W_{ij}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:50
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:51
msgid "\\partial_{\\gamma}m_{1}^{\\alpha} = \\sum_{j}V_{j}\\left[\n"
"x_{ij}^{\\alpha}\\partial_{\\gamma}W_{ij}+\\delta^\n"
"{\\alpha \\gamma}W_{ij} \\right]\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:54
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:55
msgid "\\partial_{\\gamma}m_{2}^{\\alpha \\beta} = \\sum_{j}V_{j}\\left[\n"
"x_{ij}^{\\alpha}x_{ij}^{\\beta}\\partial_{\\gamma}W_{ij} +\n"
"\\left(x_{ij}^{\\alpha}\\delta^{\\beta \\gamma} + x_{ij}^{\\beta}\n"
"\\delta^{\\alpha \\gamma} \\right)W_{ij} \\right]\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPH:62
msgid "Tolerence value to decide std or corrected kernel"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:1
msgid "a list with names of fluid particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHScheme:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:3
msgid "a list with names of solid (or boundary) particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:3
msgid "This is symmetric and will only work for particles of the same array."
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:22
msgid "A_{i} = \\left[m_{0} - \\left(m_{2}^{-1}\\right)^{\\alpha \\beta}\n"
"m1_{\\beta}m1_{\\alpha}\\right]^{-1}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:28
msgid "\\partial_{\\gamma}A_{i} = -A_{i}^{2}\\left(\\partial_{\\gamma}\n"
"m_{0}-\\left[m_{2}^{-1}\\right]^{\\alpha \\beta}\\left[\n"
"m_{1}^{\\beta}\\partial_{\\gamma}m_{1}^{\\beta}m_{1}^{\\alpha} +\n"
"\\partial_{\\gamma}m_{1}^{\\alpha}m_{1}^{\\beta}\\right] +\n"
"\\left[m_{2}^{-1}\\right]^{\\alpha \\phi}\\partial_{\\gamma}\n"
"m_{2}^{\\phi \\psi}\\left[m_{2}^{-1}\\right]^{\\psi \\beta}\n"
"m_{1}^{\\beta}m_{1}^{\\alpha} \\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.CRKSPHSymmetric:36
msgid "\\partial_{\\gamma}B_{i}^{\\alpha} = -\\left(m_{2}^{-1}\\right)^ {\\alpha\n"
"\\beta}\\partial_{\\gamma}m_{1}^{\\beta} + \\left(m_{2}^{-1}\\right)^\n"
"{\\alpha \\phi}\\partial_{\\gamma}m_{2}^{\\phi \\psi}\\left(m_{2}^\n"
"{-1}\\right)^{\\psi \\beta}m_{1}^{\\beta}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:1
msgid "**Energy Equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:3
msgid "From [CRKSPH2017], equation (66):"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:5
msgid "\\Delta u_{ij} = \\frac{f_{ij}}{2}\\left(v_j^{\\alpha}(t) + v_j^{\\alpha}(t\n"
"+ \\Delta t) - v_i^{\\alpha}(t) - v_i^{\\alpha}(t + \\Delta t)\\right)\n"
"\\frac{Dv_{ij}^{\\alpha}}{Dt}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:10
msgid "f_{ij} = \\begin{cases}\n"
"1/2 &|s_i - s_j| = 0,\\\\\n"
"s_{\\min} / (s_{\\min} + s_{\\max}) &\\Delta u_{ij}\\times(s_i - s_j) > 0\\\\\n"
"s_{\\max} / (s_{\\min} + s_{\\max}) &\\Delta u_{ij}\\times(s_i - s_j) < 0\\\\\n"
"\\end{cases}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:17
msgid "s_{\\min} = \\min(|s_i|, |s_j|)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:20
msgid "s_{\\max} = \\max(|s_i|, |s_j|)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:23
msgid "s_{i/j} = \\frac{p_{i/j}}{\\rho_{i/j}^\\gamma}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.EnergyEquation:26
msgid "see MomentumEquation for :math:`\\frac{Dv_{ij}^{\\alpha}}{Dt}`"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:3
msgid "From [CRKSPH2017], equation (64):"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:5
msgid "\\frac{Dv_{i}^{\\alpha}}{Dt} = -\\frac{1}{2 m_i}\\sum_{j} V_i V_j (P_i\n"
"+ P_j + Q_i + Q_j)\n"
"(\\partial_{\\alpha}W_{ij}^R - \\partial_{\\alpha} W_{ji}^R)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:12
msgid "V_{i/j} = \\text{dest/source particle number density}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:15
msgid "P_{i/j} = \\text{dest/source particle pressure}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:18
msgid "Q_i = \\rho_{i} (-C_{l} c_{i} \\mu_{i} + C_{q} \\mu_{i}^{2})\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:21
msgid "\\mu_i = \\min \\left(0, \\frac{\\hat{v}_{ij}\n"
"\\eta_{i}^{\\alpha}}{\\eta_{i}^{\\alpha}\\eta_{i}^{\\alpha}\n"
"+ \\epsilon^{2}}\\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:26
msgid "\\hat{v}_{ij}^{\\alpha} = v_{i}^{\\alpha} - v_{j}^{\\alpha}\n"
"- \\frac{\\phi_{ij}}{2}\\left(\\partial_{\\beta} v_i^{\\alpha}\n"
"+ \\partial_{\\beta}v_j^{\\alpha}\\right) x_{ij}^{\\beta}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:31
msgid "\\phi_{ij} = \\max \\left[0, \\min \\left[1, \\frac{4r_{ij}}{(1\n"
"+ r_{ij})^2}\\right]\\right] \\times\n"
"\\begin{cases}\n"
"\\exp{\\left[-\\left((\\eta_{ij}\n"
"- \\eta_{crit})/\\eta_{fold}\\right)^2\\right]}, &\\eta_{ij} < \\eta_{crit}\n"
"\\\\\n"
"1, &  \\eta_{ij} >= \\eta_{crit}\n"
"\\end{cases}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:41
msgid "\\eta_{ij} = \\min(\\eta_i, \\eta_j)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:44
msgid "\\eta_{i/j} = (x_{ij}^{\\alpha} x_{ij}^{\\alpha})^{1/2} / h_{i/j}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:47
msgid "r_{ij} = \\frac{\\partial_{\\beta} v_i^{\\alpha} x_{ij}^{\\alpha}\n"
"x_{ij}^{\\beta}}{\\partial_{\\beta} v_j^{\\alpha}x_{ij}^{\\alpha}\n"
"x_{ij}^{\\beta}}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.MomentumEquation:52
#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.VelocityGradient:5
msgid "\\partial_{\\beta} v_i^{\\alpha} = -\\sum_j V_j v_{ij}^{\\alpha}\n"
"\\partial_{\\beta} W_{ij}^R\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.NumberDensity:1
msgid "**Number Density**"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.NumberDensity:3
msgid "From [CRKSPH2017], equation (75):"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.NumberDensity:5
msgid "V_{i}^{-1} = \\sum_{j} W_{i}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.NumberDensity:8
msgid "Note that the quantity `V` is the inverse of particle volume, so when using in the equation use :math:`\\frac{1}{V}`."
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.StateEquation:1
msgid "**State Equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.StateEquation:3
msgid "State equation for ideal gas, from [CRKSPH2017] equation (77):"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.StateEquation:5
msgid "p_i = (\\gamma - 1)\\rho_{i} u_i\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.StateEquation:8
msgid "where, :math:`u_i` is the specific thermal energy."
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:1
msgid "**Summation Density CRKSPH**"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:3
msgid "From [CRKSPH2017], equation (76):"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:5
msgid "\\rho_{i} = \\frac{\\sum_j m_{ij} V_j W_{ij}^R}\n"
"{\\sum_{j} V_{j}^{2} W_{ij}^R}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:11
msgid "mij = \\begin{cases}\n"
"m_j, &i \\text{ and } j \\text{ are same material} \\\\\n"
"m_i, &i \\text{ and } j \\text{ are different material}\n"
"\\end{cases}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.SummationDensityCRKSPH:17
msgid "Note that in this equation we are just using :math:`m_{ij}` to be :math:`m_i` as the mass remains constant through out the simulation."
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.VelocityGradient:1
msgid "**Velocity Gradient**"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.VelocityGradient:3
msgid "From [CRKSPH2017], equation (74)"
msgstr ""

#: ../../pysph/pysph/sph/wc/crksph.py:docstring of pysph.sph.wc.crksph.VelocityGradient:9
msgid "Dimensionality of the Problem."
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph:2
msgid "Predictive-Corrective Incompressible SPH (PCISPH)"
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph:6
msgid "B. Solenthaler, R. Pajarola \"Predictive-Corrective Incompressible SPH\", ACM Trans. Graph 28 (2009), pp. 1--6."
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:1
msgid "**Compute Pressure**"
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:3
msgid "Compute pressure iteratively maintaining density within a given tolerance."
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:5
msgid "p_i += \\delta \\rho^{*}_{{err}_i}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:10
msgid "\\rho_{err_i} = \\rho_i^{*} - \\rho_0\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.ComputePressure:13
msgid "\\delta = \\frac{-1}{\\beta (-\\sum_j \\nabla W_{ij} \\cdot\n"
"\\sum_j \\nabla W_{ij} - \\sum_j \\nabla W_{ij} \\nabla W_{ij})}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationPressureGradient:1
msgid "**Momentum Equation pressure gradient**"
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationPressureGradient:3
msgid "Standard WCSPH pressure gradient,"
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationPressureGradient:5
msgid "\\frac{d\\mathbf{v}}{dt} = - \\sum_j m_j \\left(\\frac{p_i}{\\rho_i^2}\n"
"+ \\frac{p_i}{\\rho_i^2}\\right) \\nabla W(x_{ij}, h)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationViscosity:1
msgid "**Momentum Equation Viscosity**"
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.MomentumEquationViscosity:3
msgid "See \"pysph.sph.wc.viscosity.LaminarViscocity\""
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.initial_acceleration:1
#: ../../pysph/pysph/sph/integrator.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:1
msgid "Compute the initial accelerations if needed before the iterations start."
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHIntegrator.initial_acceleration:3
#: ../../pysph/pysph/sph/integrator.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:3
msgid "The default implementation only does this for the first acceleration evaluator. So if you have multiple evaluators, you must override this method in a subclass."
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.PCISPHScheme:3
#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.ElasticSolidsScheme:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme:13
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme:6
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.TVFScheme:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:3
msgid "List of names of solid particle arrays (or boundaries)."
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.Predict:1
msgid "**Predict velocity and position**"
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.Predict:3
msgid "\\mathbf{v}^{*}(t+1) = \\mathbf{v}(t) + dt\n"
"\\left(\\frac{d \\mathbf{v}_{visc, g}(t)}{dt} +\n"
"\\frac{d \\mathbf{v}_{p} (t)}{dt} \\right)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/wc/pcisph.py:docstring of pysph.sph.wc.pcisph.Predict:8
msgid "\\mathbf{x}^{*}(t+1) = \\mathbf{x}(t) + dt * \\mathbf{v}(t+1)\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/boundary_equations.py:docstring of pysph.sph.boundary_equations:2
msgid "SPH Boundary Equations"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic:2
msgid "Basic Equations for Solid Mechanics"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic:6
msgid "J. P. Gray et al., \"SPH elastic dynamics\", Computer Methods in Applied Mechanics and Engineering, 190 (2001), pp 6641 - 6662."
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.HookesDeviatoricStressRate:1
msgid "Rate of change of stress"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.HookesDeviatoricStressRate:3
msgid "\\frac{dS^{ij}}{dt} = 2\\mu\\left(\\epsilon^{ij} - \\frac{1}{3}\\delta^{ij}\n"
"\\epsilon^{ij}\\right) + S^{ik}\\Omega^{jk} + \\Omega^{ik}S^{kj}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.HookesDeviatoricStressRate:9
msgid "\\epsilon^{ij} = \\frac{1}{2}\\left(\\frac{\\partial v^i}{\\partial x^j} +\n"
"\\frac{\\partial v^j}{\\partial x^i}\\right)\\\\\n"
"\n"
"\\Omega^{ij} = \\frac{1}{2}\\left(\\frac{\\partial v^i}{\\partial x^j} -\n"
"   \\frac{\\partial v^j}{\\partial x^i} \\right)"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MomentumEquationWithStress:1
msgid "**Momentum Equation with Artificial Stress**"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MomentumEquationWithStress:3
msgid "\\frac{D\\vec{v_a}^i}{Dt} = \\sum_b m_b\\left(\\frac{\\sigma_a^{ij}}{\\rho_a^2}\n"
"+\\frac{\\sigma_b^{ij}}{\\rho_b^2} + R_{ab}^{ij}f^n \\right)\\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MomentumEquationWithStress:10
msgid "f_{ab} = \\frac{W(r_{ab})}{W(\\Delta p)}\\\\\n"
"\n"
"R_{ab}^{ij} = R_{a}^{ij} + R_{b}^{ij}"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:1
msgid "**Artificial stress to remove tensile instability**"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:3
msgid "The dispersion relations in [Gray2001] are used to determine the different components of :math:`R`."
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:6
msgid "Angle of rotation for particle :math:`a`"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:8
msgid "\\tan{2 \\theta_a} = \\frac{2\\sigma_a^{xy}}{\\sigma_a^{xx} - \\sigma_a^{yy}}"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:12
msgid "In rotated frame, the new components of the stress tensor are"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:14
msgid "\\bar{\\sigma}_a^{xx} = \\cos^2{\\theta_a} \\sigma_a^{xx} + 2\\sin{\\theta_a}\n"
"\\cos{\\theta_a}\\sigma_a^{xy} + \\sin^2{\\theta_a}\\sigma_a^{yy}\\\\\n"
"\n"
"\\bar{\\sigma}_a^{yy} = \\sin^2{\\theta_a} \\sigma_a^{xx} + 2\\sin{\\theta_a}\n"
"\\cos{\\theta_a}\\sigma_a^{xy} + \\cos^2{\\theta_a}\\sigma_a^{yy}"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:22
msgid "Components of :math:`R` in rotated frame:"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:24
msgid "\\bar{R}_{a}^{xx}=\\begin{cases}-\\epsilon\\frac{\\bar{\\sigma}_{a}^{xx}}\n"
"{\\rho^{2}} & \\bar{\\sigma}_{a}^{xx}>0\\\\0 & \\bar{\\sigma}_{a}^{xx}\\leq0\n"
"\\end{cases}\\\\\n"
"\n"
"\\bar{R}_{a}^{yy}=\\begin{cases}-\\epsilon\\frac{\\bar{\\sigma}_{a}^{yy}}\n"
"{\\rho^{2}} & \\bar{\\sigma}_{a}^{yy}>0\\\\0 & \\bar{\\sigma}_{a}^{yy}\\leq0\n"
"\\end{cases}"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:34
msgid "Components of :math:`R` in original frame:"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress:36
msgid "R_a^{xx} = \\cos^2{\\theta_a} \\bar{R}_a^{xx} +\n"
"\\sin^2{\\theta_a} \\bar{R}_a^{yy}\\\\\n"
"\n"
"R_a^{yy} = \\sin^2{\\theta_a} \\bar{R}_a^{xx} +\n"
"\\cos^2{\\theta_a} \\bar{R}_a^{yy}\\\\\n"
"\n"
"R_a^{xy} = \\sin{\\theta_a} \\cos{\\theta_a}\\left(\\bar{R}_a^{xx} -\n"
"\\bar{R}_a^{yy}\\right)"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress.loop:1
msgid "Compute the stress terms"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress.loop:3
msgid "Stress Tensor Deviatoric components (Symmetric)"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.MonaghanArtificialStress.loop:5
msgid "Artificial stress components (Symmetric)"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.get_bulk_mod:1
msgid "Get the bulk modulus from shear modulus and Poisson ratio"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.get_particle_array_elastic_dynamics:1
msgid "Return a particle array for the Standard SPH formulation of solids."
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.get_particle_array_elastic_dynamics:4
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_gasd:3
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_iisph:11
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_rigid_body:6
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_swe:16
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_fluid:3
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_solid:3
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_wcsph:9
msgid "Dictionary of constants"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.get_particle_array_elastic_dynamics:7
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array:13
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_gasd:6
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_iisph:14
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_rigid_body:9
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_swe:19
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_fluid:6
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_solid:6
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_wcsph:12
msgid "Additional keywords passed are set as the property arrays."
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/basic.py:docstring of pysph.sph.solid_mech.basic.get_particle_array_elastic_dynamics:10
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_gasd:9
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_iisph:17
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_rigid_body:12
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_swe:22
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_fluid:9
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_solid:9
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_wcsph:15
msgid ":obj:`get_particle_array`"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi:2
msgid "Equations for the High Velocity Impact Problems"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/hvi.py:docstring of pysph.sph.solid_mech.hvi.StiffenedGasEOS:1
msgid "Stiffened-gas EOS from \"A Free Lagrange Augmented Godunov Method for the Simulation of Elastic-Plastic Solids\", B. P. Howell and G. J. Ball, JCP (2002).  http://dx.doi.org/10.1006/jcph.2001.6931"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:56
msgid "Gas Dynamics"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic:1
msgid "Basic equations for Gas-dynamics"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEAccelerations:1
msgid "ADKE as discussed in the reference [KP14]."
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.ADKEAccelerations:5
msgid "A comparison of SPH schemes for the compressible Euler equations, 2014, Journal of Computational Physics, 256, pp 308 -- 333 (http://dx.doi.org/10.1016/j.jcp.2013.08.060)"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:1
msgid "Summation density with iterative solution of the smoothing lengths."
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:3
msgid "Parameters:"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:6
msgid "density_iterations"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:None
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:None
msgid "bint"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:6
msgid "Flag to indicate density iterations are required."
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:9
msgid "iterate_only_once"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:9
msgid "Flag to indicate if only one iteration is required"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:12
msgid "k"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:None
#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:None
msgid "double"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:12
msgid "Kernel scaling factor"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:17
msgid "htol"
msgstr ""

#: ../../pysph/pysph/sph/gas_dynamics/basic.py:docstring of pysph.sph.gas_dynamics.basic.SummationDensity:15
msgid "Iteration tolerance"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:63
msgid "Surface tension"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension:1
msgid "Implementation of the equations used for surface tension modelling, for example in KHI simulations. The references are [SY11], [JM00], [A10], [XA06]."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension:7
msgid "M. Shadloo, M. Yildiz, \"Numerical modelling of Kelvin-Helmholtz instability using smoothed particle hydrodynamics\", IJNME, 2011, 87, pp 988--1006"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension:11
msgid "Joseph P. Morris \"Simulating surface tension with smoothed particle hydrodynamics\", JCP, 2000, 33, pp 333--353"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension:14
msgid "Adami et al. \"A new surface-tension formulation for multi-phase SPH using a reproducing divergence approximation\", JCP 2010, 229, pp 5011--5021"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension:17
msgid "X.Y.Hu, N.A. Adams. \"A multi-phase SPH method for macroscopic and mesoscopic flows\", JCP 2006, 213, pp 844-861 [XA06]"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiColorGradient:1
msgid "Gradient of color Eq. (14) in [A10]"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiColorGradient:3
msgid "\\nabla c_a = \\frac{1}{V_a}\\sum_b \\left[V_a^2 + V_b^2\n"
"\\right]\\tilde{c}_{ab}\\nabla_a W_{ab}\\,,"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiColorGradient:8
msgid "where, the average :math:`\\tilde{c}_{ab}` is defined as"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiColorGradient:10
msgid "\\tilde{c}_{ab} = \\frac{\\rho_b}{\\rho_a + \\rho_b}c_a +\n"
"\\frac{\\rho_a}{\\rho_a + \\rho_b}c_b"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiReproducingDivergence:1
msgid "Reproducing divergence approximation Eq. (20) in [A10] to compute the curvature"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.AdamiReproducingDivergence:4
msgid "\\nabla \\cdot \\boldsymbol{\\phi}_a = d\\frac{\\sum_b\n"
"\\boldsymbol{\\phi}_{ab}\\cdot \\nabla_a\n"
"W_{ab}V_b}{\\sum_b\\boldsymbol{x}_{ab}\\cdot \\nabla_a W_{ab} V_b}"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForce:1
msgid "Acceleration due to surface tension force Eq. (25) in [JM00]:"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.CSFSurfaceTensionForce:8
msgid "Note that as per Eq. (17) in [JM00], the un-normalized normal is basically the gradient of the color function. The acceleration term therefore depends on the gradient of the color field."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientUsingNumberDensity:1
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11ColorGradient:1
msgid "Gradient of the color function using Eq. (13) of [SY11]:"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientUsingNumberDensity:3
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11ColorGradient:3
msgid "\\nabla C_a = \\sum_b \\frac{2 C_b - C_a}{\\psi_a + \\psi_a}\n"
"\\nabla_{a} W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientUsingNumberDensity:9
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11ColorGradient:9
msgid "Using the gradient of the color function, the normal and discretized dirac delta is calculated in the post loop."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ColorGradientUsingNumberDensity:13
#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MorrisColorGradient:12
msgid "Singularities are avoided as per the recommendation by [JM00] (see eqs 20 & 21) using the parameter :math:`\\epsilon`"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromNumberDensity:1
msgid "Interface curvature using number density. Eq. (15) in [SY11]:"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.InterfaceCurvatureFromNumberDensity:3
msgid "\\kappa_a = \\sum_b \\frac{2.0}{\\psi_a + \\psi_b}\n"
"\\left(\\boldsymbol{n_a} - \\boldsymbol{n_b}\\right) \\cdot\n"
"\\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MorrisColorGradient:1
msgid "Gradient of the color function using Eq. (17) of [JM00]:"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MorrisColorGradient:3
msgid "\\nabla c_a = \\sum_b \\frac{m_b}{\\rho_b}(c_b - c_a) \\nabla_{a}\n"
"W_{ab}\\,,"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.MorrisColorGradient:8
msgid "where a smoothed representation of the color is used in the equation. Using the gradient of the color function, the normal and discretized dirac delta is calculated in the post loop."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11DiracDelta:1
msgid "Discretized dirac-delta for the SY11 formulation Eq. (14) in [SY11]"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11DiracDelta:3
msgid "This is essentially the same as computing the color gradient, the only difference being that this might be called with a reduced smoothing length."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SY11DiracDelta:7
msgid "Note that the normals should be computed using the SY11ColorGradient equation. This function will effectively overwrite the color gradient."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooYildizSurfaceTensionForce:1
msgid "Acceleration due to surface tension force Eq. (7,9) in [SY11]:"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.ShadlooYildizSurfaceTensionForce:8
msgid "where, :math:`\\delta^s` is the discretized dirac delta function, :math:`\\boldsymbol{n}` is the interface normal, :math:`\\kappa` is the discretized interface curvature and :math:`\\sigma` is the surface tension force constant."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SmoothedColor:1
msgid "Smoothed color function. Eq. (17) in [JM00]"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SmoothedColor:3
msgid "c_a = \\sum_b \\frac{m_b}{\\rho_b} c_b^i \\nabla_a W_{ab}\\,,"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.SmoothedColor:7
msgid "where, :math:`c_b^i` is the color index associated with a particle."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:1
msgid "This function returns the required equations for the multiphase formulation taking inputs of the fluid particles array, solid particles array, the scheme to be used and other physical parameters"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:5
msgid "List of names of fluid particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:7
msgid "List of names of solid particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:9
msgid "The scheme with which the equations are to be setup. Supported Schemes:  1. TVF scheme with Morris' surface tension.    String to be used: \"tvf\" 2. Adami's surface tension implementation which doesn't involve    calculation of curvature. String to be used: \"adami_stress\" 3. Adami's surface tension implementation which involves    calculation of curvature. String to be used: \"adami\" 4. Shadloo Yildiz surface tension formulation.    String to be used: \"shadloo\" 5. Morris' surface tension formulation. This is the default scheme    which will be used if none of the above strings are input as    scheme."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:9
msgid "The scheme with which the equations are to be setup. Supported Schemes:"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:12
msgid "TVF scheme with Morris' surface tension. String to be used: \"tvf\""
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:14
msgid "Adami's surface tension implementation which doesn't involve calculation of curvature. String to be used: \"adami_stress\""
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:16
msgid "Adami's surface tension implementation which involves calculation of curvature. String to be used: \"adami\""
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:18
msgid "Shadloo Yildiz surface tension formulation. String to be used: \"shadloo\""
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:20
msgid "Morris' surface tension formulation. This is the default scheme which will be used if none of the above strings are input as scheme."
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:24
msgid "The reference density of the medium (Currently multiple reference densities for different particles is not supported)"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:27
msgid "The background pressure of the medium(Currently multiple background pressures for different particles is not supported)"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:30
msgid "The speed of sound of the medium(Currently multiple speeds of sounds for different particles is not supported)"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:33
msgid "The b parameter of the generalized Tait Equation of State. Refer to the Tait Equation's documentation for reference"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:36
msgid "The factor for scaling of smoothing length for calculation of interface curvature number for shadloo's scheme"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:39
msgid "The factor for scaling back of smoothing length for calculation of forces after calculating the interface curvature number in shadloo's scheme"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:43
msgid "The kinematic viscosity of the medium"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:45
msgid "The surface tension of the system"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:47
msgid "The number of dimensions of the problem in the cartesian space"
msgstr ""

#: ../../pysph/pysph/sph/surface_tension.py:docstring of pysph.sph.surface_tension.get_surface_tension_equations:49
msgid "Put this option false if the equations are supposed to be evaluated for the ghost particles, else keep it True"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:70
msgid "Implicit Incompressible SPH"
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph:1
msgid "The basic equations for the IISPH formulation of"
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph:3
msgid "M. Ihmsen, J. Cornelis, B. Solenthaler, C. Horvath, M. Teschner, \"Implicit Incompressible SPH,\" IEEE Transactions on Visualization and Computer Graphics, vol. 20, no. 3, pp. 426-435, March 2014. http://dx.doi.org/10.1109/TVCG.2013.105"
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ComputeAIIBoundary:1
msgid "This is important and not really discussed in the original IISPH paper."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:1
msgid "The IISPH scheme"
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:9
msgid "Density of fluid."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:11
msgid "Kinematic viscosity."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:13
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:15
#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:17
msgid "Componenents of body acceleration (gravity, external forcing etc.)"
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:19
msgid "Relaxation parameter for relaxed-Jacobi iterations."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:21
msgid "Tolerance for the convergence of pressure iterations as a fraction."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:23
msgid "Produce some debugging output on iterations."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme:25
msgid "The problem has ghost particles so add equations for those."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:3
msgid "This is to be called before `get_solver` is called."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHScheme.configure_solver:5
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:11
msgid "Number of dimensions."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.IISPHStep:1
msgid "A straightforward and simple integrator to be used for IISPH."
msgstr ""

#: ../../pysph/pysph/sph/iisph.py:docstring of pysph.sph.iisph.ViscosityAccelerationBoundary:1
msgid "The acceleration on the fluid due to a boundary."
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:78
msgid "Rigid body motion"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body:1
msgid "Rigid body related equations."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:1
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:1
msgid "Force between a solid sphere and a SPH fluid particle.  This is implemented using Akinci's[1] force and additional force from solid bodies pressure which is implemented by Liu[2]"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:5
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:5
msgid "[1]'Versatile Rigid-Fluid Coupling for Incompressible SPH'"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:7
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:7
msgid "URL: https://graphics.ethz.ch/~sobarbar/papers/Sol12/Sol12.pdf"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:9
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:9
msgid "[2]A 3D Simulation of a Moving Solid in Viscous Free-Surface Flows by Coupling SPH and DEM"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:12
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:12
msgid "https://doi.org/10.1155/2017/3174904"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:18
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:18
msgid "Note: Here forces for both the phases are added at once."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.AkinciRigidFluidCoupling:16
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.LiuFluidForce:16
msgid "Please make sure that this force is applied only once for both the particle properties."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.EulerStepRigidBody:1
#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.EulerStep:1
msgid "Fast but inaccurate integrator. Use this for testing"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.PressureRigidBody:1
msgid "The pressure acceleration on the fluid/solid due to a boundary. Implemented from Akinci et al. http://dx.doi.org/10.1145/2185520.2185558"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.PressureRigidBody:4
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.ViscosityRigidBody:4
msgid "Use this with the fluid as a destination and body as source."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyCollision:1
msgid "Force between two spheres is implemented using DEM contact force law."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyCollision:3
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyWallCollision:4
msgid "Refer https://doi.org/10.1016/j.powtec.2011.09.019 for more information."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyCollision:6
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyWallCollision:7
msgid "Open-source MFIX-DEM software for gas–solids flows: Part I—Verification studies ."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyCollision:10
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyWallCollision:11
msgid "Initialise the required coefficients for force calculation."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyCollision:13
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyWallCollision:14
msgid "Keyword arguments: kn -- Normal spring stiffness (default 1e3) mu -- friction coefficient (default 0.5) en -- coefficient of restitution (0.8)"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyCollision:18
#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyWallCollision:19
msgid "Given these coefficients, tangential spring stiffness, normal and tangential damping coefficient are calculated by default."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyForceGPUGems:1
msgid "This is inspired from http://http.developer.nvidia.com/GPUGems3/gpugems3_ch29.html and BK Mishra's article on DEM http://dx.doi.org/10.1016/S0301-7516(03)00032-2 A review of computer simulation of tumbling mills by the discrete element method: Part I - contact mechanics"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyForceGPUGems:9
msgid "Note that d is a factor multiplied with the \"h\" of the particle."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.RigidBodyWallCollision:1
msgid "Force between sphere and a wall is implemented using DEM contact force law."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityBoundary:1
msgid "Equation to find the density of the fluid particle due to any boundary or a rigid body"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.SummationDensityBoundary:4
msgid ":math:`\\rho_a = \\sum_b {\\rho}_fluid V_b W_{ab}`"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.ViscosityRigidBody:1
msgid "The viscous acceleration on the fluid/solid due to a boundary. Implemented from Akinci et al. http://dx.doi.org/10.1145/2185520.2185558"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.get_alpha_dot:1
msgid "Use sympy to perform most of the math and use the resulting formulae to calculate:"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.get_alpha_dot:4
msgid "inv(I) (    au - w x (I w))"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.py:docstring of pysph.sph.rigid_body.get_torque:1
msgid "Use sympy to perform some simple math. R x F C_m x F w x r"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:85
msgid "Miscellaneous"
msgstr ""

#: ../../pysph/pysph/sph/misc/advection.py:docstring of pysph.sph.misc.advection:2
msgid "Functions for advection"
msgstr ""

#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array:1
msgid "Functions to reduce array data in serial or parallel."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.dummy_reduce_array:1
msgid "Simply returns the array for the serial case."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:1
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:1
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.serial_reduce_array:1
msgid "Reduce an array given an array and a suitable reduction operation."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:3
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:3
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.serial_reduce_array:3
msgid "Currently, only 'sum', 'max', 'min' and 'prod' are supported."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:5
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:5
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.serial_reduce_array:5
msgid "**Parameters**"
msgstr ""

#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:7
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:7
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.serial_reduce_array:7
msgid "array: numpy.ndarray: Any numpy array (1D)."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:8
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.mpi_reduce_array:8
#: ../../pysph/pysph/base/reduce_array.py:docstring of pysph.base.reduce_array.serial_reduce_array:8
msgid "op: str: reduction operation, one of ('sum', 'prod', 'min', 'max')"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:97
msgid "Group of equations"
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:1
msgid "A group of equations."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:3
msgid "This class provides some support for the code generation for the collection of equations."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:6
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:4
#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator:1
msgid "Constructor."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:8
msgid "a list of equation objects."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:10
msgid "specifies if only non-remote/non-ghost particles should be operated on."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:13
msgid "specifies if the neighbors should be re-computed locally after this group"
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:16
msgid "specifies if the group should continue iterating until each equation's \"converged()\" methods returns with a positive value."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:19
msgid "specifies the maximum number of times this group should be iterated."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:22
msgid "specifies the minimum number of times this group should be iterated."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:25
msgid "A callable which is passed no arguments that is called before anything in the group is executed."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:28
msgid "A callable which is passed no arguments that is called after the group is completed."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:31
msgid "A callable that is passed (t, dt). If this callable returns True, the group is executed, otherwise it is not. If condition is None, the group is always executed. Note that this should work even if the group has many destination arrays."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:36
msgid "Start looping from this destination index. Starts from the given number if an integer is passed. If a string is look for a property/constant and use its first value as the loop count."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:40
msgid "Loop up to this destination index instead of over all possible values. Defaults to all particles. Ends at the given number if an integer is passed. If a string is passed, look for a property/constant and use its first value as the loop count. Note that this works like a range stop parameter so the last value is not included."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.Group:50
msgid "When running simulations in parallel, one should typically run the summation density over all particles (both local and remote) in each processor.  This is because we must update the pressure/density of the remote neighbors in the current processor. Otherwise the results can be incorrect with the remote particles having an older density.  This is also the case for the TaitEOS.  In these cases the group that computes the equation should set real to False."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.MultiStageEquations:1
msgid "A class that allows a user to specify different equations for different stages."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.MultiStageEquations:4
msgid "The object doesn't do much, except contain the different collections of equations."
msgstr ""

#: ../../pysph/pysph/sph/equation.py:docstring of pysph.sph.equation.MultiStageEquations:8
msgid "A list/tuple of list of groups/equations, one for each stage."
msgstr ""

#: ../../pysph/docs/source/reference/index.rst:2
msgid "PySPH Reference Documentation"
msgstr ""

#: ../../pysph/docs/source/reference/index.rst:4
msgid "Autogenerated from doc strings using sphinx’s autodoc feature."
msgstr ""

#: ../../pysph/docs/source/reference/integrator.rst:2
msgid "Integrator related modules"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator:1
msgid "Basic code for the templated integrators."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator:3
msgid "Currently we only support two-step integrators."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator:5
msgid "These classes are used to generate the code for the actual integrators from the `sph_eval` module."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:1
msgid "Predictor corrector integrators can have two modes of operation."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:4
msgid "In the Evaluate-Predict-Evaluate-Correct (EPEC) mode, the system is advanced using:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:7
msgid "F(y^n) --> Evaluate\n"
"\n"
"y^{n+\\frac{1}{2}} = y^n + F(y^n) --> Predict\n"
"\n"
"F(y^{n+\\frac{1}{2}}) --> Evaluate\n"
"\n"
"y^{n+1} = y^n + \\Delta t F(y^{n+\\frac{1}{2}}) --> Correct"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:19
msgid "The Evaluate stage of the integrator forces a function evaluation. Therefore, the PEC mode is much faster but relies on old accelertions for the Prediction stage."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:23
msgid "In the EPEC mode, the final corrector can be modified to:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:25
msgid "y^{n+1} = y^n + \\frac{\\Delta t}{2}\\left( F(y^n) +\n"
"                        F(y^{n+\\frac{1}{2}}) \\right)"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.EPECIntegrator:30
msgid "This would require additional storage for the accelerations."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator:1
msgid "Generic class for multi-step integrators in PySPH for a system of ODES of the form :math:`\\frac{dy}{dt} = F(y)`."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.compute_time_step:1
msgid "If there are any adaptive timestep constraints, the appropriate timestep is returned, else None is returned."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.set_acceleration_evals:1
msgid "Set the acceleration evaluators."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.set_acceleration_evals:3
msgid "This must be done before the integrator is used."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.set_acceleration_evals:5
msgid "If you are using the SPHCompiler, it automatically calls this method."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.set_compiled_object:1
msgid "Set the high-performance compiled object to call internally."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.set_post_stage_callback:1
msgid "This callback is called when the particles are moved, i.e one stage of the integration is done."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.set_post_stage_callback:4
msgid "This callback is passed the current time value, the timestep and the stage."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.set_post_stage_callback:7
msgid "The current time value is  t + stage_dt, for example this would be 0.5*dt for a two stage predictor corrector integrator."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.step:1
msgid "This function is called by the solver."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.Integrator.step:3
msgid "To implement the integration step please override the ``one_timestep`` method."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:1
msgid "Update the domain of the simulation."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:3
msgid "This is to be called when particles move so the ghost particles (periodicity, mirror boundary conditions) can be reset. Further, this also recalculates the appropriate cell size based on the particle kernel radius, `h`. This should be called explicitly when desired but usually this is done when the particles are moved or the `h` is changed."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:10
msgid "The integrator should explicitly call this when needed in the `one_timestep` method."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.LeapFrogIntegrator:1
msgid "A leap-frog integrator."
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator:1
msgid "In the Predict-Evaluate-Correct (PEC) mode, the system is advanced using:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PECIntegrator:3
msgid "y^{n+\\frac{1}{2}} = y^n + \\frac{\\Delta t}{2}F(y^{n-\\frac{1}{2}})\n"
"--> Predict\n"
"\n"
"F(y^{n+\\frac{1}{2}}) --> Evaluate\n"
"\n"
"y^{n + 1} = y^n + \\Delta t F(y^{n+\\frac{1}{2}})"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator:1
msgid "A Position-Extended Forest-Ruth-Like integrator [Omeylan2002]_"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.PEFRLIntegrator:5
msgid "I.M. Omelyan, I.M. Mryglod and R. Folk, \"Optimized Forest-Ruth- and Suzuki-like algorithms for integration of motion in many-body systems\", Computer Physics Communications 146, 188 (2002) http://arxiv.org/abs/cond-mat/0110585"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator:1
msgid "In the TVD-RK3 integrator, the system is advanced using:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.py:docstring of pysph.sph.integrator.TVDRK3Integrator:3
msgid "y^{n + \\frac{1}{3}} = y^n + \\Delta t F( y^n )\n"
"\n"
"y^{n + \\frac{2}{3}} = \\frac{3}{4}y^n +\n"
"\\frac{1}{4}(y^{n + \\frac{1}{3}} + \\Delta t F(y^{n + \\frac{1}{3}}))\n"
"\n"
"y^{n + 1} = \\frac{1}{3}y^n + \\frac{2}{3}(y^{n + \\frac{2}{3}}\n"
"+ \\Delta t F(y^{n + \\frac{2}{3}}))"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step:1
msgid "Integrator steps for different schemes."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step:3
msgid "Implement as many stages as needed."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.ADKEStep:1
msgid "Predictor Corrector integrator for Gas-dynamics ADKE"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.AdamiVerletStep:1
msgid "Verlet time integration described in `A generalized wall boundary condition for smoothed particle hydrodynamics` 2012, JCP, 231, pp 7057--7075"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.AdamiVerletStep:5
msgid "This integrator can operate in either PEC mode or in EPEC mode as described in the paper."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.GasDFluidStep:1
msgid "Predictor Corrector integrator for Gas-dynamics"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.InletOutletStep:1
msgid "A trivial integrator for the inlet/outlet particles"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.IntegratorStep:1
msgid "Subclass this and implement the methods ``initialize``, ``stage1`` etc. Use the same conventions as the equations."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.LeapFrogStep:1
#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.PEFRLStep:1
msgid "Using this stepper with XSPH as implemented in `pysph.base.basic_equations.XSPHCorrection` is not directly possible and requires a nicer implementation where the correction alone is added to ``ax, ay, az``."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.OneStageRigidBodyStep:1
msgid "Simple one stage rigid-body motion"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.SolidMechStep:1
msgid "Predictor corrector Integrator for solid mechanics problems"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.TransportVelocityStep:1
msgid "Integrator defined in 'A transport velocity formulation for smoothed particle hydrodynamics', 2013, JCP, 241, pp 292--307"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.TransportVelocityStep:4
msgid "For a predictor-corrector style of integrator, this integrator should operate only in PEC mode."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.TwoStageRigidBodyStep:1
msgid "Simple rigid-body motion"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.TwoStageRigidBodyStep:3
msgid "At each stage of the integrator, the prescribed velocity and accelerations are incremented by dt/2."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.TwoStageRigidBodyStep:6
msgid "Note that the time centered velocity is used for updating the particle positions. This ensures exact motion for a constant acceleration."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VelocityVerletSymplecticWCSPHStep:1
msgid "Another symplectic second order integrator described in the review paper by Monaghan:"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VelocityVerletSymplecticWCSPHStep:4
#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VerletSymplecticWCSPHStep:4
msgid "J. Monaghan, \"Smoothed Particle Hydrodynamics\", Reports on Progress in Physics, 2005, 68, pp 1703--1759 [JM05]"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VelocityVerletSymplecticWCSPHStep:7
msgid "kick--drift--kick form of the verlet integrator"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VerletSymplecticWCSPHStep:1
msgid "Symplectic second order integrator described in the review paper by Monaghan:"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VerletSymplecticWCSPHStep:9
msgid "This integrator should run in PEC mode since in the first stage, the positions are updated using the current velocity. The accelerations are then computed to advance to the full time step values."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.VerletSymplecticWCSPHStep:14
msgid "This version of the integrator does not update the density. That is, the summation density is used instead of the continuity equation."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.WCSPHStep:1
msgid "Standard Predictor Corrector integrator for the WCSPH formulation"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.WCSPHStep:3
msgid "Use this integrator for WCSPH formulations. In the predictor step, the particles are advanced to `t + dt/2`. The particles are then advanced with the new force computed at this position."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.WCSPHStep:7
msgid "This integrator can be used in PEC or EPEC mode."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.WCSPHStep:9
msgid "The same integrator can be used for other problems. Like for example solid mechanics (see SolidMechStep)"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.WCSPHTVDRK3Step:1
msgid "TVD RK3 stepper for WCSPH"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.py:docstring of pysph.sph.integrator_step.WCSPHTVDRK3Step:3
msgid "This integrator requires :math:`2` stages for the storage of the acceleration variables."
msgstr ""

#: ../../pysph/docs/source/reference/kernels.rst:2
msgid "SPH Kernels"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels:1
msgid "Definition of some SPH kernel functions"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline:1
msgid "Cubic Spline Kernel: [Monaghan1992]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline:3
msgid "W(q) = \\ &\\sigma_3\\left[ 1 - \\frac{3}{2}q^2\\left( 1 -\n"
"       \\frac{q}{2} \\right) \\right],\n"
"       \\ & \\textrm{for} \\ 0 \\leq q \\leq 1,\\\\\n"
"     = \\ &\\frac{\\sigma_3}{4}(2-q)^3, & \\textrm{for}\n"
"       \\ 1 < q \\leq 2,\\\\\n"
"     = \\ &0, & \\textrm{for}\\ q>2, \\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline:11
msgid "where :math:`\\sigma_3` is a dimensional normalizing factor for the cubic spline function given by:"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline:14
msgid "\\sigma_3  = \\ & \\frac{2}{3h^1}, & \\textrm{for dim=1}, \\\\\n"
"\\sigma_3  = \\ & \\frac{10}{7\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\sigma_3  = \\ & \\frac{1}{\\pi h^3}, & \\textrm{for dim=3}. \\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline:21
msgid "`J. Monaghan, Smoothed Particle Hydrodynamics, \"Annual Review of Astronomy and Astrophysics\", 30 (1992), pp. 543-574. <http://adsabs.harvard.edu/abs/1992ARA&A..30..543M>`_"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline.dwdq:2
msgid "Gradient of a kernel is given by"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline.dwdq:4
msgid "abla W = normalization rac{dW}{dq} rac{dq}{dx}"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline.dwdq:8
msgid "abla W = w_dash rac{dq}{dx}"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.CubicSpline.dwdq:11
msgid "Here we get `w_dash` by using `dwdq` method"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.Gaussian:1
msgid "Gaussian Kernel: [Liu2010]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.Gaussian:3
msgid "W(q) = \\ &\\sigma_g e^{-q^2}, \\ & \\textrm{for} \\ 0\\leq q \\leq 3,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>3,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.Gaussian:7
msgid "where :math:`\\sigma_g` is a dimensional normalizing factor for the gaussian function given by:"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.Gaussian:10
msgid "\\sigma_g  = \\ & \\frac{1}{\\pi^{1/2} h}, \\ & \\textrm{for dim=1}, \\\\\n"
"\\sigma_g  = \\ & \\frac{1}{\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\sigma_g  = \\ & \\frac{1}{\\pi^{3/2} h^3}, & \\textrm{for dim=3}. \\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.Gaussian:17
msgid "`M. Liu, & G. Liu, Smoothed particle hydrodynamics (SPH): an overview and recent developments, \"Archives of computational methods in engineering\", 17.1 (2010), pp. 25-76. <http://link.springer.com/article/10.1007/s11831-010-9040-7>`_"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.QuinticSpline:1
msgid "Quintic Spline SPH kernel: [Liu2010]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.QuinticSpline:3
msgid "W(q) = \\ &\\sigma_5\\left[ (3-q)^5 - 6(2-q)^5 + 15(1-q)^5 \\right],\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 1,\\\\\n"
"     = \\ &\\sigma_5\\left[ (3-q)^5 - 6(2-q)^5 \\right], &\n"
"       \\textrm{for} \\ 1 <  q \\leq 2,\\\\\n"
"     = \\ &\\sigma_5 \\ (3-q)^5 , & \\textrm{for} \\ 2 < q \\leq 3,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>3,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.QuinticSpline:11
msgid "where :math:`\\sigma_5` is a dimensional normalizing factor for the quintic spline function given by:"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.QuinticSpline:14
msgid "\\sigma_5  = \\ & \\frac{1}{120 h^1}, & \\textrm{for dim=1}, \\\\\n"
"\\sigma_5  = \\ & \\frac{7}{478\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\sigma_5  = \\ & \\frac{1}{120\\pi h^3}, & \\textrm{for dim=3}. \\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.SuperGaussian:1
msgid "Super Gaussian Kernel: [Monaghan1992]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.SuperGaussian:3
msgid "W(q) = \\ &\\frac{1}{h^{d}\\pi^{d/2}} e^{-q^2} (d/2 + 1 - q^2),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 3,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>3,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.SuperGaussian:8
msgid "where :math:`d` is the number of dimensions."
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuintic:1
msgid "The following is the WendlandQuintic kernel(C2) kernel for 2D and 3D."
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuintic:3
msgid "W(q) = \\ & \\alpha_d (1-q/2)^4(2q +1))),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuintic:8
#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC2_1D:8
#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4:9
#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4_1D:8
#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6:8
#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6_1D:9
msgid "where :math:`d` is the number of dimensions and"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuintic:10
msgid "\\alpha_d  = \\ & \\frac{7}{4\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\alpha_d  = \\ & \\frac{21}{16\\pi h^3}, \\ & \\textrm{for dim=3}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC2_1D:1
msgid "The following is the WendlandQuintic kernel (Wendland C2) kernel for 1D."
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC2_1D:3
msgid "W(q) = \\ & \\alpha_d (1-q/2)^3 (1.5q +1))),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC2_1D:10
msgid "\\alpha_d  =  \\frac{5}{8h}, \\textrm{for dim=1}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4:2
msgid "The following is the WendlandQuintic kernel (Wendland C4) kernel for"
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4:2
msgid "2D and 3D."
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4:4
msgid "W(q) = \\ & \\alpha_d (1-q/2)^6(\\frac{35}{12} q^2 + 3q +1))),\n"
"        \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4:11
msgid "\\alpha_d  = \\ & \\frac{9}{4\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\alpha_d  = \\ & \\frac{495}{256\\pi h^3}, \\ & \\textrm{for dim=3}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4_1D:1
msgid "The following is the WendlandQuintic kernel (Wendland C4) kernel for 1D."
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4_1D:3
msgid "W(q) = \\ & \\alpha_d (1-q/2)^5 (2q^2 + 2.5q +1))),\n"
"        \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC4_1D:10
msgid "\\alpha_d =  \\frac{3}{4h}, \\ \\textrm{for dim=1}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6:1
msgid "The following is the WendlandQuintic kernel(C6) kernel for 2D and 3D."
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6:3
msgid "W(q) = \\ & \\alpha_d (1-q/2)^8 (4 q^3 + 6.25 q^2 + 4q +1))),\n"
"        \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6:10
msgid "\\alpha_d  = \\ & \\frac{78}{28\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\alpha_d  = \\ & \\frac{1365}{512\\pi h^3}, \\ & \\textrm{for dim=3}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6_1D:1
msgid "The following is the WendlandQuintic kernel (Wendland C6) kernel for 1D."
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6_1D:3
msgid "W(q) = \\ & \\alpha_d (1-q/2)^7 (\\frac{21}{8} q^3\n"
"       + \\frac{19}{4} q^2 + 3.5q +1))),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.WendlandQuinticC6_1D:11
msgid "\\alpha_d  = \\ \\frac{55}{64h},  \\textrm{for dim=1}\n"
"\n"
""
msgstr ""

#: ../../pysph/pysph/base/kernels.py:docstring of pysph.base.kernels.get_compiled_kernel:1
msgid "Given a kernel, return a high performance wrapper kernel."
msgstr ""

#: ../../pysph/docs/source/reference/nnps.rst:2
msgid "Module nnps: Nearest Neighbor Particle Search"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager:1
msgid "This class determines the limits of the solution domain."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager:3
msgid "We expect all simulations to have well defined domain limits beyond which we are either not interested or the solution is invalid to begin with. Thus, if a particle leaves the domain, the solution should be considered invalid (at least locally)."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager:8
msgid "The initial domain limits could be given explicitly or asked to be computed from the particle arrays. The domain could be periodic."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager:14
#: ../docstring of pysph.base.nnps_base.DomainManagerBase:3
msgid "The n_layers argument specifies the number of ghost layers as multiples of hmax*radius_scale."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager:21
#: ../docstring of pysph.base.nnps_base.DomainManagerBase:10
msgid "props: list/dict: properties to copy."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager:18
#: ../docstring of pysph.base.nnps_base.DomainManager:29
#: ../docstring of pysph.base.nnps_base.DomainManagerBase:7
msgid "Provide a list or dict with the keys as particle array names. Only the specified properties are copied.  If not specified, all props are copied."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.dtype:1
#: ../docstring of pysph.base.nnps_base.DomainManager.backend:1
#: ../docstring of pysph.base.nnps_base.DomainManager.manager:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.props:1
#: ../docstring of pysph.base.particle_array.ParticleArray.gpu:1
msgid "object"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.dtype:0
#: ../docstring of pysph.base.nnps_base.CPUDomainManager.dtype_max:0
#: ../docstring of pysph.base.nnps_base.CPUDomainManager.ghosts:0
#: ../docstring of pysph.base.nnps_base.CPUDomainManager.use_double:0
#: ../docstring of pysph.base.nnps_base.Cell.centroid:0
#: ../docstring of pysph.base.nnps_base.Cell.gindices:0
#: ../docstring of pysph.base.nnps_base.Cell.is_boundary:0
#: ../docstring of pysph.base.nnps_base.Cell.lindices:0
#: ../docstring of pysph.base.nnps_base.Cell.size:0
#: ../docstring of pysph.base.nnps_base.DomainManager.backend:0
#: ../docstring of pysph.base.nnps_base.DomainManager.manager:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.cell_size:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.copy_props:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.dim:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.hmin:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.in_parallel:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.is_mirror:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.is_periodic:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_x:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_y:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_z:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.n_layers:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.narrays:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.pa_wrappers:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_x:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_y:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_z:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.props:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.radius_scale:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xmax:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xmin:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xtranslate:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ymax:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ymin:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ytranslate:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.zmax:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.zmin:0
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ztranslate:0
#: ../docstring of pysph.base.nnps_base.NNPS.current_cache:0
#: ../docstring of pysph.base.nnps_base.NNPS.sort_gids:0
#: ../docstring of pysph.base.nnps_base.NNPS.xmax:0
#: ../docstring of pysph.base.nnps_base.NNPS.xmin:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.cache:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.cell_size:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.dim:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.domain:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.hmin:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.is_periodic:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.n_cells:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.narrays:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.pa_wrappers:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.particles:0
#: ../docstring of pysph.base.nnps_base.NNPSBase.radius_scale:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.gid:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.h:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.name:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.np:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.pa:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.tag:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.x:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.y:0
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.z:0
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.fixed_h:0
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.heads:0
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.ncells_per_dim:0
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.ncells_tot:0
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.nexts:0
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS.cell_to_index:0
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.cells:0
#: ../docstring of pysph.base.particle_array.ParticleArray:0
#: ../docstring of pysph.base.particle_array.ParticleArray:0
#: ../docstring of pysph.base.particle_array.ParticleArray:0
#: ../docstring of pysph.base.particle_array.ParticleArray.backend:0
#: ../docstring of pysph.base.particle_array.ParticleArray.constants:0
#: ../docstring of pysph.base.particle_array.ParticleArray.default_values:0
#: ../docstring of pysph.base.particle_array.ParticleArray.gpu:0
#: ../docstring of pysph.base.particle_array.ParticleArray.name:0
#: ../docstring of pysph.base.particle_array.ParticleArray.num_real_particles:0
#: ../docstring of pysph.base.particle_array.ParticleArray.output_property_arrays:0
#: ../docstring of pysph.base.particle_array.ParticleArray.properties:0
#: ../docstring of pysph.base.particle_array.ParticleArray.property_arrays:0
#: ../docstring of pysph.base.particle_array.ParticleArray.stride:0
#: ../docstring of pysph.base.particle_array.ParticleArray.time:0
msgid "type"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.dtype:3
msgid "dtype"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.dtype_max:1
#: ../docstring of pysph.base.nnps_base.Cell.size:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.cell_size:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.hmin:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.n_layers:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.radius_scale:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xmax:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xmin:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xtranslate:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ymax:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ymin:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ytranslate:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.zmax:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.zmin:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ztranslate:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.cell_size:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.hmin:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.radius_scale:1
#: ../docstring of pysph.base.particle_array.ParticleArray.time:1
msgid "'double'"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.dtype_max:3
msgid "dtype_max"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.ghosts:1
#: ../docstring of pysph.base.nnps_base.Cell.gindices:1
#: ../docstring of pysph.base.nnps_base.Cell.lindices:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.copy_props:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.pa_wrappers:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.cache:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.pa_wrappers:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.particles:1
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.heads:1
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.nexts:1
#: ../docstring of pysph.base.particle_array.ParticleArray.output_property_arrays:1
#: ../docstring of pysph.base.particle_array.ParticleArray.property_arrays:1
msgid "list"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.ghosts:3
msgid "ghosts"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.update:1
msgid "General method that is called before NNPS can bin particles."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.update:3
msgid "This method is responsible for the computation of cell sizes and creation of any ghost particles for periodic or wall boundary conditions."
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.use_double:1
#: ../docstring of pysph.base.nnps_base.Cell.is_boundary:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.in_parallel:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.is_mirror:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.is_periodic:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_x:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_y:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_z:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_x:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_y:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_z:1
#: ../docstring of pysph.base.nnps_base.NNPS.sort_gids:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.is_periodic:1
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.fixed_h:1
msgid "'bool'"
msgstr ""

#: ../docstring of pysph.base.nnps_base.CPUDomainManager.use_double:3
msgid "use_double"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell:1
msgid "Basic indexing structure for the box-sort NNPS."
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell:3
msgid "For a spatial indexing based on the box-sort algorithm, this class defines the spatial data structure used to hold particle indices (local and global) that are within this cell."
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell:10
msgid "Spatial index (unflattened) for the cell"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell:12
msgid "Spatial extent of the cell in each dimension"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell:14
msgid "Number of arrays being binned"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell:16
msgid "Factor to compute the bounding box"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.centroid:1
msgid "'cPoint'"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.centroid:3
msgid "centroid"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.get_bounding_box:1
msgid "Compute the bounding box for the cell."
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.get_bounding_box:3
msgid "The bounding box min coordinates are stored here"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.get_bounding_box:5
msgid "The bounding box max coordinates are stored here"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.get_bounding_box:7
msgid "Number of offset layers to define the bounding box"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.get_bounding_box:9
msgid "Optional cell size to use to compute the bounding box. If not provided, the cell's size will be used."
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.get_centroid:1
msgid "Utility function to get the centroid of the cell."
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.get_centroid:3
msgid "The centroid is cmoputed and stored in this object."
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.gindices:3
msgid "gindices"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.is_boundary:3
msgid "is_boundary"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.lindices:3
msgid "lindices"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.set_indices:1
msgid "Set the global and local indices for the cell"
msgstr ""

#: ../docstring of pysph.base.nnps_base.Cell.size:3
msgid "size"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManager:27
msgid "h_max*radius_scale"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManager.backend:3
#: ../docstring of pysph.base.particle_array.ParticleArray.backend:3
msgid "backend"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManager.compute_cell_size_for_binning:1
msgid "Compute the cell size for the binning."
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManager.compute_cell_size_for_binning:3
msgid "The cell size is chosen as the kernel radius scale times the maximum smoothing length in the local processor. For parallel runs, we would need to communicate the maximum 'h' on all processors to decide on the appropriate binning size."
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManager.manager:3
msgid "manager"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.cell_size:3
#: ../docstring of pysph.base.nnps_base.NNPSBase.cell_size:3
msgid "cell_size"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.copy_props:3
msgid "copy_props"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.dim:1
#: ../docstring of pysph.base.nnps_base.DomainManagerBase.narrays:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.dim:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.n_cells:1
#: ../docstring of pysph.base.nnps_base.NNPSBase.narrays:1
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.np:1
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.ncells_tot:1
msgid "'int'"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.dim:3
#: ../docstring of pysph.base.nnps_base.NNPSBase.dim:3
msgid "dim"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.hmin:3
#: ../docstring of pysph.base.nnps_base.NNPSBase.hmin:3
msgid "hmin"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.in_parallel:3
msgid "in_parallel"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.is_mirror:3
msgid "is_mirror"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.is_periodic:3
#: ../docstring of pysph.base.nnps_base.NNPSBase.is_periodic:3
msgid "is_periodic"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_x:3
msgid "mirror_in_x"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_y:3
msgid "mirror_in_y"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.mirror_in_z:3
msgid "mirror_in_z"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.n_layers:3
msgid "n_layers"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.narrays:3
#: ../docstring of pysph.base.nnps_base.NNPSBase.narrays:3
msgid "narrays"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.pa_wrappers:3
#: ../docstring of pysph.base.nnps_base.NNPSBase.pa_wrappers:3
msgid "pa_wrappers"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_x:3
msgid "periodic_in_x"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_y:3
msgid "periodic_in_y"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.periodic_in_z:3
msgid "periodic_in_z"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.props:3
msgid "props"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.radius_scale:3
#: ../docstring of pysph.base.nnps_base.NNPSBase.radius_scale:3
msgid "radius_scale"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xmax:3
#: ../docstring of pysph.base.nnps_base.NNPS.xmax:3
msgid "xmax"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xmin:3
#: ../docstring of pysph.base.nnps_base.NNPS.xmin:3
msgid "xmin"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.xtranslate:3
msgid "xtranslate"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ymax:3
msgid "ymax"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ymin:3
msgid "ymin"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ytranslate:3
msgid "ytranslate"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.zmax:3
msgid "zmax"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.zmin:3
msgid "zmin"
msgstr ""

#: ../docstring of pysph.base.nnps_base.DomainManagerBase.ztranslate:3
msgid "ztranslate"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS:1
msgid "Nearest neighbor query class using the box-sort algorithm."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS:3
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:4
msgid "NNPS bins all local particles using the box sort algorithm in Cells. The cells are stored in a dictionary 'cells' which is keyed on the spatial index (IntPoint) of the cell."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.current_cache:1
msgid "pysph.base.nnps_base.NeighborCache"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.current_cache:3
msgid "current_cache"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.sort_gids:3
msgid "sort_gids"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.spatially_order_particles:1
msgid "Spatially order particles such that nearby particles have indices nearer each other.  This may improve pre-fetching on the CPU."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.update:1
msgid "Update the local data after particles have moved."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.update:3
msgid "For parallel runs, we want the NNPS to be independent of the ParallelManager which is solely responsible for distributing particles across available processors. We assume therefore that after a parallel update, each processor has all the local particle information it needs and this operation is carried out locally."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.update:10
msgid "For serial runs, this method should be called when the particles have moved."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPS.xmax:1
#: ../docstring of pysph.base.nnps_base.NNPS.xmin:1
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.h:1
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.x:1
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.y:1
#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.z:1
msgid "cyarray.carray.DoubleArray"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase:1
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:4
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:7
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:9
msgid "Constructor for NNPS"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase:3
msgid "Dimension (fixme: Not sure if this is really needed)"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase:5
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:13
msgid "The list of particle arrays we are working on."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase:7
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:10
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:13
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:15
msgid "Optional kernel radius scale. Defaults to 2"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase:9
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:14
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:17
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:17
msgid "Optional limits for the domain"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase:11
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:18
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:21
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:19
msgid "Flag to set if we want to cache neighbor calls. This costs storage but speeds up neighbor calculations."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase:14
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:21
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:24
#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:22
msgid "Flag to sort neighbors using gids (if they are available). This is useful when comparing parallel results with those from a serial run."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.cache:3
msgid "cache"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.domain:1
msgid "pysph.base.nnps_base.DomainManager"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.domain:3
msgid "domain"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.get_nearest_particles_no_cache:1
msgid "Find nearest neighbors for particle id 'd_idx' without cache"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.get_nearest_particles_no_cache:3
#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS.set_context:3
#: ../docstring of pysph.base.spatial_hash_nnps.SpatialHashNNPS.set_context:3
msgid "Index in the list of particle arrays to which the neighbors belong"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.get_nearest_particles_no_cache:5
#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS.set_context:5
#: ../docstring of pysph.base.spatial_hash_nnps.SpatialHashNNPS.set_context:5
msgid "Index in the list of particle arrays to which the query point belongs"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.get_nearest_particles_no_cache:7
msgid "Index of the query point in the destination particle array"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.get_nearest_particles_no_cache:9
msgid "Array to be populated by nearest neighbors of 'd_idx'"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.n_cells:3
msgid "n_cells"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.particles:3
msgid "particles"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSBase.set_context:1
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.set_context:1
msgid "Setup the context before asking for neighbors.  The `dst_index` represents the particles for whom the neighbors are to be determined from the particle array with index `src_index`."
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.gid:1
msgid "cyarray.carray.UIntArray"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.gid:3
msgid "gid"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.h:3
msgid "h"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.name:1
#: ../docstring of pysph.base.particle_array.ParticleArray.backend:1
#: ../docstring of pysph.base.particle_array.ParticleArray.name:1
msgid "unicode"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.name:3
#: ../docstring of pysph.base.particle_array.ParticleArray.name:3
msgid "name"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.np:3
msgid "np"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.pa:1
msgid "pysph.base.particle_array.ParticleArray"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.pa:3
msgid "pa"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.tag:1
#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.ncells_per_dim:1
msgid "cyarray.carray.IntArray"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.tag:3
msgid "tag"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.x:3
msgid "x"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.y:3
msgid "y"
msgstr ""

#: ../docstring of pysph.base.nnps_base.NNPSParticleArrayWrapper.z:3
msgid "z"
msgstr ""

#: ../docstring of pysph.base.nnps_base.arange_uint:1
msgid "Utility function to return a numpy.arange for a UIntArray"
msgstr ""

#: ../docstring of pysph.base.nnps_base.get_centroid:1
msgid "Get the centroid of the cell."
msgstr ""

#: ../docstring of pysph.base.nnps_base.get_centroid:3
msgid "Cell size used for binning"
msgstr ""

#: ../docstring of pysph.base.nnps_base.get_centroid:5
msgid "Spatial index for a cell"
msgstr ""

#: ../docstring of pysph.base.nnps_base.get_centroid:0
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particles_info:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:0
msgid "Returns"
msgstr ""

#: ../docstring of pysph.base.nnps_base.get_centroid:8
msgid "**centroid**"
msgstr ""

#: ../docstring of pysph.base.nnps_base.get_centroid:0
#: ../docstring of pysph.base.particle_array.ParticleArray.get:0
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.interpolate:0
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:0
msgid "Return type"
msgstr ""

#: ../docstring of pysph.base.nnps_base.get_centroid:13
msgid "The centroid in any coordinate direction is defined to be the origin plus half the cell size in that direction"
msgstr ""

#: ../docstring of pysph.base.nnps_base.py_flatten:1
#: ../docstring of pysph.base.nnps_base.py_unflatten:1
msgid "Python wrapper"
msgstr ""

#: ../docstring of pysph.base.nnps_base.py_get_valid_cell_index:1
msgid "Return the flattened cell index for a valid cell"
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:1
msgid "Nearest neighbor query class using the linked list method."
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:6
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:9
msgid "Number of dimension."
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:8
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:11
msgid "The list of particle arrays we are working on"
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:12
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:15
msgid "Optional number of layers to share in parallel"
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS:16
#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:19
msgid "Optional flag to use constant cell sizes throughout."
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.fixed_h:3
msgid "fixed_h"
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.heads:3
msgid "heads"
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.ncells_per_dim:3
msgid "ncells_per_dim"
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.ncells_tot:3
msgid "ncells_tot"
msgstr ""

#: ../docstring of pysph.base.linked_list_nnps.LinkedListNNPS.nexts:3
msgid "nexts"
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS:1
msgid "Nearest neighbor query class using the box sort method but which uses the LinkedList algorithm.  This makes this very fast but perhaps not as safe as the DictBoxSortNNPS.  All this class does is to use a std::map to obtain a linear cell index from the actual flattened cell index."
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS.cell_to_index:1
msgid "'map[long,int]'"
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.BoxSortNNPS.cell_to_index:3
msgid "cell_to_index"
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS:1
msgid "Nearest neighbor query class using the box-sort algorithm using a dictionary."
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.cells:1
#: ../docstring of pysph.base.particle_array.ParticleArray:13
#: ../docstring of pysph.base.particle_array.ParticleArray:19
#: ../docstring of pysph.base.particle_array.ParticleArray.constants:1
#: ../docstring of pysph.base.particle_array.ParticleArray.default_values:1
#: ../docstring of pysph.base.particle_array.ParticleArray.properties:1
#: ../docstring of pysph.base.particle_array.ParticleArray.stride:1
msgid "dict"
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.cells:3
msgid "cells"
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.get_nearest_particles_no_cache:1
msgid "Utility function to get near-neighbors for a particle."
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.get_nearest_particles_no_cache:3
msgid "Index of the source particle array in the particles list"
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.get_nearest_particles_no_cache:5
msgid "Index of the destination particle array in the particles list"
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.get_nearest_particles_no_cache:7
msgid "Destination particle for which neighbors are sought."
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.get_nearest_particles_no_cache:9
msgid "Neighbors for the requested particle are stored here."
msgstr ""

#: ../docstring of pysph.base.box_sort_nnps.DictBoxSortNNPS.get_nearest_particles_no_cache:11
msgid "Specifies if the neighbor array already has pre-allocated space for the neighbor list.  In this case the neighbors are directly set in the given array without resetting or appending to the array. This improves performance when the neighbors are cached."
msgstr ""

#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS:1
msgid "Finds nearest neighbors using Extended Spatial Hashing algorithm"
msgstr ""

#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS:3
msgid "Sub-divides each cell into smaller ones. Useful when particles cluster in a cell."
msgstr ""

#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS:6
msgid "For approximate Extended Spatial Hash, if the distance between a cell and the cell of the query particle is greater than search radius, the entire cell is ignored."
msgstr ""

#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS:10
#: ../docstring of pysph.base.spatial_hash_nnps.SpatialHashNNPS:5
msgid "Ref. http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.105.6732&rep=rep1&type=pdf"
msgstr ""

#: ../docstring of pysph.base.spatial_hash_nnps.ExtendedSpatialHashNNPS.set_context:1
#: ../docstring of pysph.base.spatial_hash_nnps.SpatialHashNNPS.set_context:1
msgid "Set context for nearest neighbor searches."
msgstr ""

#: ../docstring of pysph.base.spatial_hash_nnps.SpatialHashNNPS:1
msgid "Nearest neighbor particle search using Spatial Hashing algorithm"
msgstr ""

#: ../docstring of pysph.base.spatial_hash_nnps.SpatialHashNNPS:3
msgid "Uses a hashtable to store particles according to cell it belongs to."
msgstr ""

#: ../../pysph/docs/source/reference/parallel_manager.rst:3
msgid "Module parallel_manager"
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:2
msgid "Module particle_array"
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:4
msgid "The ``ParticleArray`` class itself is documented as below."
msgstr ""

#: ../docstring of pysph.base.particle_array:1
msgid "A `ParticleArray` represents a collection of particles."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:1
msgid "Class to represent a collection of particles."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:5
#: ../docstring of pysph.base.particle_array.ParticleArray:46
msgid "name of this particle array."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:7
msgid "str"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:11
msgid "dictionary of {prop_name:carray}."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:17
msgid "dictionary of {const_name: carray}"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:22
#: ../docstring of pysph.base.particle_array.ParticleArray.copy_over_properties:7
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array:17
#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.load:7
msgid "Examples"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:23
msgid "There are many ways to create a ParticleArray::"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:30
msgid "For a full specification of properties with their type etc.::"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:37
msgid "The default value is what is used to set the default value when a new particle is added and the arrays auto-resized."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:40
msgid "To create constants that are not resized with added/removed particles::"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:48
msgid "one of `Local`, `Remote` or `Ghost`"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:50
msgid "dictionary of constant arrays for the entire particle array.  These must be arrays and are not resized when particles are added or removed.  These are stored as CArrays internally."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray:54
msgid "any additional keyword arguments are taken to be properties, one for each property."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_constant:1
msgid "Add a constant property to the particle array."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_constant:3
msgid "A constant property is an array but has a fixed size in that it is never resized as particles are added or removed.  These properties are always stored internally as CArrays."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_constant:7
msgid "An example of where this is useful is if you need to calculate the center of mass of a solid body or the net force on the body."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_constant:10
msgid "name of the constant"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_constant:12
msgid "the value for the data."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_output_arrays:1
msgid "Append props to the existing list of output arrays"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_output_arrays:3
msgid "The additional list of property arrays to save"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_particles:1
msgid "Add particles in particle_array to self."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_particles:3
msgid "a dictionary containing numpy arrays for various particle properties."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_particles:9
msgid "all properties should have same length arrays."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_particles:10
msgid "all properties should already be present in this particles array. if new properties are seen, an exception will be raised."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:1
msgid "Add a new property to the particle array."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:3
msgid "If a `default` is not supplied 0 is assumed.  The stride is useful when many elements are needed per particle.  For example if stride is 3 then 3 elements are allocated per particle."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:8
msgid "compulsory name of property."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:10
msgid "specifying the data type of this property ('double', 'int' etc.)"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:13
msgid "specifying the default value of this property."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:15
msgid "specifying the data associated with each particle."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:17
msgid "the number of elements per particle."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:22
msgid "If there are no particles currently in the particle array, and a new property with some particles is added, all the remaining properties will be resized to the size of the newly added array."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:26
msgid "If there are some particles in the particle array, and a new property is added without any particles, then this new property will be resized according to the current size."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:30
msgid "If there are some particles in the particle array and a new property is added with a different number of particles, then an error will be raised."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:36
msgid "it is best not to add properties with data when you already have particles in the particle array. Reason is that, the particles in the particle array will be stored so that the 'Real' particles are in the top of the list and later the dummy ones. The data in your property array should be matched to the particles appropriately. This may not always be possible when there are particles of different type in the particle array."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:43
msgid "Properties without any values can be added anytime."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.add_property:44
msgid "While initializing particle arrays only using the add_property function, you will have to call align_particles manually to make sure particles are aligned properly."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.align_particles:1
msgid "Moves all 'Local' particles to the beginning of the array"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.align_particles:3
msgid "This makes retrieving numpy slices of properties of 'Local' particles possible. This facility will be required frequently."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.align_particles:8
msgid "Pseudo-code::"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.append_parray:1
msgid "Add particles from a particle array"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.append_parray:3
msgid "properties that are not there in self will be added"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.clear:1
msgid "Clear all data held by this array"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.constants:3
msgid "constants"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.copy_over_properties:1
msgid "Copy the properties from one set to another."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.copy_over_properties:3
msgid "A mapping between the properties to be copied."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.copy_over_properties:8
msgid "To save the properties 'x' and 'y' to say 'x0' and 'y0'::"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.copy_properties:1
msgid "Copy properties from source to self"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.copy_properties:3
msgid "the particle array from where to copy."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.copy_properties:5
msgid "the first particle in self which maps to the 0th particle in source"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.copy_properties:8
msgid "the index of first particle from start_index that is not copied"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.default_values:3
msgid "default_values"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.empty_clone:1
msgid "Creates an empty clone of the particle array"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.ensure_properties:1
msgid "Ensure that the particle array has the same properties as the one given."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.ensure_properties:4
msgid "Note that this does not check for any constants but only properties."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.ensure_properties:6
msgid "If the optional props argument is passed it only checks for these."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extend:1
msgid "Increase the total number of particles by the requested amount"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extend:3
msgid "New particles are added at the end of the list, you will have to manually call align_particles later in order to update the number of particles."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:1
msgid "Create new particle array for particles with indices in index_array"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:3
msgid "indices of particles to be extracted (can be a LongArray or list/numpy array)."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:6
msgid "optional Particle array to populate. Note that this array should have the necessary properties. If none is passed a new particle array is created and returned."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:10
msgid "Specify if the destination particle array is to be aligned after particle extraction."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:13
msgid "the list of properties to extract, if None all properties are extracted."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:19
msgid "The algorithm is as follows:"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:21
msgid "create a new particle array with the required properties."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:22
msgid "resize the new array to the desired length (index_array.length)"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.extract_particles:23
msgid "copy the properties from the existing array to the new array."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:1
msgid "Return the numpy array/constant for the  property names in the arguments."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:4
msgid "indicates if properties of only real particles need to be    returned or all particles to be returned. By default only    real particles will be returned. args : additional args    a list of property names."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:5
msgid "indicates if properties of only real particles need to be"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:5
msgid "returned or all particles to be returned. By default only real particles will be returned."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:7
msgid "args"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:None
msgid "additional args"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:8
msgid "a list of property names."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get:13
msgid "The returned numpy array does **NOT** own its data. Other operations may be performed."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_carray:1
msgid "Return the c-array for the property or constant."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_lb_props:1
msgid "Return the properties that are to be load balanced.  If none are explicitly set by the user, return all of the properties."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_number_of_particles:1
msgid "Return the number of particles"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_property_arrays:1
msgid "Return a dictionary of arrays held by the `ParticleArray` container."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_property_arrays:3
msgid "This does not include the constants."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_property_arrays:5
msgid "Flag to select all arrays"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_property_arrays:7
msgid "Flag to select Local/Remote particles"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.get_property_arrays:12
msgid "The dictionary returned is keyed on the property name and the value is the NumPy array representing the data. If `all` is set to False, the list of arrays is determined by the `output_property_arrays` data attribute."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.gpu:3
msgid "gpu"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.has_array:1
msgid "Returns true if the array arr_name is present"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.num_real_particles:1
msgid "'long'"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.num_real_particles:3
msgid "num_real_particles"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.output_property_arrays:3
msgid "output_property_arrays"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.properties:3
msgid "properties"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.property_arrays:3
msgid "property_arrays"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.remove_particles:1
msgid "Remove particles whose indices are given in index_list."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.remove_particles:3
msgid "We repeatedly interchange the values of the last element and values from the index_list and reduce the size of the array by one. This is done for every property that is being maintained."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.remove_particles:7
msgid "an array of indices, this array can be a list, numpy array or a LongArray."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.remove_particles:13
msgid "Pseudo-code for the implementation::"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.remove_property:1
msgid "Removes property prop_name from the particle array"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.remove_tagged_particles:1
msgid "Remove particles that have the given tag."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.remove_tagged_particles:3
msgid "the type of particles that need to be removed."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.resize:1
msgid "Resize all arrays to the new size.  Note that this does not update the number of particles, as this just resizes the internal arrays. To do that, you need to call `align_particles`."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set:1
msgid "Set properties from numpy arrays like objects"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set:3
msgid "a dictionary of properties containing the arrays to be set."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set:8
msgid "the properties being set must already be present in the properties dict."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set:10
msgid "the size of the data should match the array already present."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set_device_helper:1
msgid "Set the device helper to push/pull from a hardware accelerator."
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set_output_arrays:1
msgid "Set the list of output arrays for this ParticleArray"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set_output_arrays:3
msgid "The list of property arrays"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set_output_arrays:8
msgid "In PySPH, the solver obtains the list of property arrays to output by calling the `ParticleArray.get_property_arrays` method. If detailed output is not requested, the `output_property_arrays` attribute is used to determine the arrays that will be written to file"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set_pid:1
msgid "Set the processor id for all particles"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.set_tag:1
msgid "Set value of tag to tag_value for the particles in indices"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.stride:3
msgid "stride"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.time:3
msgid "time"
msgstr ""

#: ../docstring of pysph.base.particle_array.ParticleArray.update_min_max:1
msgid "Update the min,max values of all properties"
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:10
msgid "Convenience functions to create particle arrays"
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:12
msgid "There are several convenience functions that provide a particle array with a requisite set of particle properties that are documented below."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.arange_long:1
msgid "Creates a LongArray working same as builtin range with upto 2 arguments both expected to be positive"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.create_dummy_particles:1
msgid "Returns a replica (empty) of a list of particles"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array:1
msgid "Create and return a particle array with default properties."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array:3
msgid "The default properties are ['x', 'y', 'z', 'u', 'v', 'w', 'm', 'h', 'rho', 'p', 'au', 'av', 'aw', 'gid', 'pid', 'tag'], this set is available in `DEFAULT_PROPS`."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array:8
msgid "If specified, add these properties."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array:10
msgid "Any constants to be added to the particle array."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_gasd:1
msgid "Return a particle array for a Gas Dynamics problem."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_iisph:1
msgid "Get a particle array for the IISPH formulation."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_iisph:3
msgid "The default properties are::"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_rigid_body:1
msgid "Return a particle array for a rigid body motion."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_rigid_body:3
msgid "For multiple bodies, add a body_id property starting at index 0 with each index denoting the body to which the particle corresponds to."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_swe:1
msgid "**Return a particle array for the shallow water formulation**"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_swe:3
#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_wcsph:3
msgid "This sets the default properties to be::"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_fluid:1
msgid "Return a particle array for the TVF formulation for a fluid."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_tvf_solid:1
msgid "Return a particle array for the TVF formulation for a solid."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particle_array_wcsph:1
msgid "Return a particle array for the WCSPH formulation."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particles_info:1
msgid "Return the array information for a list of particles."
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particles_info:3
msgid "* *An OrderedDict containing the property information for a list of* * *particles. This dict can be used for example to set-up dummy/empty* * *particle arrays.*"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particles_info:3
msgid "*An OrderedDict containing the property information for a list of*"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particles_info:4
msgid "*particles. This dict can be used for example to set-up dummy/empty*"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.get_particles_info:5
msgid "*particle arrays.*"
msgstr ""

#: ../../pysph/pysph/base/utils.py:docstring of pysph.base.utils.is_overloaded_method:1
msgid "Returns True if the given method is overloaded from any of its bases."
msgstr ""

#: ../../pysph/docs/source/reference/scheme.rst:2
msgid "Module scheme"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme:1
msgid "Abstract class to define the API for an SPH scheme.  The idea is that one can define a scheme and thereafter one simply instantiates a suitable scheme, gives it a bunch of particles and runs the application."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:5
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:16
msgid "dimensionality of the problem"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:7
msgid "Gamma for equation of state"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:9
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:11
msgid "artificial viscosity parameter"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:13
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:15
msgid "kernel scaling parameter"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:17
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:19
msgid "artificial heat conduction parameter"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.ADKEScheme:21
msgid "if problem uses ghost particles (periodic or mirror)"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme:1
msgid "This is a scheme similiar to that in the paper:"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme:3
msgid "Adami, S., Hu, X., Adams, N. A generalized wall boundary condition for smoothed particle hydrodynamics.  Journal of Computational Physics 2012;231(21):7057-7075."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme:7
msgid "The major difference is in how the equations are integrated.  The paper has a different scheme that does not quite fit in with how things are done in PySPH readily so we simply use the WCSPHStep which works well."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.attributes_changed:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.attributes_changed:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.attributes_changed:1
msgid "Overload this to compute any properties that depend on others."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.AdamiHuAdamsScheme.attributes_changed:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.attributes_changed:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.attributes_changed:3
msgid "This is automatically called when configure is called."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:3
msgid "List of names of solid particle arrays (or boundaries), currently not supported"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:8
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:8
msgid "Gamma for Equation of state."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:10
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:10
msgid "Kernel scaling factor."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:12
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:14
msgid "ADKE style thermal conduction parameters"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:16
msgid "Riemann solver to use.  See pysph.sph.gas_dynamics.gsph for valid options."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:19
msgid "Kind of interpolation for the specific volume integrals."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:21
msgid "Type of monotonicity algorithm to use: 0 : First order GSPH 1 : I02 algorithm 2 : IwIn algorithm"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:26
msgid "Set Interface position s^*_{ij} = 0 for the Riemann problem."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:28
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:30
msgid "Hybrid scheme and blending alpha value"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:32
msgid "Final time used for blending."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:34
msgid "Max number of iterations for iterative Riemann solvers."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:36
msgid "Tolerance for iterative Riemann solvers."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GSPHScheme:38
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:28
msgid "if ghost particles (either mirror or periodic) is used"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:12
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:14
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:16
msgid "Artificial viscosity parameter."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:18
msgid "Adaptive h scheme to use. One of ['mpm', 'gsph']"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:20
msgid "Update the alpha1 parameter dynamically."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:22
msgid "Update the alpha2 parameter dynamically."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:24
msgid "Maximum number of iterations to run for one density step"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.GasDScheme:26
msgid "Maximum difference allowed in two successive density iterations"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme:1
msgid "An API for an SPH scheme."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure:1
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure:1
msgid "Configure the scheme with given parameters."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.Scheme.configure:3
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser.configure:3
msgid "Overload this to do any scheme specific stuff."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser:1
msgid "Name of the default scheme to use."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.SchemeChooser:3
msgid "The schemes to choose between."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:11
msgid "Gamma for the equation of state."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:15
msgid "Ratio of h/dx."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:17
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:19
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:21
msgid "Body force acceleration components."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:23
#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:25
msgid "Coefficient for artificial viscosity."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:27
msgid "Coefficient used to control the intensity of diffusion of density"
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:29
msgid "Real viscosity of the fluid, defaults to no viscosity."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:31
msgid "Use tensile correction."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:33
msgid "Use the Hughes-Graham correction."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:35
msgid "Update the smoothing length as per Ferrari et al."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:37
msgid "Use the delta-SPH correction terms."
msgstr ""

#: ../../pysph/pysph/sph/scheme.py:docstring of pysph.sph.scheme.WCSPHScheme:39
msgid "Use summation density instead of continuity."
msgstr ""

#: ../../pysph/docs/source/reference/solver.rst:2
msgid "Module solver"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver:1
msgid "An implementation of a general solver base class"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:1
msgid "Base class for all PySPH Solvers"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:4
msgid "**Constructor**"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:6
msgid "Any additional keyword args are used to set the values of any of the attributes."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:9
msgid "Dimension of the problem"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:11
msgid "Integrator to use"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:13
msgid "SPH kernel to use"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:15
msgid "Number of timesteps for which the initial damping is required. This is used to improve stability for problems with strong discontinuity in initial condition. Setting it to zero will disable damping of the timesteps."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:20
msgid "Suggested initial time step for integration"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:22
msgid "Final time for integration"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:24
msgid "Flag to use adaptive time steps"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:26
msgid "CFL number for adaptive time stepping"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:28
msgid "Output files dumping frequency."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:30
msgid "Optional list of output times to force dump the output file"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:32
msgid "Flag for constant smoothing lengths `h`"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:34
msgid "The number of iterations after which particles should be re-ordered.  If zero, do not do this."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver:39
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_post_stage_callback:7
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_post_step_callback:6
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_pre_step_callback:6
msgid "Example"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_post_stage_callback:1
msgid "These callbacks are called *after* each integrator stage."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_post_stage_callback:3
msgid "The callbacks are passed (current_time, dt, stage).  See the the `Integrator.one_timestep` methods for examples of how this is called."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_post_step_callback:1
msgid "These callbacks are called *after* each timestep is performed."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_post_step_callback:3
#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_pre_step_callback:3
msgid "The callbacks are passed the solver instance (i.e. self)."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.add_pre_step_callback:1
msgid "These callbacks are called *before* each timestep is performed."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.append_particle_arrrays:1
msgid "Append the particle arrays to the existing particle arrays"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:1
msgid "Dump the simulation results to file"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:3
msgid "The arrays used for printing are determined by the particle array's `output_property_arrays` data attribute. For debugging it is sometimes nice to have all the arrays (including accelerations) saved. This can be chosen from using the command line option `--detailed-output`"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:9
msgid "Output data Format:"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:11
msgid "A single file named as: <fname>_<rank>_<iteration_count>.npz"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:13
msgid "The data is saved as a Python dictionary with two keys:"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:15
msgid "`solver_data` : Solver meta data like time, dt and iteration number"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:31
msgid "`arrays`"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:None
msgid "A dictionary keyed on particle array names and with"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:18
msgid "particle properties as value."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:20
msgid "Example:"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:22
msgid "You can load the data output by PySPH like so:"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:31
msgid "In the above example, it is assumed that the output file contained an array named fluid."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.get_options:1
msgid "Implement this to add additional options for the application"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.load_output:1
msgid "Load particle data from dumped output file."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.load_output:3
msgid "The iteration time from which to load the data. If time is '?' then list of available data files is returned else the latest available data file is used"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.load_output:10
msgid "Data is loaded from the :py:attr:`output_directory` using the same format as stored by the :py:meth:`dump_output` method. Proper functioning required that all the relevant properties of arrays be dumped."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:1
msgid "Re-order particles so as to coalesce memory access."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_adaptive_timestep:1
msgid "Set it to True to use adaptive timestepping based on cfl, viscous and force factor."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_adaptive_timestep:4
msgid "Look at pysph.sph.integrator.compute_time_step for more details."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_arrays_to_print:1
msgid "Only print the arrays with the given names."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_cfl:1
msgid "Set the CFL number for adaptive time stepping"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_command_handler:1
msgid "set the `callable` to be called at every `command_interval` iteration"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_command_handler:4
msgid "the `callable` is called with the solver instance as an argument"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_compress_output:1
msgid "Compress the dumped output files."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_disable_output:1
msgid "Disable file output."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_final_time:1
msgid "Set the final time for the simulation"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_max_steps:1
msgid "Set the maximum number of iterations to perform."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_n_damp:1
msgid "Set the number of timesteps for which the timestep should be initially damped."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_output_at_times:1
msgid "Set a list of output times"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_output_directory:1
msgid "Set the output directory"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_output_fname:1
msgid "Set the output file name"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_output_only_real:1
msgid "Set the flag to save out only real particles"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_output_printing_level:1
msgid "Set the output printing level"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_parallel_output_mode:1
msgid "Set the default solver dump mode in parallel."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_parallel_output_mode:3
msgid "The available modes are:"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_parallel_output_mode:7
msgid "collected"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_parallel_output_mode:None
msgid "Collect array data from all processors on root and"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_parallel_output_mode:6
msgid "dump a single file."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_parallel_output_mode:9
msgid "distributed : Each processor dumps a file locally."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_print_freq:1
msgid "Set the output print frequency"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_reorder_freq:1
msgid "Set the reorder frequency in number of iterations."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.set_time_step:1
msgid "Set the time step to use"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup:1
msgid "Setup the solver."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup:3
msgid "The solver's processor id is set if the in_parallel flag is set to true."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup:6
msgid "The order of the integrating calcs is determined by the solver's order attribute."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup:9
msgid "This is usually called at the start of a PySPH simulation."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup_solver:1
msgid "Implement the basic solvers here"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup_solver:3
msgid "All subclasses of Solver may implement this function to add the necessary operations for the problem at hand."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.setup_solver:6
msgid "options set by the user using commandline (there is no guarantee of existence of any key)"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.solve:1
msgid "Solve the system"
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.solve:5
msgid "Pre-stepping functions are those that need to be called before the integrator is called."
msgstr ""

#: ../../pysph/pysph/solver/solver.py:docstring of pysph.solver.solver.Solver.solve:8
msgid "Similarly, post step functions are those that are called after the stepping within the integrator."
msgstr ""

#: ../../pysph/docs/source/reference/solver.rst:8
msgid "Module solver tools"
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.DensityCorrection:1
msgid "A tool to reinitialize the density of the fluid particles"
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.DensityCorrection:3
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:6
msgid "The application instance."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.DensityCorrection:5
msgid "Names of the particle arrays whose densities needs to be reinitialized."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.DensityCorrection:8
msgid "Name of the density reinitialization operation. corr='shepard' for using zeroth order shepard filter"
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.DensityCorrection:11
msgid "Frequency of reinitialization."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:1
msgid "A simple tool to periodically remesh a given array of particles onto an initial set of points."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:8
msgid "Name of the particle array that needs to be remeshed."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:10
msgid "List of properties to interpolate."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:12
msgid "Frequency of remeshing operation."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:14
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:17
#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:20
msgid "Positions to remesh the properties onto.  If not specified they are taken from the particle arrays at the time of construction."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.SimpleRemesher:25
msgid "Equations to use for the interpolation, passed to the interpolator."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.Tool:1
msgid "A tool is typically an object that can be used to perform a specific task on the solver's pre_step/post_step or post_stage callbacks. This can be used for a variety of things.  For example, one could save a plot, print debug statistics or perform remeshing etc."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.Tool:6
msgid "To create a new tool, simply subclass this class and overload any of its desired methods."
msgstr ""

#: ../../pysph/pysph/solver/tools.py:docstring of pysph.solver.tools.Tool.post_stage:5
msgid "The method is passed (current_time, dt, stage).  See the the `Integrator.one_timestep` methods for examples of how this is called."
msgstr ""

#: ../../pysph/docs/source/reference/solver.rst:14
msgid "Module boundary conditions"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager:1
msgid "Inlet Outlet Manager"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.CopyNormalsandDistances:1
msgid "Copy normals and distances from outlet/inlet particles to ghosts"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:4
msgid "Compute ioid for the particles"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:2
msgid "0 : particle is in fluid 1 : particle is inside the inlet/outlet 2 : particle is out of inlet/outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:6
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:4
msgid "destination particle array name"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:8
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:6
msgid "List of source particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:10
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:14
msgid "x coordinate of interface point"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:12
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:16
msgid "y coordinate of interface point"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:14
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:18
msgid "z coordinate of interface point"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:16
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:8
msgid "x component of interface outward normal"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:18
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:10
msgid "y component of interface outward normal"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:20
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:12
msgid "z component of interface outward normal"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.IOEvaluate:22
msgid "Maximum length of inlet/outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:1
msgid "An API to add/delete particle when moving between inlet-fluid"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:3
msgid "particle array for inlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:5
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:5
msgid "particle_array of the fluid"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:7
msgid "contains information fo inlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:9
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:11
msgid "Kernel to be used for computations"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:11
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.setup_iom:3
msgid "dimension of the problem"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:13
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:15
msgid "stages of integrator at which update should be active"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:15
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:17
msgid "callback after the update function"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase:17
msgid "particle_array of the ghost_inlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase.initialize:1
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase.initialize:1
msgid "Function to initialize the class variables after evaluation in SimpleInletOutlet class"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletBase.update:1
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase.update:1
msgid "Update function called after each stage"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:3
msgid "Create object with information of inlets, all the others parameters which"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:2
msgid "are not passed here get evaluated by `InletOutletManager` once the inlet is created."
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:5
msgid "Name of the inlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:7
msgid "Components of normal (float)"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:9
msgid "Point at the fluid-inlet interface (float)"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:11
msgid "if True, the ghost particles will be created"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:13
msgid "the class which is to be used to update the inlet/outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:15
msgid "List of equations (optional)"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletInfo:17
msgid "properties to copy"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager:3
msgid "Create the object to manage inlet outlet boundary conditions."
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager:2
msgid "Most of the variables are evaluated after the scheme and particles are created."
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager:5
msgid "List of fluid particles array names (str)"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager:7
msgid "List of inlets (InletInfo)"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager:9
msgid "List of outlet (OutletInfo)"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager:11
msgid "Dict of custom equations"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.add_io_properties:1
msgid "Add properties to be used in inlet/outlet equations"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.add_io_properties:3
msgid "Particle array of inlet/outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.add_io_properties:5
msgid "The insance of scheme class"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.create_ghost:1
msgid "Creates ghosts for the given inlet/outlet particles"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.create_ghost:3
msgid "particles array for which ghost is required"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.create_ghost:5
msgid "if True, inlet info will be used for ghost creation"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_equations:1
msgid "Returns the equations for inlet/outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_equations:3
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_stepper:3
msgid "The instance of the scheme class"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_equations:5
#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_stepper:7
msgid "Extra arguments depending upon the scheme used"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_equations_post_compute_acceleration:1
msgid "Returns the equations for inlet/outlet used post acceleration computation"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_inlet_outlet:3
msgid "Returns list of `Inlet` and `Outlet` instances which"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_inlet_outlet:2
msgid "performs the change in inlet particles to outlet particles."
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_inlet_outlet:5
msgid "List of all particle_arrays"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_io_names:1
msgid "return all the names of inlets and outlets :param ghost: if True, return the names of ghost also :type ghost: bool"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_stepper:1
msgid "Returns the steppers for inlet/outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.get_stepper:5
msgid "The parent class of the integrator"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.setup_iom:1
msgid "Essential data passed"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.setup_iom:5
msgid "the kernel instance"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.update_dx:1
msgid "Update the discretisation length"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.InletOutletManager.update_dx:3
msgid "The discretisation length"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:1
msgid "An API to add/delete particle when moving between fluid-outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:3
msgid "particle array for outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:7
msgid "particle_array of the outlet ghost"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:9
msgid "contains information fo outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletBase:13
msgid "dimnesion of the problem"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletInfo:1
msgid "Create object with information of outlet"
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.OutletInfo:3
msgid "The name is kept different for distinction only."
msgstr ""

#: ../../pysph/pysph/sph/bc/inlet_outlet_manager.py:docstring of pysph.sph.bc.inlet_outlet_manager.UpdateNormalsAndDisplacements:1
msgid "Update normal and perpendicular distance from the interface for the inlet/outlet particles"
msgstr ""

#: ../../pysph/docs/source/reference/solver_interfaces.rst:2
msgid "Module solver_interfaces"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.CommandlineInterface:1
msgid "command-line interface to the solver controller"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler:1
msgid "SimpleXMLRPCRequestHandler subclass which attempts to do CORS"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler:3
msgid "CORS is Cross-Origin-Resource-Sharing (http://www.w3.org/TR/cors/) which enables xml-rpc calls from a different domain than the xml-rpc server (such requests are otherwise denied)"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.do_GET:1
msgid "Handle http requests to serve html/image files only"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.do_OPTIONS:1
msgid "Implement the CORS pre-flighted access for resources"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.end_headers:1
msgid "End response header with adding Access-Control-Allow-Origin"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.end_headers:3
msgid "This is done to enable CORS request from all clients"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.MultiprocessingClient:1
msgid "A client for the multiprocessing interface"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.MultiprocessingClient:3
msgid "Override the run() method to do appropriate actions on the proxy instance of the controller object or add an interface using the add_interface methods similar to the Controller.add_interface method"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.MultiprocessingClient.add_interface:1
msgid "This makes it act as substitute for the actual command_manager"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.MultiprocessingClient.start:1
#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.MultiprocessingInterface.start:1
msgid "Spawn a server process for this manager object"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.MultiprocessingInterface:1
msgid "A multiprocessing interface to the solver controller"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.MultiprocessingInterface:3
msgid "This object exports a controller instance proxy over the multiprocessing interface. Control actions can be performed by connecting to the interface and calling methods on the controller proxy instance"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.XMLRPCInterface:1
msgid "An XML-RPC interface to the solver controller"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.XMLRPCInterface:3
msgid "Currently cannot work with objects which cannot be marshalled (which is basically most custom classes, most importantly ParticleArray and numpy arrays)"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.py:docstring of pysph.solver.solver_interfaces.XMLRPCInterface:7
msgid "Constructor.  May be extended, do not override."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:4
msgid "Miscellaneous Tools for PySPH"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:11
msgid "Input/Output of data files"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:13
msgid "The following functions are handy functions when processing output generated by PySPH or to generate new files."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:1
msgid "Dump the given particles and solver data to the given filename."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:3
msgid "Filename to dump to."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:5
msgid "Sequence of particle arrays to dump."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:7
msgid "Additional information to dump about solver state."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:9
msgid "Specifies if all arrays should be dumped."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:11
msgid "Only dump the real particles."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:13
msgid "An MPI communicator to use for parallel commmunications."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.dump:15
msgid "Specify if the  file is to be compressed or not."
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.get_files:1
msgid "Get all solution files in a given directory, `dirname`."
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.get_files:3
msgid "Name of directory."
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.get_files:5
msgid "An initial part of the filename, if not specified use the first part of the dirname."
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.get_files:8
msgid "The extension of the file to load."
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.load:1
msgid "Load the output data"
msgstr ""

#: ../../pysph/pysph/solver/output.py:docstring of pysph.solver.output.load:3
msgid "Name of the file or full path"
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.load_and_concatenate:1
msgid "Load the results from multiple files."
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.load_and_concatenate:3
msgid "Given a filename prefix and the number of processors, return a concatenated version of the dictionary returned via load."
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.load_and_concatenate:6
msgid "A filename prefix for the output file."
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.load_and_concatenate:8
msgid "The number of processors (files) to read"
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.load_and_concatenate:10
msgid "The directory for the files"
msgstr ""

#: ../../pysph/pysph/solver/utils.py:docstring of pysph.solver.utils.load_and_concatenate:12
msgid "The file iteration count to read. If None, the last available one is read"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:26
msgid "Interpolator"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:28
msgid "This module provides a convenient class called :py:class:`interpolator.Interpolator` which can be used to interpolate any scalar values from the points onto either a mesh or a collection of other points.  SPH interpolation is performed with a simple Shepard filtering."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:1
msgid "Convenient class to interpolate particle properties onto a uniform grid or given set of particles.  This is particularly handy for visualization."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:5
msgid "The x, y, z coordinates need not be specified, and if they are not, the bounds of the interpolated domain is automatically computed and `num_points` number of points are used in this domain uniformly placed."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:9
msgid "A list of particle arrays."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:11
msgid "the number of points to interpolate on to."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:13
msgid "the kernel to use for interpolation."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:15
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_interpolation_points:7
msgid "the x-coordinate of points on which to interpolate."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:17
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_interpolation_points:9
msgid "the y-coordinate of points on which to interpolate."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:19
#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_interpolation_points:11
msgid "the z-coordinate of points on which to interpolate."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:21
msgid "An optional Domain manager for periodic domains."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:23
msgid "A sequence of equations or groups.  Defaults to None.  This is used only if the default interpolation equations are inadequate."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator:26
msgid "String with the following allowed methods: 'shepard', 'sph', 'order1'"
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.interpolate:1
msgid "Interpolate given property."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.interpolate:3
msgid "The name of the property to interpolate."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.interpolate:5
msgid "The component of the gradient required"
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_domain:1
msgid "Set the domain to interpolate into."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_domain:3
msgid "(xmin, xmax, ymin, ymax, zmin, zmax)"
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_domain:5
msgid "(nx, ny, nz)"
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_interpolation_points:1
msgid "Set the points on which we must interpolate the arrays."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.set_interpolation_points:3
msgid "If any of x, y, z is not passed it is assumed to be 0.0 and shaped like the other non-None arrays."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.update:1
#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator.update:1
msgid "Update the NNPS when particles have moved."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.update:3
#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator.update:3
msgid "If the update_domain is False, the domain is not updated."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.update:5
#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator.update:5
msgid "Use this when the arrays are the same but the particles have themselves changed. If the particle arrays themselves change use the `update_particle_arrays` method instead."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.update_particle_arrays:1
#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator.update_particle_arrays:1
msgid "Call this for a new set of particle arrays which have the same properties as before."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.Interpolator.update_particle_arrays:4
#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator.update_particle_arrays:4
msgid "For example, if you are reading the particle array data from files, each time you load a new file a new particle array is read with the same properties.  Call this function to reset the arrays."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximation:1
msgid "First order SPH approximation."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximation:3
msgid "The method used to solve the linear system in this function is not same as in the reference. In the function :math:`Ax=b` is solved where :math:`A := moment` (Moment matrix) and :math:`b := p_sph` (Property calculated using basic SPH). The calculation need the \"moment\" to be evaluated before this step which is done in `SPHFirstOrderApproximationPreStep`"
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.SPHFirstOrderApproximation:11
msgid "M.B. Liu, G.R. Liu, \"Restoring particle consistency in smoothed particle hydrodynamics\", Applied Numerical Mathematics Volume 56, Issue 1 2006, Pages 19-36, ISSN 0168-9274"
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.get_bounding_box:1
msgid "Find the size of the domain given a sequence of particle arrays."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.get_bounding_box:3
msgid "If `tight` is True, the bounds are tight, if not the domain is stretched along each dimension by an amount `stretch` specified as a percentage of the length along that dimension is added in each dimension."
msgstr ""

#: ../../pysph/pysph/tools/interpolator.py:docstring of pysph.tools.interpolator.get_nx_ny_nz:1
msgid "Given a number of points to use and the bounds, return a triplet of integers for a uniform mesh with approximately that many points."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:39
msgid "SPH Evaluator"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:41
msgid "This module provides a class that allows one to evaluate a set of equations on a collection of particle arrays. This is very handy for non-trivial post-processing that needs to be quick."
msgstr ""

#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator:1
msgid "A convenience class that combines an AccelerationEval and an SPHCompiler to allow a user to specify particle arrays, equations, an optional domain and kernel to produce an SPH evaluation."
msgstr ""

#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator:5
msgid "This is handy for post-processing."
msgstr ""

#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator:13
msgid "one of ('opencl', 'cython', '', None)"
msgstr ""

#: ../../pysph/pysph/tools/sph_evaluator.py:docstring of pysph.tools.sph_evaluator.SPHEvaluator.evaluate:1
msgid "Evalute the SPH equations, dummy t and dt values can be passed."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:51
msgid "GMsh input/output"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:59
msgid "Mayavi Viewer"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:66
msgid "Mesh Converter"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:68
msgid "The following functions can be used to convert a mesh file supported by `meshio <https://github.com/nschloe/meshio>`_ to a set of surface points."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:74
msgid "Particle Packer"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:76
msgid "The following functions can be used to create a domain with particle packed around a solid surface in both 2D and 3D."
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:1
msgid "Creates a periodic packed 2D or 3D domain. It creates particles which are not aligned but packed such that the number density is uniform."
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:8
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:8
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:8
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:8
msgid "required particle spacing"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:10
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:10
msgid "length of the domain"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:12
msgid "Width of the domain"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:14
msgid "Height of the domain"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:18
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:22
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:20
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:20
msgid "projection frequency of particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:20
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:14
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:12
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:12
msgid "background pressure (default: 1.0)"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:22
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:16
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:14
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:14
msgid "viscosity coefficient (default: 0.3/dx)"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:24
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:18
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:16
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:16
msgid "coefficient of repulsion (default: 0.005*dx)"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:26
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:34
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:32
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:32
msgid "tolerance value for convergence (default: 1e-2)"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:29
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:37
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:35
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:35
msgid "* **xs** (*float*) -- x coordinate of solid particles * **ys** (*float*) -- y coordinate of solid particles * **zs** (*float*) -- z coordinate of solid particles * **xf** (*float*) -- x coordinate of fluid particles * **yf** (*float*) -- y coordinate of fluid particles * **zf** (*float*) -- z coordinate of fluid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:29
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:37
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:35
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:35
msgid "**xs** (*float*) -- x coordinate of solid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:30
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:38
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:36
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:36
msgid "**ys** (*float*) -- y coordinate of solid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:31
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:39
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:37
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:37
msgid "**zs** (*float*) -- z coordinate of solid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:32
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:40
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:38
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:38
msgid "**xf** (*float*) -- x coordinate of fluid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:33
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:41
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:39
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:39
msgid "**yf** (*float*) -- y coordinate of fluid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_periodic_packed_particles:34
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:42
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:40
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:40
msgid "**zf** (*float*) -- z coordinate of fluid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:1
msgid "Creates a packed configuration of particles around the given coordinates of a 2D geometry."
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:4
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:4
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:4
msgid "options function from the parent Application class"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:6
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:6
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:6
msgid "Application class output directory"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:10
msgid "x coordinates of the geometry"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:12
msgid "y coordinates of the geometry"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:20
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:18
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:18
msgid "the scaling factor for the coordinates"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:24
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:22
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:22
msgid "if True the computed normals are inverted"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:26
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:24
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:24
msgid "the dictionary of hardpoints"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:28
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:26
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:26
msgid "if True, points are projected quickly to reach prediction points"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:30
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:28
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:28
msgid "if True, particles away from boundary are frozen"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_coordinates:32
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:30
#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:30
msgid "if True, reduce projection frequency"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:1
msgid "Creates a packed configuration of particles around the given geometry file containing the x, y coordinates."
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_2d_particles_from_surface_file:10
msgid "file containing the x, y coordinates of the geometry"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:1
msgid "Creates a packed configuration of particles around the given STL file containing the x, y, z coordinates and normals."
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.get_packed_3d_particles_from_surface_file:10
msgid "the STL filename"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:1
msgid "Create the outer fluid particles around the generated packing. It adds the packed fluid particles and generate a concatenated particle array"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:4
msgid "particle spacing"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:6
msgid "x coordinate of fluid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:8
msgid "y coordinate of fluid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:12
msgid "width of the domain"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:14
msgid "z coordinate of fluid particles"
msgstr ""

#: ../../pysph/pysph/tools/geometry.py:docstring of pysph.tools.geometry.create_fluid_around_packing:16
msgid "height of the domain"
msgstr ""
