# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2018, PySPH developers
# This file is distributed under the same license as the PySPH package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PySPH 1.0b1.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-01 15:35+0000\n"
"PO-Revision-Date: 2021-11-01 15:22+0000\n"
"Language-Team: Japanese (https://www.transifex.com/getfem-doc/teams/127008/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pysph/docs/source/overview.rst:3
msgid "Overview"
msgstr ""

#: ../../pysph/docs/source/overview.rst:6
msgid ""
"PySPH is an open source framework for Smoothed Particle Hydrodynamics (SPH) "
"simulations.  It is implemented in Python_ and the performance critical "
"parts are implemented in Cython_ and PyOpenCL_."
msgstr ""

#: ../../pysph/docs/source/overview.rst:10
msgid ""
"PySPH is implemented in a way that allows a user to specify the entire SPH "
"simulation in pure Python. High-performance code is generated from this "
"high-level Python code, compiled on the fly and executed. PySPH can use "
"OpenMP to utilize multi-core CPUs effectively. PySPH can work with OpenCL "
"and use your GPGPUs. PySPH also features optional automatic parallelization "
"(multi-CPU) using mpi4py_ and Zoltan_. If you wish to use the parallel "
"capabilities you will need to have these installed."
msgstr ""

#: ../../pysph/docs/source/overview.rst:18
msgid "Here are videos of simulations made with PySPH."
msgstr ""

#: ../../pysph/docs/source/overview.rst:30
msgid ""
"PySPH is hosted on `github <https://github.com/pypr/pysph>`_. Please see the"
" site for development details."
msgstr ""

#: ../../pysph/docs/source/overview.rst:42
msgid "Features"
msgstr ""

#: ../../pysph/docs/source/overview.rst:44
msgid "User scripts and equations are written in pure Python."
msgstr ""

#: ../../pysph/docs/source/overview.rst:45
msgid "Flexibility to define arbitrary SPH equations operating on particles."
msgstr ""

#: ../../pysph/docs/source/overview.rst:46
msgid "Ability to define your own multi-step integrators in pure Python."
msgstr ""

#: ../../pysph/docs/source/overview.rst:47
msgid ""
"High-performance: our performance is comparable to hand-written solvers "
"implemented in FORTRAN."
msgstr ""

#: ../../pysph/docs/source/overview.rst:49
msgid "Seamless multi-core support with OpenMP."
msgstr ""

#: ../../pysph/docs/source/overview.rst:50
msgid "Seamless GPU support with PyOpenCL_."
msgstr ""

#: ../../pysph/docs/source/overview.rst:51
msgid "Seamless parallel integration using Zoltan_."
msgstr ""

#: ../../pysph/docs/source/overview.rst:52
msgid ""
"`BSD license <https://github.com/pypr/pysph/tree/master/LICENSE.txt>`_."
msgstr ""

#: ../../pysph/docs/source/overview.rst:56
msgid "SPH formulations"
msgstr ""

#: ../../pysph/docs/source/overview.rst:58
msgid ""
"Currently, PySPH has numerous examples to solve the viscous, incompressible "
"Navier-Stokes equations using the weakly compressible (WCSPH) approach. The "
"following formulations are currently implemented:"
msgstr ""

#: ../../pysph/docs/source/overview.rst:62
msgid ""
"`Weakly Compressible SPH (WCSPH)`_ for free-surface flows (Gesteira et al. "
"2010, Journal of Hydraulic Research, 48, pp. 6--27)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:68
msgid "3D dam-break past an obstacle SPHERIC benchmark `Test 2`_"
msgstr ""

#: ../../pysph/docs/source/overview.rst:70
msgid ""
"`Transport Velocity Formulation`_ for incompressilbe fluids (Adami et al. "
"2013, JCP, 241, pp. 292--307)."
msgstr ""

#: ../../pysph/docs/source/overview.rst:76
msgid "Streamlines for a driven cavity"
msgstr ""

#: ../../pysph/docs/source/overview.rst:78
msgid ""
"`SPH for elastic dynamics`_ (Gray et al. 2001, CMAME, Vol. 190, pp 6641--"
"6662)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:84
msgid "Collision of two elastic rings."
msgstr ""

#: ../../pysph/docs/source/overview.rst:87
msgid "`Compressible SPH`_ (Puri et al. 2014, JCP, Vol. 256, pp 308--333)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:100
msgid ""
"`Generalized Transport Velocity Formulation (GTVF) "
"<https://doi.org/10.1016/j.jcp.2017.02.016>`_ (Zhang et al. 2017, JCP, 337, "
"pp. 216--232)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:103
msgid ""
"`Entropically Damped Artificial Compressibility (EDAC) "
"<http://dx.doi.org/10.1016/j.compfluid.2018.11.023>`_ (Ramachandran et al. "
"2019, Computers and Fluids, 179, pp. 579--594)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:106
msgid ""
"`delta-SPH <http://dx.doi.org/10.1016/j.cma.2010.12.016>`_ (Marrone et al. "
"CMAME, 2011, 200, pp. 1526--1542)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:108
msgid ""
"`Dual Time SPH (DTSPH) <https://arxiv.org/abs/1904.00861>`_ (Ramachandran et"
" al. arXiv preprint)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:110
msgid ""
"`Incompressible (ISPH) <https://doi.org/10.1006/jcph.1999.6246>`_ (Cummins "
"et al. JCP, 1999, 152, pp. 584--607)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:112
msgid ""
"`Simple Iterative SPH (SISPH) <https://arxiv.org/abs/1908.01762>`_ (Muta et "
"al. arXiv preprint)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:114
msgid ""
"`Implicit Incompressibel SPH (IISPH) "
"<https://doi.org/10.1109/TVCG.2013.105>`_ (Ihmsen et al. 2014, IEEE Trans. "
"Vis. Comput. Graph., 20, pp 426--435)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:117
msgid ""
"`Gudnov SPH (GSPH) <https://doi.org/10.1006/jcph.2002.7053>`_ (Inutsuka et "
"al. JCP, 2002, 179, pp. 238--267)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:119
msgid ""
"`Conservative Reproducible Kernel SPH (CRKSPH) "
"<http://dx.doi.org/10.1016/j.jcp.2016.12.004>`_ (Frontiere et al. JCP, 2017,"
" 332, pp. 160--209)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:122
msgid ""
"`Approximate Gudnov SPH (AGSPH) "
"<https://doi.org/10.1016/j.jcp.2014.03.055>`_ (Puri et al. JCP, 2014, pp. "
"432--458)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:124
msgid ""
"`Adaptive Density Kernel Estimate (ADKE) "
"<https://doi.org/10.1016/j.jcp.2005.06.016>`_ (Sigalotti et al. JCP, 2006, "
"pp. 124--149)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:127
msgid ""
"`Akinci <http://doi.acm.org/10.1145/2185520.2185558>`_ (Akinci et al. ACM "
"Trans. Graph., 2012, pp. 62:1--62:8)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:130
msgid "Boundary conditions from the following papers are implemented:"
msgstr ""

#: ../../pysph/docs/source/overview.rst:132
msgid ""
"`Generalized Wall BCs <http://dx.doi.org/10.1016/j.jcp.2012.05.005>`_ (Adami"
" et al. JCP, 2012, pp. 7057--7075)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:135
msgid ""
"`Do nothing type outlet BC "
"<https://doi.org/10.1016/j.euromechflu.2012.02.002>`_ (Federico et al. "
"European Journal of Mechanics - B/Fluids, 2012, pp. 35--46)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:138
msgid ""
"`Outlet Mirror BC <http://dx.doi.org/10.1016/j.cma.2018.08.004>`_ (Tafuni et"
" al. CMAME, 2018, pp. 604--624)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:141
msgid ""
"`Method of Characteristics BC <http://dx.doi.org/10.1002/fld.1971>`_ "
"(Lastiwaka et al. International Journal for Numerical Methods in Fluids, "
"2012, pp. 35--46)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:145
msgid ""
"`Hybrid  BC <arXiv preprint arXiv:https://arxiv.org/abs/1907.04034>`_ (Negi "
"et al. arXiv preprint)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:148
msgid ""
"Corrections proposed in the following papers are also the part for PySPH:"
msgstr ""

#: ../../pysph/docs/source/overview.rst:150
msgid ""
"`Corrected SPH <http://dx.doi.org/10.1016/S0045-7825(99)00051-1>`_ (Bonet et"
" al. CMAME, 1999, pp. 97--115)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:152
msgid ""
"`hg-correction <https://doi.org/10.1080/00221686.2010.9641251>`_ (Hughes et "
"al. Journal of Hydraulic Research, pp. 105--117)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:154
msgid ""
"`Tensile instability correction' <https://doi.org/10.1006/jcph.2000.6439>`_ "
"(Monaghan J. J. JCP, 2000, pp. 2990--311)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:156
msgid ""
"Particle shift algorithms (`Xu et al "
"<http://dx.doi.org/10.1016/j.jcp.2009.05.032>`_. JCP, 2009, pp. 6703--6725),"
" (`Skillen et al <http://dx.doi.org/10.1016/j.cma.2013.05.017>`_. CMAME, "
"2013, pp. 163--173)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:160
msgid "Surface tension models are implemented from:"
msgstr ""

#: ../../pysph/docs/source/overview.rst:162
msgid ""
"`Morris surface tension`_ (Morris et al. Internaltional Journal for "
"Numerical Methods in Fluids, 2000, pp. 333--353)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:164
msgid ""
"`Adami Surface tension formulation "
"<https://doi.org/10.1016/j.jcp.2010.03.022>`_ (Adami et al. JCP, 2010, pp. "
"5011--5021)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:174
msgid "Credits"
msgstr ""

#: ../../pysph/docs/source/overview.rst:176
msgid ""
"PySPH is primarily developed at the `Department of Aerospace Engineering, "
"IIT Bombay <http://www.aero.iitb.ac.in>`__. We are grateful to IIT Bombay "
"for the support.  Our primary goal is to build a powerful SPH-based tool for"
" both application and research. We hope that this makes it easy to perform "
"reproducible computational research."
msgstr ""

#: ../../pysph/docs/source/overview.rst:182
msgid ""
"To see the list of contributors the see `github contributors page "
"<https://github.com/pypr/pysph/graphs/contributors>`_"
msgstr ""

#: ../../pysph/docs/source/overview.rst:186
msgid "Some earlier developers not listed on the above are:"
msgstr ""

#: ../../pysph/docs/source/overview.rst:188
msgid "Pankaj Pandey (stress solver and improved load balancing, 2011)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:189
msgid ""
"Chandrashekhar Kaushik (original parallel and serial implementation in 2009)"
msgstr ""

#: ../../pysph/docs/source/overview.rst:194
msgid "Citing PySPH"
msgstr ""

#: ../../pysph/docs/source/overview.rst:196
msgid "You may use the following article to formally refer to PySPH:"
msgstr ""

#: ../../pysph/docs/source/overview.rst:198
msgid ""
"Prabhu Ramachandran, Kunal Puri, Aditya Bhosale, A Dinesh, Abhinav Muta, "
"Pawan Negi, Rahul Govind, Suraj Sanka, Pankaj Pandey, Chandrashekhar "
"Kaushik, Anshuman Kumar, Ananyo Sen, Rohan Kaushik, Mrinalgouda Patil, Deep "
"Tavker, Dileep Menon, Vikas Kurapati, Amal S Sebastian, Arkopal Dutt, Arpit "
"Agarwal, \"PySPH: a Python-based framework for smoothed particle "
"hydrodynamics\", under review (https://arxiv.org/abs/1909.04504)."
msgstr ""

#: ../../pysph/docs/source/overview.rst:205
msgid "The following are older presentations:"
msgstr ""

#: ../../pysph/docs/source/overview.rst:207
msgid ""
"Prabhu Ramachandran, *PySPH: a reproducible and high-performance framework "
"for smoothed particle hydrodynamics*, In Proceedings of the 15th Python in "
"Science Conference, pages 127--135, July 11th to 17th, 2016. `Link to paper "
"<http://conference.scipy.org/proceedings/scipy2016/prabhu_ramachandran_pysph.html>`_."
msgstr ""

#: ../../pysph/docs/source/overview.rst:212
msgid ""
"Prabhu Ramachandran and Kunal Puri, *PySPH: A framework for parallel "
"particle simulations*, In proceedings of the 3rd International Conference on"
" Particle-Based Methods (Particles 2013), Stuttgart, Germany, 18th September"
" 2013."
msgstr ""

#: ../../pysph/docs/source/overview.rst:219
msgid "History"
msgstr ""

#: ../../pysph/docs/source/overview.rst:221
msgid ""
"2009: PySPH started with a simple Cython based 1D implementation written by "
"Prabhu."
msgstr ""

#: ../../pysph/docs/source/overview.rst:224
msgid ""
"2009-2010: Chandrashekhar Kaushik worked on a full 3D SPH implementation "
"with a more general purpose design.  The implementation was in a mix of "
"Cython and Python."
msgstr ""

#: ../../pysph/docs/source/overview.rst:228
msgid ""
"2010-2012: The previous implementation was a little too complex and was "
"largely overhauled by Kunal and Pankaj.  This became the PySPH 0.9beta "
"release.  The difficulty with this version was that it was almost entirely "
"written in Cython, making it hard to extend or add new formulations without "
"writing more Cython code.  Doing this was difficult and not too pleasant.  "
"In addition it was not as fast as we would have liked it. It ended up "
"feeling like we might as well have implemented it all in C++ and exposed a "
"Python interface to that."
msgstr ""

#: ../../pysph/docs/source/overview.rst:237
msgid ""
"2011-2012: Kunal also implemented SPH2D_ and another internal version called"
" ZSPH in Cython which included Zoltan_ based parallelization using "
"PyZoltan_. This was specific to his PhD research and again required writing "
"Cython making it difficult for the average user to extend."
msgstr ""

#: ../../pysph/docs/source/overview.rst:242
msgid ""
"2013-present In early 2013, Prabhu reimplemented the core of PySPH to be "
"almost entirely auto-generated from pure Python.  The resulting code was "
"faster than previous implementations and very easy to extend entirely from "
"pure Python.  Kunal and Prabhu integrated PyZoltan into PySPH and the "
"current version of PySPH was born.  Subsequently, OpenMP support was also "
"added in 2015."
msgstr ""

#: ../../pysph/docs/source/overview.rst:257
msgid "Support"
msgstr ""

#: ../../pysph/docs/source/overview.rst:259
msgid ""
"If you have any questions or are running into any difficulties with PySPH, "
"please email or post your questions on the pysph-users mailing list here: "
"https://groups.google.com/d/forum/pysph-users"
msgstr ""

#: ../../pysph/docs/source/overview.rst:263
msgid ""
"Please also take a look at the `PySPH issue tracker "
"<https://github.com/pypr/pysph/issues>`_."
msgstr ""

#: ../../pysph/docs/source/overview.rst:268
msgid "Changelog"
msgstr ""

#: ../../pysph/CHANGES.rst:2
msgid "1.0b1"
msgstr ""

#: ../../pysph/CHANGES.rst:4
msgid "Release date: Still under development."
msgstr ""

#: ../../pysph/CHANGES.rst:5
msgid "Remove pyzoltan, cyarray into their own packages on pypi."
msgstr ""

#: ../../pysph/CHANGES.rst:8
msgid "1.0a6"
msgstr ""

#: ../../pysph/CHANGES.rst:10
msgid ""
"90 pull requests were merged for this release. Thanks to the following who "
"contributed to this release (in alphabetical order): A Dinesh, Abhinav Muta,"
" Aditya Bhosale, Ananyo Sen, Deep Tavker, Prabhu Ramachandran, Vikas "
"Kurapati, nilsmeyerkit, Rahul Govind, Sanka Suraj."
msgstr ""

#: ../../pysph/CHANGES.rst:16
msgid "Release date: 26th November, 2018."
msgstr ""

#: ../../pysph/CHANGES.rst:18
msgid "Enhancements:"
msgstr ""

#: ../../pysph/CHANGES.rst:20
msgid "Initial support for transparently running PySPH on a GPU via OpenCL."
msgstr ""

#: ../../pysph/CHANGES.rst:21
msgid ""
"Changed the API for how adaptive DT is computed, this is now to be set in "
"the particle array properties called ``dt_cfl, dt_force, dt_visc``."
msgstr ""

#: ../../pysph/CHANGES.rst:23
msgid ""
"Support for non-pairwise particle interactions via the ``loop_all`` method. "
"This is useful for MD simulations."
msgstr ""

#: ../../pysph/CHANGES.rst:25
msgid ""
"Add support for ``py_stage1, py_stage2 ...``, methods in the integrator."
msgstr ""

#: ../../pysph/CHANGES.rst:26
msgid ""
"Add support for ``py_initialize`` and ``initialize_pair`` in equations."
msgstr ""

#: ../../pysph/CHANGES.rst:27
msgid ""
"Support for using different sets of equations for different stages of the "
"integration."
msgstr ""

#: ../../pysph/CHANGES.rst:29
msgid ""
"Support to call arbitrary Python code from a ``Group`` via the ``pre/post`` "
"callback arguments."
msgstr ""

#: ../../pysph/CHANGES.rst:31
msgid "Pass ``t, dt`` to the reduce method."
msgstr ""

#: ../../pysph/CHANGES.rst:32
msgid ""
"Allow particle array properties to have strides, this allows us to define "
"properties with multiple components. For example if you need 3 values per "
"particle, you can set the stride to 3."
msgstr ""

#: ../../pysph/CHANGES.rst:35
msgid ""
"Mayavi viewer can now show non-real particles also if saved in the output."
msgstr ""

#: ../../pysph/CHANGES.rst:36
msgid "Some improvements to the simple remesher of particles."
msgstr ""

#: ../../pysph/CHANGES.rst:37
msgid "Add simple STL importer to import geometries."
msgstr ""

#: ../../pysph/CHANGES.rst:38
msgid "Allow user to specify openmp schedule."
msgstr ""

#: ../../pysph/CHANGES.rst:39
msgid "Better documentation on equations and using a different compiler."
msgstr ""

#: ../../pysph/CHANGES.rst:40
msgid ""
"Print convenient warning when particles are diverging or if ``h, m`` are "
"zero."
msgstr ""

#: ../../pysph/CHANGES.rst:42
msgid ""
"Abstract the code generation into a common core which supports Cython, "
"OpenCL and CUDA. This will be pulled into a separate package in the next "
"release."
msgstr ""

#: ../../pysph/CHANGES.rst:45
msgid "New GPU NNPS algorithms including a very fast oct-tree."
msgstr ""

#: ../../pysph/CHANGES.rst:46
msgid "Added several sphysics test cases to the examples."
msgstr ""

#: ../../pysph/CHANGES.rst:49
msgid "Schemes:"
msgstr ""

#: ../../pysph/CHANGES.rst:51
msgid ""
"Add a working Implicit Incompressible SPH scheme (of Ihmsen et al., 2014)"
msgstr ""

#: ../../pysph/CHANGES.rst:52
msgid ""
"Add GSPH scheme from SPH2D and all the approximate Riemann solvers from "
"there."
msgstr ""

#: ../../pysph/CHANGES.rst:53
msgid "Add code for Shepard and MLS-based density corrections."
msgstr ""

#: ../../pysph/CHANGES.rst:54
msgid "Add kernel corrections proposed by Bonet and Lok (1999)"
msgstr ""

#: ../../pysph/CHANGES.rst:55
msgid "Add corrections from the CRKSPH paper (2017)."
msgstr ""

#: ../../pysph/CHANGES.rst:56
msgid "Add basic equations of Parshikov (2002) and Zhang, Hu, Adams (2017)"
msgstr ""

#: ../../pysph/CHANGES.rst:58
msgid "Bug fixes:"
msgstr ""

#: ../../pysph/CHANGES.rst:60
msgid "Ensure that the order of equations is preserved."
msgstr ""

#: ../../pysph/CHANGES.rst:61
msgid "Fix bug with dumping VTK files."
msgstr ""

#: ../../pysph/CHANGES.rst:62
msgid "Fix bug in Adami, Hu, Adams scheme in the continuity equation."
msgstr ""

#: ../../pysph/CHANGES.rst:63
msgid "Fix mistake in WCSPH scheme for solid bodies."
msgstr ""

#: ../../pysph/CHANGES.rst:64
msgid "Fix bug with periodicity along the z-axis."
msgstr ""

#: ../../pysph/CHANGES.rst:68
msgid "1.0a5"
msgstr ""

#: ../../pysph/CHANGES.rst:70
msgid "Release date:  17th September, 2017"
msgstr ""

#: ../../pysph/CHANGES.rst:71
msgid "Mayavi viewer now supports empty particle arrays."
msgstr ""

#: ../../pysph/CHANGES.rst:72
msgid ""
"Fix error in scheme chooser which caused problems with default scheme "
"property values."
msgstr ""

#: ../../pysph/CHANGES.rst:74
msgid ""
"Add starcluster support/documentation so PySPH can be easily used on EC2."
msgstr ""

#: ../../pysph/CHANGES.rst:75
msgid ""
"Improve the particle array so it automatically ravel's the passed arrays and"
" also accepts constant values without needing an array each time."
msgstr ""

#: ../../pysph/CHANGES.rst:77
msgid "Add a few new examples."
msgstr ""

#: ../../pysph/CHANGES.rst:78
msgid "Added 2D and 3D viewers for Jupyter notebooks."
msgstr ""

#: ../../pysph/CHANGES.rst:79
msgid "Add several new Wendland Quintic kernels."
msgstr ""

#: ../../pysph/CHANGES.rst:80
msgid "Add option to measure coverage of Cython code."
msgstr ""

#: ../../pysph/CHANGES.rst:81
msgid "Add EDAC scheme."
msgstr ""

#: ../../pysph/CHANGES.rst:82
msgid "Move project to github."
msgstr ""

#: ../../pysph/CHANGES.rst:83
msgid "Improve documentation and reference section."
msgstr ""

#: ../../pysph/CHANGES.rst:84
msgid "Fix various bugs."
msgstr ""

#: ../../pysph/CHANGES.rst:85
msgid "Switch to using pytest instead of nosetests."
msgstr ""

#: ../../pysph/CHANGES.rst:86
msgid "Add a convenient geometry creation module in ``pysph.tools.geometry``"
msgstr ""

#: ../../pysph/CHANGES.rst:87
msgid ""
"Add support to script the viewer with a Python file, see ``pysph view -h``."
msgstr ""

#: ../../pysph/CHANGES.rst:88
msgid ""
"Add several new NNPS schemes like extended spatial hashing, SFC, oct-trees "
"etc."
msgstr ""

#: ../../pysph/CHANGES.rst:90
msgid ""
"Improve Mayavi viewer so one can view the velocity vectors and any other "
"vectors."
msgstr ""

#: ../../pysph/CHANGES.rst:92
msgid "Viewer now has a button to edit the visualization properties easily."
msgstr ""

#: ../../pysph/CHANGES.rst:93
msgid ""
"Add simple tests for all available kernels. Add ``SuperGaussian`` kernel."
msgstr ""

#: ../../pysph/CHANGES.rst:94
msgid "Add a basic dockerfile for pysph to help with the CI testing."
msgstr ""

#: ../../pysph/CHANGES.rst:95
msgid ""
"Update build so pysph can be built with a system zoltan installation that is"
" part of trilinos using the ``USE_TRILINOS`` environment variable."
msgstr ""

#: ../../pysph/CHANGES.rst:97
msgid "Wrapping the ``Zoltan_Comm_Resize`` function in ``pyzoltan``."
msgstr ""

#: ../../pysph/CHANGES.rst:101
msgid "1.0a4"
msgstr ""

#: ../../pysph/CHANGES.rst:103
msgid "Release date: 14th July, 2016."
msgstr ""

#: ../../pysph/CHANGES.rst:104
msgid "Improve many examples to make it easier to make comparisons."
msgstr ""

#: ../../pysph/CHANGES.rst:105
msgid ""
"Many equation parameters no longer have defaults to prevent accidental "
"errors from not specifying important parameters."
msgstr ""

#: ../../pysph/CHANGES.rst:107
msgid ""
"Added support for ``Scheme`` classes that manage the generation of equations"
" and solvers.  A user simply needs to create the particles and setup a "
"scheme with the appropriate parameters to simulate a problem."
msgstr ""

#: ../../pysph/CHANGES.rst:110
msgid "Add support to easily handle multiple rigid bodies."
msgstr ""

#: ../../pysph/CHANGES.rst:111
msgid "Add support to dump HDF5 files if h5py_ is installed."
msgstr ""

#: ../../pysph/CHANGES.rst:112
msgid ""
"Add support to directly dump VTK files using either Mayavi_ or PyVisfile_, "
"see ``pysph dump_vtk``"
msgstr ""

#: ../../pysph/CHANGES.rst:114
msgid ""
"Improved the nearest neighbor code, which gives about 30% increase in "
"performance in 3D."
msgstr ""

#: ../../pysph/CHANGES.rst:116
msgid ""
"Remove the need for the ``windows_env.bat`` script on Windows.  This is "
"automatically setup internally."
msgstr ""

#: ../../pysph/CHANGES.rst:118
msgid "Add test that checks if all examples run."
msgstr ""

#: ../../pysph/CHANGES.rst:119
msgid ""
"Remove unused command line options and add a ``--max-steps`` option to allow"
" a user to run a specified number of iterations."
msgstr ""

#: ../../pysph/CHANGES.rst:121
msgid ""
"Added Ghia et al.'s results for lid-driven-cavity flow for easy comparison."
msgstr ""

#: ../../pysph/CHANGES.rst:122
msgid "Added some experimental results for the dam break problem."
msgstr ""

#: ../../pysph/CHANGES.rst:123
msgid "Use argparse instead of optparse as it is deprecated in Python 3.x."
msgstr ""

#: ../../pysph/CHANGES.rst:124
msgid ""
"Add ``pysph.tools.automation`` to facilitate easier automation and "
"reproducibility of PySPH simulations."
msgstr ""

#: ../../pysph/CHANGES.rst:126
msgid ""
"Add spatial hash and extended spatial hash NNPS algorithms for comparison."
msgstr ""

#: ../../pysph/CHANGES.rst:127
msgid "Refactor and cleanup the NNPS related code."
msgstr ""

#: ../../pysph/CHANGES.rst:128
msgid "Add several gas-dynamics examples and the ``ADEKEScheme``."
msgstr ""

#: ../../pysph/CHANGES.rst:129
msgid "Work with mpi4py_ version 2.0.0 and older versions."
msgstr ""

#: ../../pysph/CHANGES.rst:130
msgid ""
"Fixed major bug with TVF implementation and add support for 3D simulations "
"with the TVF."
msgstr ""

#: ../../pysph/CHANGES.rst:132
msgid ""
"Fix bug with uploaded tarballs that breaks ``pip install pysph`` on Windows."
msgstr ""

#: ../../pysph/CHANGES.rst:133
msgid "Fix the viewer UI to continue playing files when refresh is pushed."
msgstr ""

#: ../../pysph/CHANGES.rst:134
msgid "Fix bugs with the timestep values dumped in the outputs."
msgstr ""

#: ../../pysph/CHANGES.rst:135
msgid ""
"Fix floating point issues with timesteps, where examples would run a final "
"extremely tiny timestep in order to exactly hit the final time."
msgstr ""

#: ../../pysph/CHANGES.rst:143
msgid "1.0a3"
msgstr ""

#: ../../pysph/CHANGES.rst:145
msgid "Release date: 18th August, 2015."
msgstr ""

#: ../../pysph/CHANGES.rst:146
msgid "Fix bug with ``output_at_times`` specification for solver."
msgstr ""

#: ../../pysph/CHANGES.rst:147
msgid ""
"Put generated sources and extensions into a platform specific directory in "
"``~/.pysph/sources/<platform-specific-dir>`` to avoid problems with multiple"
" Python versions, operating systems etc."
msgstr ""

#: ../../pysph/CHANGES.rst:150
msgid ""
"Use locking while creating extension modules to prevent problems when "
"multiple processes generate the same extesion."
msgstr ""

#: ../../pysph/CHANGES.rst:152
msgid ""
"Improve the ``Application`` class so users can subclass it to create "
"examples. The users can also add their own command line arguments and add "
"pre/post step/stage callbacks by creating appropriate methods."
msgstr ""

#: ../../pysph/CHANGES.rst:155
msgid ""
"Moved examples into the ``pysph.examples``.  This makes the examples "
"reusable and easier to run as installation of pysph will also make the "
"examples available.  The examples also perform the post-processing to make "
"them completely self-contained."
msgstr ""

#: ../../pysph/CHANGES.rst:159
msgid "Add support to write compressed output."
msgstr ""

#: ../../pysph/CHANGES.rst:160
msgid "Add support to set the kernel from the command line."
msgstr ""

#: ../../pysph/CHANGES.rst:161
msgid ""
"Add a new ``pysph`` script that supports ``view``, ``run``, and ``test`` "
"sub-commands.  The ``pysph_viewer`` is now removed, use ``pysph view`` "
"instead."
msgstr ""

#: ../../pysph/CHANGES.rst:164
msgid "Add a simple remeshing tool in ``pysph.solver.tools.SimpleRemesher``."
msgstr ""

#: ../../pysph/CHANGES.rst:165
msgid ""
"Cleanup the symmetric eigenvalue computing routines used for solid mechanics"
" problems and allow them to be used with OpenMP."
msgstr ""

#: ../../pysph/CHANGES.rst:167
msgid ""
"The viewer can now view the velocity magnitude (``vmag``) even if it is not "
"present in the data."
msgstr ""

#: ../../pysph/CHANGES.rst:169
msgid "Port all examples to use new ``Application`` API."
msgstr ""

#: ../../pysph/CHANGES.rst:170
msgid ""
"Do not display unnecessary compiler warnings when there are no errors but "
"display verbose details when there is an error."
msgstr ""

#: ../../pysph/CHANGES.rst:174
msgid "1.0a2"
msgstr ""

#: ../../pysph/CHANGES.rst:176
msgid "Release date: 12th June, 2015"
msgstr ""

#: ../../pysph/CHANGES.rst:177
msgid ""
"Support for tox_, this makes it trivial to test PySPH on py26, py27 and py34"
" (and potentially more if needed)."
msgstr ""

#: ../../pysph/CHANGES.rst:179
msgid ""
"Fix bug in code generator where it is unable to import pysph before it is "
"installed."
msgstr ""

#: ../../pysph/CHANGES.rst:181
msgid ""
"Support installation via ``pip`` by allowing ``egg_info`` to be run without "
"cython or numpy."
msgstr ""

#: ../../pysph/CHANGES.rst:183
msgid ""
"Added `Codeship CI build <https://codeship.com/projects/83729>`_ using tox "
"for py27 and py34."
msgstr ""

#: ../../pysph/CHANGES.rst:185
msgid "CI builds for Python 2.7.x and 3.4.x."
msgstr ""

#: ../../pysph/CHANGES.rst:186
msgid "Support for Python-3.4.x."
msgstr ""

#: ../../pysph/CHANGES.rst:187
msgid "Support for Python-2.6.x."
msgstr ""

#: ../../pysph/CHANGES.rst:192
msgid "1.0a1"
msgstr ""

#: ../../pysph/CHANGES.rst:194
msgid "Release date: 3rd June, 2015."
msgstr ""

#: ../../pysph/CHANGES.rst:195
msgid ""
"First public release of the new PySPH code which uses code-generation and is"
" hosted on `bitbucket <http://bitbucket.org/pysph/pysph>`_."
msgstr ""

#: ../../pysph/CHANGES.rst:197
msgid "OpenMP support."
msgstr ""

#: ../../pysph/CHANGES.rst:198
msgid "MPI support using `Zoltan <http://www.cs.sandia.gov/zoltan/>`_."
msgstr ""

#: ../../pysph/CHANGES.rst:199
msgid "Automatic code generation from high-level Python code."
msgstr ""

#: ../../pysph/CHANGES.rst:200
msgid "Support for various multi-step integrators."
msgstr ""

#: ../../pysph/CHANGES.rst:201
msgid ""
"Added an interpolator utility module that interpolates the particle data "
"onto a desired set of points (or grids)."
msgstr ""

#: ../../pysph/CHANGES.rst:203
msgid "Support for inlets and outlets."
msgstr ""

#: ../../pysph/CHANGES.rst:204
msgid "Support for basic `Gmsh <http://geuz.org/gmsh/>`_ input/output."
msgstr ""

#: ../../pysph/CHANGES.rst:205
msgid "Plenty of examples for various SPH formulations."
msgstr ""

#: ../../pysph/CHANGES.rst:206
msgid "Improved documentation."
msgstr ""

#: ../../pysph/CHANGES.rst:207
msgid ""
"Continuous integration builds on `Shippable "
"<https://app.shippable.com/projects/540e849c3479c5ea8f9f030e/builds/latest>`_,"
" `Drone.io <https://drone.io/bitbucket.org/pysph/pysph>`_, and `AppVeyor "
"<https://ci.appveyor.com/project/prabhuramachandran/pysph>`_."
msgstr ""
