# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2018, PySPH developers
# This file is distributed under the same license as the PySPH package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PySPH 1.0b1.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-12 02:15+0000\n"
"PO-Revision-Date: 2021-11-01 15:22+0000\n"
"Language-Team: Japanese (https://www.transifex.com/tkoyama010/teams/127008/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../pysph/docs/source/reference/application.rst:2
msgid "Module application"
msgstr ""

#: ../../pysph/docs/source/reference/controller.rst:2
msgid "Module controller"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:2
msgid "SPH equations"
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.DensityCorrection:0
#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.BodyForce:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.ContinuityEquation:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.IsothermalEOS:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.SummationDensity:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrection:0
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:0
#: ../../pysph/pysph/sph/boundary_equations.pydocstring of
#: pysph.sph.boundary_equations.MonaghanBoundaryForce:0
#: ../../pysph/pysph/sph/boundary_equations.pydocstring of
#: pysph.sph.boundary_equations.MonaghanKajtarBoundaryForce:0
#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Equation:0
#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:0
#: ../../pysph/pysph/sph/equation.pydocstring of
#: pysph.sph.equation.MultiStageEquations:0
#: ../../pysph/pysph/sph/misc/advection.pydocstring of
#: pysph.sph.misc.advection.Advect:0
#: ../../pysph/pysph/sph/misc/advection.pydocstring of
#: pysph.sph.misc.advection.MixingVelocityUpdate:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.BodyForce:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.NumberDensity:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.PressureRigidBody:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyMoments:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyMotion:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityBoundary:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityRigidBody:0
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.ViscosityRigidBody:0
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.Scheme:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser:0 ../../pysph/pysph/sph/scheme.pydocstring
#: of pysph.sph.scheme.SchemeChooser.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.setup_properties:0
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.TVFScheme:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.setup_properties:0
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.configure_solver:0
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.setup_properties:0
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.MieGruneisenEOS:0
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.StiffenedGasEOS:0
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.VonMisesPlasticity2D:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPH:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.PressureGradientUsingNumberDensity:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:0
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:0
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:0
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder3D:0
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.ShepardFilter:0
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrection:0
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrectionPreStep:0
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.KernelCorrection:0
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedGradientCorrection:0
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuityEquation:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuitySolid:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationViscosity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeFromMassDensity:0
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeSummation:0
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:0
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosity:0
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:0
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.MonaghanSignalViscosityFluids:0
msgid "Parameters"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.ContinuityEquation:7
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.SummationDensity:6
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:14
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:14
#: ../../pysph/pysph/sph/boundary_equations.pydocstring of
#: pysph.sph.boundary_equations.MonaghanBoundaryForce:1
#: ../../pysph/pysph/sph/boundary_equations.pydocstring of
#: pysph.sph.boundary_equations.MonaghanKajtarBoundaryForce:1
#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Equation:1
#: ../../pysph/pysph/sph/misc/advection.pydocstring of
#: pysph.sph.misc.advection.Advect:1
#: ../../pysph/pysph/sph/misc/advection.pydocstring of
#: pysph.sph.misc.advection.MixingVelocityUpdate:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:20
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.BodyForce:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:20
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.NumberDensity:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.PressureRigidBody:6
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyMoments:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyMotion:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityBoundary:7
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityRigidBody:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.ViscosityRigidBody:6
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.MieGruneisenEOS:1
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.StiffenedGasEOS:5
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.VonMisesPlasticity2D:1
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:8
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.PressureGradientUsingNumberDensity:9
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:33
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder3D:1
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.ShepardFilter:16
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrection:12
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrectionPreStep:1
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.KernelCorrection:9
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedGradientCorrection:7
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:26
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuityEquation:11
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuitySolid:7
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:17
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:15
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:26
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeFromMassDensity:3
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeSummation:9
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:22
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosity:1
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:10
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.MonaghanSignalViscosityFluids:1
msgid "name of the destination particle array"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.ContinuityEquation:9
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.SummationDensity:8
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:16
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:16
#: ../../pysph/pysph/sph/boundary_equations.pydocstring of
#: pysph.sph.boundary_equations.MonaghanBoundaryForce:3
#: ../../pysph/pysph/sph/boundary_equations.pydocstring of
#: pysph.sph.boundary_equations.MonaghanKajtarBoundaryForce:3
#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Equation:3
#: ../../pysph/pysph/sph/misc/advection.pydocstring of
#: pysph.sph.misc.advection.Advect:3
#: ../../pysph/pysph/sph/misc/advection.pydocstring of
#: pysph.sph.misc.advection.MixingVelocityUpdate:3
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:22
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.BodyForce:3
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:22
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.NumberDensity:3
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.PressureRigidBody:8
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyMoments:3
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyMotion:3
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityBoundary:9
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityRigidBody:3
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.ViscosityRigidBody:8
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.MieGruneisenEOS:3
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.StiffenedGasEOS:7
#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.VonMisesPlasticity2D:3
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:10
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.PressureGradientUsingNumberDensity:11
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:35
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder3D:3
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.ShepardFilter:18
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrection:14
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrectionPreStep:3
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.KernelCorrection:11
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedGradientCorrection:9
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:28
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuityEquation:13
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuitySolid:9
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:19
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:17
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:28
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeFromMassDensity:5
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeSummation:11
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:24
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosity:3
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:12
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.MonaghanSignalViscosityFluids:3
msgid "names of the source particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of
#: pysph.sph.equation.Equation.converged:1
msgid "Return > 0 to indicate converged iterations and < 0 otherwise."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations:2
msgid "Basic SPH Equations"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline:20
#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.Gaussian:16
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations:6 ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator:4
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:43
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPH:9
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:31
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:17
#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:7
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:15
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:6
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:28
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.ShepardFilter:12
#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction:8
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity:5
#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:4
msgid "References"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations:7 ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:32
msgid ""
"J. Monaghan, Smoothed Particle Hydrodynamics, \"Annual Review of Astronomy "
"and Astrophysics\", 30 (1992), pp. 543-574."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations:10 ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOS:14
msgid ""
"J. Monaghan, \"Smoothed particle hydrodynamics\", Reports on Progress in "
"Physics, 68 (2005), pp. 1703-1759."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.BodyForce:1
msgid "Add a body force to the particles:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.BodyForce:3
msgid ":math:`\\boldsymbol{f} = f_x, f_y, f_z`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.BodyForce:6
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:18
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:37
msgid "Body force per unit mass along the x-axis"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.BodyForce:8
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:20
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:39
msgid "Body force per unit mass along the y-axis"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.BodyForce:10
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:22
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:41
msgid "Body force per unit mass along the z-axis"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.ContinuityEquation:1
msgid "Density rate:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.ContinuityEquation:3
msgid ""
":math:`\\frac{d\\rho_a}{dt} = \\sum_b m_b \\boldsymbol{v}_{ab}\\cdot "
"\\nabla_a W_{ab}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.IsothermalEOS:1
msgid "Compute the pressure using the Isothermal equation of state:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.IsothermalEOS:3
msgid ":math:`p = p_0 + c_0^2(\\rho_0 - \\rho)`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.IsothermalEOS:6
msgid "Reference density of the fluid (:math:`\\rho_0`)"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.IsothermalEOS:8
msgid "Maximum speed of sound expected in the system (:math:`c0`)"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.IsothermalEOS:10
msgid "Reference pressure in the system (:math:`p0`)"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:1
msgid "Classical Monaghan style artificial viscosity [Monaghan2005]_"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:3
msgid "\\frac{d\\mathbf{v}_{a}}{dt}&=&-\\sum_{b}m_{b}\\Pi_{ab}\\nabla_{a}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:7
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:9
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:9
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:7
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:12
#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:20
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:12
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:10
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationViscosity:11
msgid "where"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:9
msgid ""
"\\Pi_{ab}=\\begin{cases}\\frac{-\\alpha_{\\pi}\\bar{c}_{ab}\\phi_{ab}+\n"
"\\beta_{\\pi}\\phi_{ab}^{2}}{\\bar{\\rho}_{ab}}, & \\mathbf{v}_{ab}\\cdot\n"
"\\mathbf{r}_{ab}<0\\\\0, & \\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}\\geq0\n"
"\\end{cases}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:16
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:19
msgid "with"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:18
msgid ""
"\\phi_{ab}=\\frac{h\\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}}\n"
"{|\\mathbf{r}_{ab}|^{2}+\\epsilon^{2}}\\\\\n"
"\n"
"\\bar{c}_{ab}&=&\\frac{c_{a}+c_{b}}{2}\\\\\n"
"\n"
"\\bar{\\rho}_{ab}&=&\\frac{\\rho_{a}+\\rho_{b}}{2}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:28
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:37
msgid "produces a shear and bulk viscosity"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.MonaghanArtificialViscosity:30
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:39
msgid "used to handle high Mach number shocks"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.SummationDensity:1
msgid "Good old Summation density:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.SummationDensity:3
msgid ":math:`\\rho_a = \\sum_b m_b W_{ab}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:1
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:1
msgid "Compute the SPH evaluation for the velocity gradient tensor in 2D."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:3
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:3
msgid "The expression for the velocity gradient is:"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:5
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:5
msgid ""
":math:`\\frac{\\partial v^i}{\\partial x^j} = "
"\\sum_{b}\\frac{m_b}{\\rho_b}(v_b - v_a)\\frac{\\partial W_{ab}}{\\partial "
"x_a^j}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:9
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:9
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrection:13
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:16
#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:49
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:35
#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:27
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:28
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:16
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:28
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:11
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:43
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:45
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:9
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:15
msgid "Notes"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient2D:10
msgid ""
"The tensor properties are stored in the variables v_ij where 'i' refers to "
"the velocity component and 'j' refers to the spatial component. Thus v_10 is"
" :math:`\\frac{\\partial v}{\\partial x}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.VelocityGradient3D:10
msgid ""
"The tensor properties are stored in the variables v_ij where 'i' refers to "
"the velocity component and 'j' refers to the spatial component. Thus v_21 is"
" :math:`\\frac{\\partial v}{\\partial x}`"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrection:1
msgid "Position stepping with XSPH correction [Monaghan1992]_"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrection:3
msgid ""
"\\frac{d\\mathbf{r}_{a}}{dt}=\\mathbf{\\hat{v}}_{a}=\\mathbf{v}_{a}-\n"
"\\epsilon\\sum_{b}m_{b}\\frac{\\mathbf{v}_{ab}}{\\bar{\\rho}_{ab}}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrection:9
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:12
msgid ":math:`\\epsilon` as in the above equation"
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrection:14
#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:17
msgid ""
"This equation must be used to advect the particles. XSPH can be turned off "
"by setting the parameter ``eps = 0``."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:1
msgid ""
"The XSPH correction [Monaghan1992]_ alone.  This is meant to be used with a "
"leap-frog integrator which already considers the velocity of the particles."
"  It simply computes the correction term and adds that to ``ax, ay, az``."
msgstr ""

#: ../../pysph/pysph/sph/basic_equations.pydocstring of
#: pysph.sph.basic_equations.XSPHCorrectionForLeapFrog:6
msgid ""
"\\frac{d\\mathbf{r}_{a}}{dt}=\\mathbf{\\hat{v}}_{a}= -\n"
"\\epsilon\\sum_{b}m_{b}\\frac{\\mathbf{v}_{ab}}{\\bar{\\rho}_{ab}}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic:2
msgid "Basic WCSPH Equations"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPH:1
msgid "**Continuity equation with dissipative terms**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPH:3
msgid ""
":math:`\\frac{d\\rho_a}{dt} = \\sum_b \\rho_a \\frac{m_b}{\\rho_b} \\left( "
"\\boldsymbol{v}_{ab}\\cdot \\nabla_a W_{ab} + \\delta \\eta_{ab} \\cdot "
"\\nabla_{a} W_{ab} (h_{ab}\\frac{c_{ab}}{\\rho_a}(\\rho_b - \\rho_a)) "
"\\right)`"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:48
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPH:10
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:18
msgid ""
"S. Marrone et al., \"delta-SPH model for simulating violent impact flows\", "
"Computer Methods in Applied Mechanics and Engineering, 200 (2011), pp 1526--"
"1542."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPH:14
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:35
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:28
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:22
msgid "reference speed of sound"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPH:16
msgid "coefficient used to control the intensity of diffusion of density"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.ContinuityEquationDeltaSPHPreStep:1
msgid ""
"**Continuity equation with dissipative terms** See "
":class:`pysph.sph.wc.basic.ContinuityEquationDeltaSPH` The matrix "
":math:`L_a` is multiplied to :math:`\\nabla W_{ij}` in the "
":class:`pysph.sph.scheme.WCSPHScheme` class by using "
":class:`pysph.sph.wc.kernel_correction.GradientCorrectionPreStep` and "
":class:`pysph.sph.wc.kernel_correction.GradientCorrection`."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:1
msgid "**Classic Monaghan Style Momentum Equation with Artificial Viscosity**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:3
msgid ""
"\\frac{d\\mathbf{v}_{a}}{dt}=-\\sum_{b}m_{b}\\left(\\frac{p_{b}}\n"
"{\\rho_{b}^{2}}+\\frac{p_{a}}{\\rho_{a}^{2}}+\\Pi_{ab}\\right)\n"
"\\nabla_{a}W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:11
msgid ""
"\\Pi_{ab}=\\begin{cases}\n"
"\\frac{-\\alpha\\bar{c}_{ab}\\mu_{ab}+\\beta\\mu_{ab}^{2}}{\\bar{\\rho}_{ab}} &\n"
"\\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}<0;\\\\\n"
"0 & \\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}\\geq0;\n"
"\\end{cases}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:21
msgid ""
"\\mu_{ab}=\\frac{h\\mathbf{v}_{ab}\\cdot\\mathbf{r}_{ab}}\n"
"{\\mathbf{r}_{ab}^{2}+\\eta^{2}}\\\\\n"
"\n"
"\\bar{c}_{ab} = \\frac{c_a + c_b}{2}\\\\\n"
"\n"
"\\bar{\\rho}_{ab} = \\frac{\\rho_a + \\rho_b}{2}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:41
msgid "body force per unit mass along the x-axis"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:43
msgid "body force per unit mass along the y-axis"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:45
msgid "body force per unit mass along the z-axis"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquation:47
msgid "switch for tensile instability correction (Default: False)"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:1
msgid "**Momentum equation defined in JOSEPHINE and the delta-SPH model**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:3
msgid ""
"\\frac{du_{i}}{dt}=-\\frac{1}{\\rho_{i}}\\sum_{j}\\left(p_{j}+p_{i}\\right)\n"
"\\nabla_{i}W_{ij}V_{j}+\\mathbf{g}_{i}+\\alpha hc_{0}\\rho_{0}\\sum_{j}\n"
"\\pi_{ij}\\nabla_{i}W_{ij}V_{j}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:11
msgid ""
"\\pi_{ij}=\\frac{\\mathbf{u}_{ij}\\cdot\\mathbf{r}_{ij}}\n"
"{|\\mathbf{r}_{ij}|^{2}}"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:52
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:22
msgid ""
"J. M. Cherfils et al., \"JOSEPHINE: A parallel SPH code for free-surface "
"flows\", Computer Physics Communications, 183 (2012), pp 1468--1480."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:26
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:20
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:31
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:23
msgid "reference density"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:30
msgid "coefficient used to control the intensity of the diffusion of velocity"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.MomentumEquationDeltaSPH:36
msgid ""
"Artificial viscosity is used in this momentum equation and is controlled by "
"the parameter :math:`\\alpha`. This form of the artificial viscosity is "
"similar but not identical to the Monaghan-style artificial viscosity."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.PressureGradientUsingNumberDensity:1
msgid "Pressure gradient discretized using number density:"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.PressureGradientUsingNumberDensity:3
msgid ""
"\\frac{d \\boldsymbol{v}_a}{dt} = -\\frac{1}{m_a}\\sum_b\n"
"(\\frac{p_a}{V_a^2} + \\frac{p_b}{V_b^2})\\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:1
msgid "**Tait equation of state for water-like fluids**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:3
msgid ""
":math:`p_a = \\frac{c_{0}^2\\rho_0}{\\gamma}\\left( "
"\\left(\\frac{\\rho_a}{\\rho_0}\\right)^{\\gamma} -1\\right)`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:8
msgid "H. R. Cole, \"Underwater Explosions\", Princeton University Press, 1948."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:11
msgid ""
"G. Batchelor, \"An Introduction to Fluid Dynamics\", Cambridge University "
"Press, 2002."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:17
msgid "reference density of fluid particles"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:19
msgid "maximum speed of sound expected in the system"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:21
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:24
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:22
msgid "constant"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:23
msgid "reference pressure in the system (defaults to zero)."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:28
msgid ""
"The reference speed of sound, c0, is to be taken approximately as 10 times "
"the maximum expected velocity in the system. The particle sound speed is "
"given by the usual expression:"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of pysph.sph.wc.basic.TaitEOS:32
msgid ":math:`c_a = \\sqrt{\\frac{\\partial p}{\\partial \\rho}}`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:1
msgid "**Tait Equation of State with Hughes and Graham Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:3
msgid ""
"p_a = \\frac{c_{0}^2\\rho_0}{\\gamma}\\left(\n"
"\\left(\\frac{\\rho_a}{\\rho_0}\\right)^{\\gamma} -1\\right)\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:9
msgid ""
"\\rho_{a}=\\begin{cases}\\rho_{a} & \\rho_{a}\\geq\\rho_{0}\\\\\n"
"\\rho_{0} & \\rho_{a}<\\rho_{0}\\end{cases}`"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:44
#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:16
msgid ""
"J. P. Hughes and D. I. Graham, \"Comparison of incompressible and weakly-"
"compressible SPH models for free-surface water flows\", Journal of Hydraulic"
" Research, 48 (2010), pp. 105-117."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.TaitEOSHGCorrection:29
msgid ""
"The correction is to be applied on boundary particles and imposes a minimum "
"value of the density (rho0) which is set upon instantiation. This correction"
" avoids particle sticking behaviour at walls."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:1
msgid "**Update the particle smoothing lengths**"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:3
msgid ":math:`h_a = hdx \\left(\\frac{m_a}{\\rho_a}\\right)^{\\frac{1}{d}}`"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:7
msgid ""
"A. Ferrari et al., \"A new 3D parallel SPH scheme for free surface flows\", "
"Computers and Fluids, 38 (2009), pp. 1203--1217."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:10
msgid "number of dimensions"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:12
msgid "scaling factor"
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:17
msgid ""
"Ideally, the kernel scaling factor should be determined from the kernel used"
" based on a linear stability analysis. The default value of (hdx=1) reduces "
"to the formulation suggested by Ferrari et al. who used a Cubic Spline "
"kernel."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:22
msgid ""
"Typically, a change in the smoothing length should mean the neighbors are "
"re-computed which in PySPH means the NNPS must be updated. This equation "
"should therefore be placed as the last equation so that after the final "
"corrector stage, the smoothing lengths are updated and the new NNPS data "
"structure is computed."
msgstr ""

#: ../../pysph/pysph/sph/wc/basic.pydocstring of
#: pysph.sph.wc.basic.UpdateSmoothingLengthFerrari:28
msgid ""
"Note however that since this is to be used with incompressible flow "
"equations, the density variations are small and hence the smoothing lengths "
"should also not vary too much."
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of pysph.sph.wc.viscosity:1
msgid "Viscosity functions"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:1
msgid "Artificial viscosity proposed By P. Cleary:"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:3
msgid ""
"\\mathcal{Pi}_{ab} = -\\frac{16}{\\mu_a \\mu_b}{\\rho_a \\rho_b\n"
"(\\mu_a + \\mu_b)}\\left( \\frac{\\boldsymbol{v}_{ab} \\cdot\n"
"\\boldsymbol{r}_{ab}}{\\boldsymbol{r}_{ab}^2 + \\epsilon} \\right),"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:9
msgid "where the viscosity is determined from the parameter :math:`\\alpha` as"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:12
msgid "\\mu_a = \\frac{1}{8}\\alpha h_a c_a \\rho_a"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:16
msgid "This equation is described in the 2005 review paper by Monaghan"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.ClearyArtificialViscosity:18
msgid ""
"J. J. Monaghan, \"Smoothed Particle Hydrodynamics\", Reports on Progress in "
"Physics, 2005, 68, pp 1703--1759 [JM05]"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:1
msgid "See section 2 of the below reference [Sun2017]"
msgstr ""

#: ../../pysph/pysph/sph/wc/viscosity.pydocstring of
#: pysph.sph.wc.viscosity.LaminarViscosityDeltaSPH:5
msgid ""
"P. Sun, A. Colagrossi, S. Marrone, A. Zhang \"The $\\delta$ plus-SPH model: "
"simple procedures for a further improvement of the SPH scheme\", Computer "
"Methods in Applied Mechanics and Engineering 315 (2017), pp. 25-49."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity:2
msgid "Transport Velocity Formulation"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity:6
msgid ""
"S. Adami et. al \"A generalized wall boundary condition for smoothed "
"particle hydrodynamics\", Journal of Computational Physics (2012), pp. 7057"
"--7075."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity:10
msgid ""
"S. Adami et. al \"A transport-velocity formulation for smoothed particle "
"hydrodynamics\", Journal of Computational Physics (2013), pp. 292--307."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuityEquation:1
msgid "**Conservation of mass equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuityEquation:3
msgid "Eq (6) in [Adami2012]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuityEquation:5
msgid ""
"\\frac{d\\rho_a}{dt} = \\rho_a \\sum_b \\frac{m_b}{\\rho_b}\n"
"\\boldsymbol{v}_{ab} \\cdot \\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuitySolid:1
msgid "Continuity equation for the solid's ghost particles."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.ContinuitySolid:3
msgid ""
"The key difference is that we use the ghost velocity ug, and not the "
"particle velocity u."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:1
msgid "**Artificial stress contribution to the Momentum Equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:3
msgid ""
"\\frac{d\\boldsymbol{v}_a}{dt} = \\frac{1}{m_a}\\sum_b (V_a^2 +\n"
"V_b^2)\\left[ \\frac{1}{2}(\\boldsymbol{A}_a +\n"
"\\boldsymbol{A}_b) : \\nabla_a W_{ab}\\right]"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:9
msgid "where the artificial stress terms are given by:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialStress:11
msgid ""
"  \\boldsymbol{A} = \\rho \\boldsymbol{v} (\\tilde{\\boldsymbol{v}}\n"
"- \\boldsymbol{v})"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:1
msgid "**Artificial viscosity for the momentum equation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:3
msgid "Eq. (11) in [Adami2012]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:5
msgid ""
"\\frac{d \\boldsymbol{v}_a}{dt} = -\\sum_b m_b \\alpha h_{ab}\n"
"c_{ab} \\frac{\\boldsymbol{v}_{ab}\\cdot\n"
"\\boldsymbol{r}_{ab}}{\\rho_{ab}\\left(|r_{ab}|^2 + \\epsilon\n"
"\\right)}\\nabla_a W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:14
msgid ""
"\\rho_{ab} = \\frac{\\rho_a + \\rho_b}{2}\\\\\n"
"\n"
"c_{ab} = \\frac{c_a + c_b}{2}\\\\\n"
"\n"
"h_{ab} = \\frac{h_a + h_b}{2}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationArtificialViscosity:24
msgid "speed of sound"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:1
msgid "**Momentum equation for the Transport Velocity Formulation: Pressure**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:3
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationViscosity:3
msgid "Eq. (8) in [Adami2013]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:5
msgid ""
"\\frac{d \\boldsymbol{v}_a}{dt} = \\frac{1}{m_a}\\sum_b (V_a^2 +\n"
"V_b^2)\\left[-\\bar{p}_{ab}\\nabla_a W_{ab} \\right]"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:12
msgid "\\bar{p}_{ab} = \\frac{\\rho_b p_a + \\rho_a p_b}{\\rho_a + \\rho_b}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:16
msgid "background pressure"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:24
msgid "damping time"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:29
msgid ""
"This equation should have the destination as fluid and sources as fluid and "
"boundary particles."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:32
msgid ""
"This function also computes the contribution to the background pressure and "
"accelerations due to a body force or gravity."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationPressureGradient:35
msgid ""
"The body forces are damped according to Eq. (13) in [Adami2012] to avoid "
"instantaneous accelerations. By default, damping is neglected."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationViscosity:1
msgid ""
"**Momentum equation for the Transport Velocity Formulation: Viscosity**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationViscosity:5
msgid ""
"\\frac{d \\boldsymbol{v}_a}{dt} = \\frac{1}{m_a}\\sum_b (V_a^2 +\n"
"V_b^2)\\left[ \\bar{\\eta}_{ab}\\hat{r}_{ab}\\cdot \\nabla_a W_{ab}\n"
"\\frac{\\boldsymbol{v}_{ab}}{|\\boldsymbol{r}_{ab}|}\\right]"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationViscosity:13
msgid "\\bar{\\eta}_{ab} = \\frac{2\\eta_a \\eta_b}{\\eta_a + \\eta_b}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.MomentumEquationViscosity:17
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:39
msgid "kinematic viscosity"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:1
msgid "**Extrapolating the fluid velocity on to the wall**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:3
msgid "Eq. (22) in [Adami2012]:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:5
msgid ""
"\\tilde{\\boldsymbol{v}}_a = \\frac{\\sum_b\\boldsymbol{v}_b W_{ab}}\n"
"{\\sum_b W_{ab}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SetWallVelocity:12
msgid ""
"The destination particle array for this equation should define the "
"*filtered* velocity variables :math:`uf, vf, wf`."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:1
msgid "**Solid wall boundary condition** [Adami2012]_"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:3
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:3
msgid ""
"This boundary condition is to be used with fixed ghost particles in SPH "
"simulations and is formulated for the general case of moving boundaries."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:7
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:7
msgid ""
"The velocity and pressure of the fluid particles is extrapolated to the "
"ghost particles and these values are used in the equations of motion."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:11
msgid "No-penetration:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:13
msgid ""
"Ghost particles participate in the continuity and state equations with fluid"
" particles. This means as fluid particles approach the wall, the pressure of"
" the ghost particles increases to generate a repulsion force that prevents "
"particle penetration."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:18
msgid "No-slip:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:20
msgid ""
"Extrapolation is used to set the `dummy` velocity of the ghost particles for"
" viscous interaction. First, the smoothed velocity field of the fluid phase "
"is extrapolated to the wall particles:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:24
msgid "\\tilde{v}_a = \\frac{\\sum_b v_b W_{ab}}{\\sum_b W_{ab}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:28
msgid ""
"In the second step, for the viscous interaction in Eqs. (10) in [Adami2012] "
"and Eq. (8) in [Adami2013], the velocity of the ghost particles is assigned "
"as:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:32
msgid "v_b = 2v_w -\\tilde{v}_a,"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:36
msgid ""
"where :math:`v_w` is the prescribed wall velocity and :math:`v_b` is the "
"ghost particle in the interaction."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallNoSlipBC:44
msgid ""
"For this equation the destination particle array should be the fluid and the"
" source should be ghost or boundary particles. The boundary particles must "
"define a prescribed velocity :math:`u_0, v_0, w_0`"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:1
msgid "**Solid wall pressure boundary condition** [Adami2012]_"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:11
msgid "Pressure boundary condition:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:13
msgid ""
"The pressure of the ghost particle is also calculated from the fluid "
"particle by interpolation using:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:16
msgid ""
"p_g = \\frac{\\sum_f p_f W_{gf} + \\boldsymbol{g - a_g} \\cdot\n"
"\\sum_f \\rho_f \\boldsymbol{r}_{gf}W_{gf}}{\\sum_f W_{gf}},"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:21
msgid ""
"where the subscripts `g` and `f` relate to the ghost and fluid particles "
"respectively."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:24
msgid "Density of the wall particle is then set using this pressure"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:26
msgid ""
"\\rho_w=\\rho_0\\left(\\frac{p_w - \\mathcal{X}}{p_0} +\n"
"1\\right)^{\\frac{1}{\\gamma}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:33
#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:21
msgid "reference pressure"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:35
msgid "constant (default 1.0)"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:46
msgid ""
"For a two fluid system (boundary, fluid), this equation must be instantiated"
" with boundary as the destination and fluid as the source."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SolidWallPressureBC:50
msgid ""
"The boundary particle array must additionally define a property :math:`wij` "
"for the denominator in Eq. (27) from [Adami2012]. This array sums the kernel"
" terms from the ghost particle to the fluid particle."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:1
msgid "**Generalized Weakly Compressible Equation of State**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:3
msgid ""
"p_a = p_0\\left[ \\left(\\frac{\\rho}{\\rho_0}\\right)^\\gamma - b\n"
"\\right] + \\mathcal{X}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:10
msgid ""
"This is the generalized Tait's equation of state and the suggested values in"
" [Adami2013] are :math:`\\mathcal{X} = 0`, :math:`\\gamma=1` and :math:`b = "
"1`."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:14
msgid ""
"The reference pressure :math:`p_0` is calculated from the artificial sound "
"speed and reference density:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:17
msgid "p_0 = \\frac{c^2\\rho_0}{\\gamma}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.StateEquation:25
msgid "constant (default 1.0)."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:1
msgid "**Summation density with volume summation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:3
msgid ""
"In addition to the standard summation density, the number density for the "
"particle is also computed. The number density is important for multi-phase "
"flows to define a local particle volume independent of the material density."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:8
msgid ""
"\\rho_a = \\sum_b m_b W_{ab}\\\\\n"
"\n"
"\\mathcal{V}_a = \\frac{1}{\\sum_b W_{ab}}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:16
msgid ""
"Note that in the pysph implementation, V is the inverse volume of a "
"particle, i.e. the equation computes V as follows:"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:19
msgid "\\mathcal{V}_a = \\sum_b W_{ab}"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.SummationDensity:23
msgid ""
"For this equation, the destination particle array must define the variable "
"`V` for particle volume."
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeFromMassDensity:1
msgid "**Set the inverse volume using mass density**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeSummation:1
msgid "**Number density for volume computation**"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeSummation:3
msgid "See `SummationDensity`"
msgstr ""

#: ../../pysph/pysph/sph/wc/transport_velocity.pydocstring of
#: pysph.sph.wc.transport_velocity.VolumeSummation:5
msgid ""
"Note that the quantity `V` is really :math:`\\sigma` of the original paper, "
"i.e. inverse of the particle volume."
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:1
msgid ""
"**Moving Least Squares density reinitialization** This is a first order "
"density reinitialization"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:4
msgid ""
"W_{ab}^{MLS} = \\beta\\left(\\mathbf{r_{a}}\\right)\\cdot\\left(\n"
"\\mathbf{r}_a - \\mathbf{r}_b\\right)W_{ab}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:8
msgid ""
"\\beta\\left(\\mathbf{r_{a}}\\right) = A^{-1}\n"
"\\left[1 0 0\\right]^{T}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:14
msgid ""
"A = \\sum_{b}W_{ab}\\tilde{A}\\frac{m_{b}}{\\rho_{b}}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:17
msgid ""
"\\tilde{A} = pp^{T}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:22
msgid ""
"p = \\left[1 x_{a}-x_{b} y_{a}-y_{b}\\right]^{T}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.MLSFirstOrder2D:25
msgid ""
"\\rho_{a} = \\sum_{b} \\m_{b}W_{ab}^{MLS}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.ShepardFilter:1
msgid ""
"**Shepard Filter density reinitialization** This is a zeroth order density "
"reinitialization"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.ShepardFilter:4
msgid ""
"\\tilde{W_{ab}} = \\frac{W_{ab}}{\\sum_{b} W_{ab}\\frac{m_{b}}\n"
"{\\rho_{b}}}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/density_correction.pydocstring of
#: pysph.sph.wc.density_correction.ShepardFilter:8
msgid ""
"\\rho_{a} = \\sum_{b} \\m_{b}\\tilde{W_{ab}}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction:2
msgid "Kernel Corrections"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction:4
msgid ""
"These are the equations for the kernel corrections that are mentioned in the"
" paper by Bonet and Lok [BonetLok1999]."
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction:9
msgid ""
"Bonet, J. and Lok T.-S.L. (1999) Variational and Momentum Preservation "
"Aspects of Smoothed Particle Hydrodynamic Formulations."
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrection:1
msgid "**Kernel Gradient Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrection:3
msgid "From [BonetLok1999], equations (42) and (45)"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrection:5
msgid ""
"\\nabla \\tilde{W}_{ab} = L_{a}\\nabla W_{ab}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.GradientCorrection:8
msgid ""
"L_{a} = \\left(\\sum \\frac{m_{b}}{\\rho_{b}} \\nabla W_{ab}\n"
"\\mathbf{\\otimes}x_{ba} \\right)^{-1}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.KernelCorrection:1
msgid "**Kernel Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.KernelCorrection:3
msgid "From [BonetLok1999], equation (53):"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.KernelCorrection:5
msgid ""
"\\mathbf{f}_{a} = \\frac{\\sum_{b}\\frac{m_{b}}{\\rho_{b}}\n"
"\\mathbf{f}_{b}W_{ab}}{\\sum_{b}\\frac{m_{b}}{\\rho_{b}}W_{ab}}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedGradientCorrection:1
msgid "**Mixed Kernel Gradient Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedGradientCorrection:3
msgid ""
"This is as per [BonetLok1999]. See the MixedKernelCorrectionPreStep for the "
"equations."
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:1
msgid "**Mixed Kernel Correction**"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:3
msgid "From [BonetLok1999], equations (54), (57) and (58)"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:5
msgid ""
"\\tilde{W}_{ab} = \\frac{W_{ab}}{\\sum_{b} V_{b}W_{ab}}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:8
msgid ""
"\\nabla \\tilde{W}_{ab} = L_{a}\\nabla \\bar{W}_{ab}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:11
msgid "where,"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:13
msgid ""
"L_{a} = \\left(\\sum_{b} V_{b} \\nabla \\bar{W}_{ab}\n"
"\\mathbf{\\otimes}x_{ba} \\right)^{-1}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:17
msgid ""
"\\nabla \\bar{W}_{ab} = \\frac{\\nabla W_{ab} - \\gamma}\n"
"{\\sum_{b} V_{b}W_{ab}}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/wc/kernel_correction.pydocstring of
#: pysph.sph.wc.kernel_correction.MixedKernelCorrectionPreStep:21
msgid ""
"\\gamma = \\frac{\\sum_{b} V_{b}\\nabla W_{ab}}\n"
"{\\sum_{b} V_{b}W_{ab}}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/sph/boundary_equations.pydocstring of
#: pysph.sph.boundary_equations:2
msgid "SPH Boundary Equations"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi:2
msgid "Equations for the High Velocity Impact Problems"
msgstr ""

#: ../../pysph/pysph/sph/solid_mech/hvi.pydocstring of
#: pysph.sph.solid_mech.hvi.StiffenedGasEOS:1
msgid ""
"Stiffened-gas EOS from \"A Free Lagrange Augmented Godunov Method for the "
"Simulation of Elastic-Plastic Solids\", B. P. Howell and G. J. Ball, JCP "
"(2002).  http://dx.doi.org/10.1006/jcph.2001.6931"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:56
msgid "Gas Dynamics"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:63
msgid "Surface tension"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:70
msgid "Implicit Incompressible SPH"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:78
msgid "Rigid body motion"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of pysph.sph.rigid_body:1
msgid "Rigid body related equations."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:1
msgid ""
"Force between a solid sphere and a SPH fluid particle.  This is implemented "
"using Akinci's[1] force and additional force from solid bodies pressure "
"which is implemented by Liu[2]"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:5
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:5
msgid "[1]'Versatile Rigid-Fluid Coupling for Incompressible SPH'"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:7
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:7
msgid "URL: https://graphics.ethz.ch/~sobarbar/papers/Sol12/Sol12.pdf"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:9
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:9
msgid ""
"[2]A 3D Simulation of a Moving Solid in Viscous Free-Surface Flows by "
"Coupling SPH and DEM"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:12
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:12
msgid "https://doi.org/10.1155/2017/3174904"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:18
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:18
msgid "Note: Here forces for both the phases are added at once."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.AkinciRigidFluidCoupling:16
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.LiuFluidForce:16
msgid ""
"Please make sure that this force is applied only once for both the particle "
"properties."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.EulerStep:1
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.EulerStepRigidBody:1
msgid "Fast but inaccurate integrator. Use this for testing"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.PressureRigidBody:1
msgid ""
"The pressure acceleration on the fluid/solid due to a boundary. Implemented "
"from Akinci et al. http://dx.doi.org/10.1145/2185520.2185558"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.PressureRigidBody:4
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.ViscosityRigidBody:4
msgid "Use this with the fluid as a destination and body as source."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyCollision:1
msgid "Force between two spheres is implemented using DEM contact force law."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyCollision:3
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyWallCollision:4
msgid ""
"Refer https://doi.org/10.1016/j.powtec.2011.09.019 for more information."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyCollision:6
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyWallCollision:7
msgid ""
"Open-source MFIX-DEM software for gas–solids flows: Part I—Verification "
"studies ."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyCollision:10
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyWallCollision:11
msgid "Initialise the required coefficients for force calculation."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyCollision:13
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyWallCollision:14
msgid ""
"Keyword arguments: kn -- Normal spring stiffness (default 1e3) mu -- "
"friction coefficient (default 0.5) en -- coefficient of restitution (0.8)"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyCollision:18
#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyWallCollision:19
msgid ""
"Given these coefficients, tangential spring stiffness, normal and tangential"
" damping coefficient are calculated by default."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyForceGPUGems:1
msgid ""
"This is inspired from "
"http://http.developer.nvidia.com/GPUGems3/gpugems3_ch29.html and BK Mishra's"
" article on DEM http://dx.doi.org/10.1016/S0301-7516(03)00032-2 A review of "
"computer simulation of tumbling mills by the discrete element method: Part I"
" - contact mechanics"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyForceGPUGems:9
msgid "Note that d is a factor multiplied with the \"h\" of the particle."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.RigidBodyWallCollision:1
msgid ""
"Force between sphere and a wall is implemented using DEM contact force law."
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityBoundary:1
msgid ""
"Equation to find the density of the fluid particle due to any boundary or a "
"rigid body"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.SummationDensityBoundary:4
msgid ":math:`\\rho_a = \\sum_b {\\rho}_fluid V_b W_{ab}`"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.ViscosityRigidBody:1
msgid ""
"The viscous acceleration on the fluid/solid due to a boundary. Implemented "
"from Akinci et al. http://dx.doi.org/10.1145/2185520.2185558"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.get_alpha_dot:1
msgid ""
"Use sympy to perform most of the math and use the resulting formulae to "
"calculate:"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.get_alpha_dot:4
msgid "inv(I) (    au - w x (I w))"
msgstr ""

#: ../../pysph/pysph/sph/rigid_body.pydocstring of
#: pysph.sph.rigid_body.get_torque:1
msgid "Use sympy to perform some simple math. R x F C_m x F w x r"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:85
msgid "Miscellaneous"
msgstr ""

#: ../../pysph/pysph/sph/misc/advection.pydocstring of
#: pysph.sph.misc.advection:2
msgid "Functions for advection"
msgstr ""

#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array:1
msgid "Functions to reduce array data in serial or parallel."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.dummy_reduce_array:1
msgid "Simply returns the array for the serial case."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.mpi_reduce_array:1
#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.serial_reduce_array:1
msgid "Reduce an array given an array and a suitable reduction operation."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.mpi_reduce_array:3
#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.serial_reduce_array:3
msgid "Currently, only 'sum', 'max', 'min' and 'prod' are supported."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.mpi_reduce_array:5
#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.serial_reduce_array:5
msgid "**Parameters**"
msgstr ""

#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.mpi_reduce_array:7
#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.serial_reduce_array:7
msgid "array: numpy.ndarray: Any numpy array (1D)."
msgstr ""

#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.mpi_reduce_array:8
#: ../../pysph/pysph/base/reduce_array.pydocstring of
#: pysph.base.reduce_array.serial_reduce_array:8
msgid "op: str: reduction operation, one of ('sum', 'prod', 'min', 'max')"
msgstr ""

#: ../../pysph/docs/source/reference/equations.rst:97
msgid "Group of equations"
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:1
msgid "A group of equations."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:3
msgid ""
"This class provides some support for the code generation for the collection "
"of equations."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:4
#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:6
msgid "Constructor."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:8
msgid "a list of equation objects."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:10
msgid ""
"specifies if only non-remote/non-ghost particles should be operated on."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:13
msgid ""
"specifies if the neighbors should be re-computed locally after this group"
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:16
msgid ""
"specifies if the group should continue iterating until each equation's "
"\"converged()\" methods returns with a positive value."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:19
msgid "specifies the maximum number of times this group should be iterated."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:22
msgid "specifies the minimum number of times this group should be iterated."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:25
msgid ""
"A callable which is passed no arguments that is called before anything in "
"the group is executed."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:28
msgid ""
"A callable which is passed no arguments that is called after the group is "
"completed."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:31
msgid ""
"A callable that is passed (t, dt). If this callable returns True, the group "
"is executed, otherwise it is not. If condition is None, the group is always "
"executed. Note that this should work even if the group has many destination "
"arrays."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:36
msgid ""
"Start looping from this destination index. Starts from the given number if "
"an integer is passed. If a string is look for a property/constant and use "
"its first value as the loop count."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:40
msgid ""
"Loop up to this destination index instead of over all possible values. "
"Defaults to all particles. Ends at the given number if an integer is passed."
" If a string is passed, look for a property/constant and use its first value"
" as the loop count. Note that this works like a range stop parameter so the "
"last value is not included."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of pysph.sph.equation.Group:50
msgid ""
"When running simulations in parallel, one should typically run the summation"
" density over all particles (both local and remote) in each processor.  This"
" is because we must update the pressure/density of the remote neighbors in "
"the current processor. Otherwise the results can be incorrect with the "
"remote particles having an older density.  This is also the case for the "
"TaitEOS.  In these cases the group that computes the equation should set "
"real to False."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of
#: pysph.sph.equation.MultiStageEquations:1
msgid ""
"A class that allows a user to specify different equations for different "
"stages."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of
#: pysph.sph.equation.MultiStageEquations:4
msgid ""
"The object doesn't do much, except contain the different collections of "
"equations."
msgstr ""

#: ../../pysph/pysph/sph/equation.pydocstring of
#: pysph.sph.equation.MultiStageEquations:8
msgid "A list/tuple of list of groups/equations, one for each stage."
msgstr ""

#: ../../pysph/docs/source/reference/index.rst:2
msgid "PySPH Reference Documentation"
msgstr ""

#: ../../pysph/docs/source/reference/index.rst:4
msgid "Autogenerated from doc strings using sphinx’s autodoc feature."
msgstr ""

#: ../../pysph/docs/source/reference/integrator.rst:2
msgid "Integrator related modules"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of pysph.sph.integrator:1
msgid "Basic code for the templated integrators."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of pysph.sph.integrator:3
msgid "Currently we only support two-step integrators."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of pysph.sph.integrator:5
msgid ""
"These classes are used to generate the code for the actual integrators from "
"the `sph_eval` module."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:1
msgid "Predictor corrector integrators can have two modes of operation."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:4
msgid ""
"In the Evaluate-Predict-Evaluate-Correct (EPEC) mode, the system is advanced"
" using:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:7
msgid ""
"F(y^n) --> Evaluate\n"
"\n"
"y^{n+\\frac{1}{2}} = y^n + F(y^n) --> Predict\n"
"\n"
"F(y^{n+\\frac{1}{2}}) --> Evaluate\n"
"\n"
"y^{n+1} = y^n + \\Delta t F(y^{n+\\frac{1}{2}}) --> Correct"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:17
#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VerletSymplecticWCSPHStep:7
msgid "Notes:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:19
msgid ""
"The Evaluate stage of the integrator forces a function evaluation. "
"Therefore, the PEC mode is much faster but relies on old accelertions for "
"the Prediction stage."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:23
msgid "In the EPEC mode, the final corrector can be modified to:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:25
msgid ""
"y^{n+1} = y^n + \\frac{\\Delta t}{2}\\left( F(y^n) +\n"
"                        F(y^{n+\\frac{1}{2}}) \\right)"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:30
msgid "This would require additional storage for the accelerations."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:33
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator:1
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator:4
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator:4
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator:13
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator:14
msgid "Pass fluid names and suitable `IntegratorStep` instances."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:35
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator:3
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator:15
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator:12
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator:16
msgid "For example::"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator:39
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator:7
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator:19
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator:16
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator:20
msgid "where \"fluid\" and \"solid\" are the names of the particle arrays."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:1
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:1
msgid "User written function that actually does one timestep."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:3
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:3
msgid ""
"This function is used in the high-performance Cython implementation. The "
"assumptions one may make are the following:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:6
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:6
msgid "t and dt are passed."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:8
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:8
msgid "the following methods are available:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:10
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:10
msgid "self.initialize()"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:12
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:12
msgid ""
"self.stage1(), self.stage2() etc. depending on the number of stages "
"available."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:15
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:15
msgid "self.compute_accelerations(index=0, update_nnps=True)"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:16
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:16
msgid "self.do_post_stage(stage_dt, stage_count_from_1)"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:17
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:17
msgid "self.update_domain()"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EPECIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.EulerIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator.one_timestep:19
#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator.one_timestep:19
msgid ""
"Please see any of the concrete implementations of the Integrator class to "
"study.  By default the Integrator implements a predict-evaluate-correct "
"method, the same as PECIntegrator."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator:1
msgid ""
"Generic class for multi-step integrators in PySPH for a system of ODES of "
"the form :math:`\\frac{dy}{dt} = F(y)`."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.compute_time_step:1
msgid ""
"If there are any adaptive timestep constraints, the appropriate timestep is "
"returned, else None is returned."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:1
msgid ""
"Compute the initial accelerations if needed before the iterations start."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:3
msgid ""
"The default implementation only does this for the first acceleration "
"evaluator. So if you have multiple evaluators, you must override this method"
" in a subclass."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.set_acceleration_evals:1
msgid "Set the acceleration evaluators."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.set_acceleration_evals:3
msgid "This must be done before the integrator is used."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.set_acceleration_evals:5
msgid "If you are using the SPHCompiler, it automatically calls this method."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.set_compiled_object:1
msgid "Set the high-performance compiled object to call internally."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.set_post_stage_callback:1
msgid ""
"This callback is called when the particles are moved, i.e one stage of the "
"integration is done."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.set_post_stage_callback:4
msgid ""
"This callback is passed the current time value, the timestep and the stage."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.set_post_stage_callback:7
msgid ""
"The current time value is  t + stage_dt, for example this would be 0.5*dt "
"for a two stage predictor corrector integrator."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.step:1
msgid "This function is called by the solver."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.Integrator.step:3
msgid ""
"To implement the integration step please override the ``one_timestep`` "
"method."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:1
msgid "Update the domain of the simulation."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:3
msgid ""
"This is to be called when particles move so the ghost particles "
"(periodicity, mirror boundary conditions) can be reset. Further, this also "
"recalculates the appropriate cell size based on the particle kernel radius, "
"`h`. This should be called explicitly when desired but usually this is done "
"when the particles are moved or the `h` is changed."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: compyle.profile.profile.<locals>.make_wrapper.<locals>.wrapper:10
msgid ""
"The integrator should explicitly call this when needed in the `one_timestep`"
" method."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.LeapFrogIntegrator:1
msgid "A leap-frog integrator."
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator:1
msgid ""
"In the Predict-Evaluate-Correct (PEC) mode, the system is advanced using:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PECIntegrator:3
msgid ""
"y^{n+\\frac{1}{2}} = y^n + \\frac{\\Delta t}{2}F(y^{n-\\frac{1}{2}})\n"
"--> Predict\n"
"\n"
"F(y^{n+\\frac{1}{2}}) --> Evaluate\n"
"\n"
"y^{n + 1} = y^n + \\Delta t F(y^{n+\\frac{1}{2}})"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator:1
msgid "A Position-Extended Forest-Ruth-Like integrator [Omeylan2002]_"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.PEFRLIntegrator:5
msgid ""
"I.M. Omelyan, I.M. Mryglod and R. Folk, \"Optimized Forest-Ruth- and Suzuki-"
"like algorithms for integration of motion in many-body systems\", Computer "
"Physics Communications 146, 188 (2002) http://arxiv.org/abs/cond-mat/0110585"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator:1
msgid "In the TVD-RK3 integrator, the system is advanced using:"
msgstr ""

#: ../../pysph/pysph/sph/integrator.pydocstring of
#: pysph.sph.integrator.TVDRK3Integrator:3
msgid ""
"y^{n + \\frac{1}{3}} = y^n + \\Delta t F( y^n )\n"
"\n"
"y^{n + \\frac{2}{3}} = \\frac{3}{4}y^n +\n"
"\\frac{1}{4}(y^{n + \\frac{1}{3}} + \\Delta t F(y^{n + \\frac{1}{3}}))\n"
"\n"
"y^{n + 1} = \\frac{1}{3}y^n + \\frac{2}{3}(y^{n + \\frac{2}{3}}\n"
"+ \\Delta t F(y^{n + \\frac{2}{3}}))"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step:1
msgid "Integrator steps for different schemes."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step:3
msgid "Implement as many stages as needed."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.ADKEStep:1
msgid "Predictor Corrector integrator for Gas-dynamics ADKE"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.AdamiVerletStep:1
msgid ""
"Verlet time integration described in `A generalized wall boundary condition "
"for smoothed particle hydrodynamics` 2012, JCP, 231, pp 7057--7075"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.AdamiVerletStep:5
msgid ""
"This integrator can operate in either PEC mode or in EPEC mode as described "
"in the paper."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.GasDFluidStep:1
msgid "Predictor Corrector integrator for Gas-dynamics"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.InletOutletStep:1
msgid "A trivial integrator for the inlet/outlet particles"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.IntegratorStep:1
msgid ""
"Subclass this and implement the methods ``initialize``, ``stage1`` etc. Use "
"the same conventions as the equations."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.LeapFrogStep:1
#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.PEFRLStep:1
msgid ""
"Using this stepper with XSPH as implemented in "
"`pysph.base.basic_equations.XSPHCorrection` is not directly possible and "
"requires a nicer implementation where the correction alone is added to ``ax,"
" ay, az``."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.OneStageRigidBodyStep:1
msgid "Simple one stage rigid-body motion"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.SolidMechStep:1
msgid "Predictor corrector Integrator for solid mechanics problems"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.TransportVelocityStep:1
msgid ""
"Integrator defined in 'A transport velocity formulation for smoothed "
"particle hydrodynamics', 2013, JCP, 241, pp 292--307"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.TransportVelocityStep:4
msgid ""
"For a predictor-corrector style of integrator, this integrator should "
"operate only in PEC mode."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.TwoStageRigidBodyStep:1
msgid "Simple rigid-body motion"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.TwoStageRigidBodyStep:3
msgid ""
"At each stage of the integrator, the prescribed velocity and accelerations "
"are incremented by dt/2."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.TwoStageRigidBodyStep:6
msgid ""
"Note that the time centered velocity is used for updating the particle "
"positions. This ensures exact motion for a constant acceleration."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VelocityVerletSymplecticWCSPHStep:1
msgid ""
"Another symplectic second order integrator described in the review paper by "
"Monaghan:"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VelocityVerletSymplecticWCSPHStep:4
#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VerletSymplecticWCSPHStep:4
msgid ""
"J. Monaghan, \"Smoothed Particle Hydrodynamics\", Reports on Progress in "
"Physics, 2005, 68, pp 1703--1759 [JM05]"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VelocityVerletSymplecticWCSPHStep:7
msgid "kick--drift--kick form of the verlet integrator"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VerletSymplecticWCSPHStep:1
msgid ""
"Symplectic second order integrator described in the review paper by "
"Monaghan:"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VerletSymplecticWCSPHStep:9
msgid ""
"This integrator should run in PEC mode since in the first stage, the "
"positions are updated using the current velocity. The accelerations are then"
" computed to advance to the full time step values."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.VerletSymplecticWCSPHStep:14
msgid ""
"This version of the integrator does not update the density. That is, the "
"summation density is used instead of the continuity equation."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.WCSPHStep:1
msgid "Standard Predictor Corrector integrator for the WCSPH formulation"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.WCSPHStep:3
msgid ""
"Use this integrator for WCSPH formulations. In the predictor step, the "
"particles are advanced to `t + dt/2`. The particles are then advanced with "
"the new force computed at this position."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.WCSPHStep:7
msgid "This integrator can be used in PEC or EPEC mode."
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.WCSPHStep:9
msgid ""
"The same integrator can be used for other problems. Like for example solid "
"mechanics (see SolidMechStep)"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.WCSPHTVDRK3Step:1
msgid "TVD RK3 stepper for WCSPH"
msgstr ""

#: ../../pysph/pysph/sph/integrator_step.pydocstring of
#: pysph.sph.integrator_step.WCSPHTVDRK3Step:3
msgid ""
"This integrator requires :math:`2` stages for the storage of the "
"acceleration variables."
msgstr ""

#: ../../pysph/docs/source/reference/kernels.rst:2
msgid "SPH Kernels"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of pysph.base.kernels:1
msgid "Definition of some SPH kernel functions"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline:1
msgid "Cubic Spline Kernel: [Monaghan1992]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline:3
msgid ""
"W(q) = \\ &\\sigma_3\\left[ 1 - \\frac{3}{2}q^2\\left( 1 -\n"
"       \\frac{q}{2} \\right) \\right],\n"
"       \\ & \\textrm{for} \\ 0 \\leq q \\leq 1,\\\\\n"
"     = \\ &\\frac{\\sigma_3}{4}(2-q)^3, & \\textrm{for}\n"
"       \\ 1 < q \\leq 2,\\\\\n"
"     = \\ &0, & \\textrm{for}\\ q>2, \\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline:11
msgid ""
"where :math:`\\sigma_3` is a dimensional normalizing factor for the cubic "
"spline function given by:"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline:14
msgid ""
"\\sigma_3  = \\ & \\frac{2}{3h^1}, & \\textrm{for dim=1}, \\\\\n"
"\\sigma_3  = \\ & \\frac{10}{7\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\sigma_3  = \\ & \\frac{1}{\\pi h^3}, & \\textrm{for dim=3}. \\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline:21
msgid ""
"`J. Monaghan, Smoothed Particle Hydrodynamics, \"Annual Review of Astronomy "
"and Astrophysics\", 30 (1992), pp. 543-574. "
"<http://adsabs.harvard.edu/abs/1992ARA&A..30..543M>`_"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline.dwdq:2
msgid "Gradient of a kernel is given by"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline.dwdq:4
msgid "abla W = normalization rac{dW}{dq} rac{dq}{dx}"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline.dwdq:8
msgid "abla W = w_dash rac{dq}{dx}"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.CubicSpline.dwdq:11
msgid "Here we get `w_dash` by using `dwdq` method"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of pysph.base.kernels.Gaussian:1
msgid "Gaussian Kernel: [Liu2010]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of pysph.base.kernels.Gaussian:3
msgid ""
"W(q) = \\ &\\sigma_g e^{-q^2}, \\ & \\textrm{for} \\ 0\\leq q \\leq 3,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>3,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of pysph.base.kernels.Gaussian:7
msgid ""
"where :math:`\\sigma_g` is a dimensional normalizing factor for the gaussian"
" function given by:"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.Gaussian:10
msgid ""
"\\sigma_g  = \\ & \\frac{1}{\\pi^{1/2} h}, \\ & \\textrm{for dim=1}, \\\\\n"
"\\sigma_g  = \\ & \\frac{1}{\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\sigma_g  = \\ & \\frac{1}{\\pi^{3/2} h^3}, & \\textrm{for dim=3}. \\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.Gaussian:17
msgid ""
"`M. Liu, & G. Liu, Smoothed particle hydrodynamics (SPH): an overview and "
"recent developments, \"Archives of computational methods in engineering\", "
"17.1 (2010), pp. 25-76. "
"<http://link.springer.com/article/10.1007/s11831-010-9040-7>`_"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.QuinticSpline:1
msgid "Quintic Spline SPH kernel: [Liu2010]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.QuinticSpline:3
msgid ""
"W(q) = \\ &\\sigma_5\\left[ (3-q)^5 - 6(2-q)^5 + 15(1-q)^5 \\right],\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 1,\\\\\n"
"     = \\ &\\sigma_5\\left[ (3-q)^5 - 6(2-q)^5 \\right], &\n"
"       \\textrm{for} \\ 1 <  q \\leq 2,\\\\\n"
"     = \\ &\\sigma_5 \\ (3-q)^5 , & \\textrm{for} \\ 2 < q \\leq 3,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>3,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.QuinticSpline:11
msgid ""
"where :math:`\\sigma_5` is a dimensional normalizing factor for the quintic "
"spline function given by:"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.QuinticSpline:14
msgid ""
"\\sigma_5  = \\ & \\frac{1}{120 h^1}, & \\textrm{for dim=1}, \\\\\n"
"\\sigma_5  = \\ & \\frac{7}{478\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\sigma_5  = \\ & \\frac{1}{120\\pi h^3}, & \\textrm{for dim=3}. \\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.SuperGaussian:1
msgid "Super Gaussian Kernel: [Monaghan1992]_"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.SuperGaussian:3
msgid ""
"W(q) = \\ &\\frac{1}{h^{d}\\pi^{d/2}} e^{-q^2} (d/2 + 1 - q^2),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 3,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>3,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.SuperGaussian:8
msgid "where :math:`d` is the number of dimensions."
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuintic:1
msgid "The following is the WendlandQuintic kernel(C2) kernel for 2D and 3D."
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuintic:3
msgid ""
"W(q) = \\ & \\alpha_d (1-q/2)^4(2q +1))),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuintic:8
#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC2_1D:8
#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4:9
#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4_1D:8
#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6:8
#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6_1D:9
msgid "where :math:`d` is the number of dimensions and"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuintic:10
msgid ""
"\\alpha_d  = \\ & \\frac{7}{4\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\alpha_d  = \\ & \\frac{21}{16\\pi h^3}, \\ & \\textrm{for dim=3}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC2_1D:1
msgid ""
"The following is the WendlandQuintic kernel (Wendland C2) kernel for 1D."
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC2_1D:3
msgid ""
"W(q) = \\ & \\alpha_d (1-q/2)^3 (1.5q +1))),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC2_1D:10
msgid ""
"\\alpha_d  =  \\frac{5}{8h}, \\textrm{for dim=1}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4:2
msgid "The following is the WendlandQuintic kernel (Wendland C4) kernel for"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4:2
msgid "2D and 3D."
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4:4
msgid ""
"W(q) = \\ & \\alpha_d (1-q/2)^6(\\frac{35}{12} q^2 + 3q +1))),\n"
"        \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4:11
msgid ""
"\\alpha_d  = \\ & \\frac{9}{4\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\alpha_d  = \\ & \\frac{495}{256\\pi h^3}, \\ & \\textrm{for dim=3}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4_1D:1
msgid ""
"The following is the WendlandQuintic kernel (Wendland C4) kernel for 1D."
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4_1D:3
msgid ""
"W(q) = \\ & \\alpha_d (1-q/2)^5 (2q^2 + 2.5q +1))),\n"
"        \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC4_1D:10
msgid ""
"\\alpha_d =  \\frac{3}{4h}, \\ \\textrm{for dim=1}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6:1
msgid "The following is the WendlandQuintic kernel(C6) kernel for 2D and 3D."
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6:3
msgid ""
"W(q) = \\ & \\alpha_d (1-q/2)^8 (4 q^3 + 6.25 q^2 + 4q +1))),\n"
"        \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6:10
msgid ""
"\\alpha_d  = \\ & \\frac{78}{28\\pi h^2}, \\ & \\textrm{for dim=2}, \\\\\n"
"\\alpha_d  = \\ & \\frac{1365}{512\\pi h^3}, \\ & \\textrm{for dim=3}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6_1D:1
msgid ""
"The following is the WendlandQuintic kernel (Wendland C6) kernel for 1D."
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6_1D:3
msgid ""
"W(q) = \\ & \\alpha_d (1-q/2)^7 (\\frac{21}{8} q^3\n"
"       + \\frac{19}{4} q^2 + 3.5q +1))),\n"
"       \\ & \\textrm{for} \\ 0\\leq q \\leq 2,\\\\\n"
"     = \\ & 0, & \\textrm{for} \\ q>2,\\\\\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.WendlandQuinticC6_1D:11
msgid ""
"\\alpha_d  = \\ \\frac{55}{64h},  \\textrm{for dim=1}\n"
"\n"
msgstr ""

#: ../../pysph/pysph/base/kernels.pydocstring of
#: pysph.base.kernels.get_compiled_kernel:1
msgid "Given a kernel, return a high performance wrapper kernel."
msgstr ""

#: ../../pysph/docs/source/reference/nnps.rst:2
msgid "Module nnps: Nearest Neighbor Particle Search"
msgstr ""

#: ../../pysph/docs/source/reference/parallel_manager.rst:3
msgid "Module parallel_manager"
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:2
msgid "Module particle_array"
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:4
msgid "The ``ParticleArray`` class itself is documented as below."
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:10
msgid "Convenience functions to create particle arrays"
msgstr ""

#: ../../pysph/docs/source/reference/particle_array.rst:12
msgid ""
"There are several convenience functions that provide a particle array with a"
" requisite set of particle properties that are documented below."
msgstr ""

#: ../../pysph/docs/source/reference/scheme.rst:2
msgid "Module scheme"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme:1
msgid ""
"Abstract class to define the API for an SPH scheme.  The idea is that one "
"can define a scheme and thereafter one simply instantiates a suitable "
"scheme, gives it a bunch of particles and runs the application."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:1
msgid "a list with names of fluid particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:3
msgid "a list with names of solid (or boundary) particle arrays"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:5
msgid "dimensionality of the problem"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:7
msgid "Gamma for equation of state"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:9
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:11
msgid "artificial viscosity parameter"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:13
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:15
msgid "kernel scaling parameter"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:17
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:19
msgid "artificial heat conduction parameter"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.ADKEScheme:21
msgid "if problem uses ghost particles (periodic or mirror)"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.configure_solver:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.configure_solver:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.configure_solver:1
msgid "Configure the solver to be generated."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.configure_solver:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.configure_solver:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.configure_solver:3
msgid "Kernel to use, if none is passed a default one is used."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.configure_solver:5
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.configure_solver:5
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.configure_solver:5
msgid "Integrator class to use, use sensible default if none is passed."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.configure_solver:8
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.configure_solver:8
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.configure_solver:8
msgid "Additional integration stepper instances as a dict."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.configure_solver:10
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.configure_solver:10
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.configure_solver:10
msgid "Any additional keyword args are passed to the solver instance."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.setup_properties:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.setup_properties:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.setup_properties:1
msgid ""
"Setup the particle arrays so they have the right set of properties for this "
"scheme."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.setup_properties:4
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.setup_properties:4
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.setup_properties:4
msgid "List of particle arrays."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.ADKEScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GSPHScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.GasDScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.setup_properties:6
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.TVFScheme.setup_properties:6
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.WCSPHScheme.setup_properties:6
msgid "If True, removes any unnecessary properties."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme:1
msgid "This is a scheme similiar to that in the paper:"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme:3
msgid ""
"Adami, S., Hu, X., Adams, N. A generalized wall boundary condition for "
"smoothed particle hydrodynamics.  Journal of Computational Physics "
"2012;231(21):7057-7075."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme:7
msgid ""
"The major difference is in how the equations are integrated.  The paper has "
"a different scheme that does not quite fit in with how things are done in "
"PySPH readily so we simply use the WCSPHStep which works well."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme:11
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:1
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:1
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.Scheme:4
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.TVFScheme:1
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:1
msgid "List of names of fluid particle arrays."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme:13
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.Scheme:6
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.TVFScheme:3
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:3
msgid "List of names of solid particle arrays (or boundaries)."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme:15
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:6
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:6
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.Scheme:8
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.TVFScheme:5
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:5
msgid "Dimensionality of the problem."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.attributes_changed:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.attributes_changed:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.attributes_changed:1
msgid "Overload this to compute any properties that depend on others."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.AdamiHuAdamsScheme.attributes_changed:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.attributes_changed:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.attributes_changed:3
msgid "This is automatically called when configure is called."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:3
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:3
msgid ""
"List of names of solid particle arrays (or boundaries), currently not "
"supported"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:8
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:8
msgid "Gamma for Equation of state."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:10
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:10
msgid "Kernel scaling factor."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:12
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:14
msgid "ADKE style thermal conduction parameters"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:16
msgid ""
"Riemann solver to use.  See pysph.sph.gas_dynamics.gsph for valid options."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:19
msgid "Kind of interpolation for the specific volume integrals."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:21
msgid ""
"Type of monotonicity algorithm to use: 0 : First order GSPH 1 : I02 "
"algorithm 2 : IwIn algorithm"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:26
msgid "Set Interface position s^*_{ij} = 0 for the Riemann problem."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:28
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:30
msgid "Hybrid scheme and blending alpha value"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:32
msgid "Final time used for blending."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:34
msgid "Max number of iterations for iterative Riemann solvers."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:36
msgid "Tolerance for iterative Riemann solvers."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GSPHScheme:38
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:28
msgid "if ghost particles (either mirror or periodic) is used"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:12
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:14
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:16
msgid "Artificial viscosity parameter."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:18
msgid "Adaptive h scheme to use. One of ['mpm', 'gsph']"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:20
msgid "Update the alpha1 parameter dynamically."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:22
msgid "Update the alpha2 parameter dynamically."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:24
msgid "Maximum number of iterations to run for one density step"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.GasDScheme:26
msgid "Maximum difference allowed in two successive density iterations"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.Scheme:1
msgid "An API for an SPH scheme."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure:1
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.configure:1
msgid "Configure the scheme with given parameters."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.Scheme.configure:3
#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser.configure:3
msgid "Overload this to do any scheme specific stuff."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser:1
msgid "Name of the default scheme to use."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of
#: pysph.sph.scheme.SchemeChooser:3
msgid "The schemes to choose between."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:7
msgid "Reference density."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:9
msgid "Reference speed of sound."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:11
msgid "Gamma for the equation of state."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:13
msgid "Reference smoothing length."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:15
msgid "Ratio of h/dx."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:17
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:19
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:21
msgid "Body force acceleration components."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:23
#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:25
msgid "Coefficient for artificial viscosity."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:27
msgid "Coefficient used to control the intensity of diffusion of density"
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:29
msgid "Real viscosity of the fluid, defaults to no viscosity."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:31
msgid "Use tensile correction."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:33
msgid "Use the Hughes-Graham correction."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:35
msgid "Update the smoothing length as per Ferrari et al."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:37
msgid "Use the delta-SPH correction terms."
msgstr ""

#: ../../pysph/pysph/sph/scheme.pydocstring of pysph.sph.scheme.WCSPHScheme:39
msgid "Use summation density instead of continuity."
msgstr ""

#: ../../pysph/docs/source/reference/solver.rst:2
msgid "Module solver"
msgstr ""

#: ../../pysph/docs/source/reference/solver.rst:8
msgid "Module solver tools"
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.DensityCorrection:1
msgid "A tool to reinitialize the density of the fluid particles"
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.DensityCorrection:3
#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:6
msgid "The application instance."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.DensityCorrection:5
msgid ""
"Names of the particle arrays whose densities needs to be reinitialized."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.DensityCorrection:8
msgid ""
"Name of the density reinitialization operation. corr='shepard' for using "
"zeroth order shepard filter"
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.DensityCorrection:11
msgid "Frequency of reinitialization."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.DensityCorrection.post_step:1
#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher.post_step:1
#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.Tool.post_step:1
msgid ""
"If overloaded, this is called automatically after each integrator step.  The"
" method is passed the solver instance."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:1
msgid ""
"A simple tool to periodically remesh a given array of particles onto an "
"initial set of points."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:8
msgid "Name of the particle array that needs to be remeshed."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:10
msgid "List of properties to interpolate."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:12
msgid "Frequency of remeshing operation."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:14
#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:17
#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:20
msgid ""
"Positions to remesh the properties onto.  If not specified they are taken "
"from the particle arrays at the time of construction."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.SimpleRemesher:25
msgid "Equations to use for the interpolation, passed to the interpolator."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of pysph.solver.tools.Tool:1
msgid ""
"A tool is typically an object that can be used to perform a specific task on"
" the solver's pre_step/post_step or post_stage callbacks. This can be used "
"for a variety of things.  For example, one could save a plot, print debug "
"statistics or perform remeshing etc."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of pysph.solver.tools.Tool:6
msgid ""
"To create a new tool, simply subclass this class and overload any of its "
"desired methods."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.Tool.post_stage:1
msgid ""
"If overloaded, this is called automatically after each integrator stage, "
"i.e. if the integrator is a two stage integrator it will be called after the"
" first and second stages."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.Tool.post_stage:5
msgid ""
"The method is passed (current_time, dt, stage).  See the the "
"`Integrator.one_timestep` methods for examples of how this is called."
msgstr ""

#: ../../pysph/pysph/solver/tools.pydocstring of
#: pysph.solver.tools.Tool.pre_step:1
msgid ""
"If overloaded, this is called automatically before each integrator step.  "
"The method is passed the solver instance."
msgstr ""

#: ../../pysph/docs/source/reference/solver.rst:14
msgid "Module boundary conditions"
msgstr ""

#: ../../pysph/docs/source/reference/solver_interfaces.rst:2
msgid "Module solver_interfaces"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.CommandlineInterface:1
msgid "command-line interface to the solver controller"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler:1
msgid "SimpleXMLRPCRequestHandler subclass which attempts to do CORS"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler:3
msgid ""
"CORS is Cross-Origin-Resource-Sharing (http://www.w3.org/TR/cors/) which "
"enables xml-rpc calls from a different domain than the xml-rpc server (such "
"requests are otherwise denied)"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.do_GET:1
msgid "Handle http requests to serve html/image files only"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.do_OPTIONS:1
msgid "Implement the CORS pre-flighted access for resources"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.end_headers:1
msgid "End response header with adding Access-Control-Allow-Origin"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.CrossDomainXMLRPCRequestHandler.end_headers:3
msgid "This is done to enable CORS request from all clients"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.MultiprocessingClient:1
msgid "A client for the multiprocessing interface"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.MultiprocessingClient:3
msgid ""
"Override the run() method to do appropriate actions on the proxy instance of"
" the controller object or add an interface using the add_interface methods "
"similar to the Controller.add_interface method"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.MultiprocessingClient.add_interface:1
msgid "This makes it act as substitute for the actual command_manager"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.MultiprocessingClient.start:1
#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.MultiprocessingInterface.start:1
msgid "Spawn a server process for this manager object"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.MultiprocessingInterface:1
msgid "A multiprocessing interface to the solver controller"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.MultiprocessingInterface:3
msgid ""
"This object exports a controller instance proxy over the multiprocessing "
"interface. Control actions can be performed by connecting to the interface "
"and calling methods on the controller proxy instance"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.XMLRPCInterface:1
msgid "An XML-RPC interface to the solver controller"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.XMLRPCInterface:3
msgid ""
"Currently cannot work with objects which cannot be marshalled (which is "
"basically most custom classes, most importantly ParticleArray and numpy "
"arrays)"
msgstr ""

#: ../../pysph/pysph/solver/solver_interfaces.pydocstring of
#: pysph.solver.solver_interfaces.XMLRPCInterface:7
msgid "Constructor.  May be extended, do not override."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:4
msgid "Miscellaneous Tools for PySPH"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:11
msgid "Input/Output of data files"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:13
msgid ""
"The following functions are handy functions when processing output generated"
" by PySPH or to generate new files."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:26
msgid "Interpolator"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:28
msgid ""
"This module provides a convenient class called "
":py:class:`interpolator.Interpolator` which can be used to interpolate any "
"scalar values from the points onto either a mesh or a collection of other "
"points.  SPH interpolation is performed with a simple Shepard filtering."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:39
msgid "SPH Evaluator"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:41
msgid ""
"This module provides a class that allows one to evaluate a set of equations "
"on a collection of particle arrays. This is very handy for non-trivial post-"
"processing that needs to be quick."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:51
msgid "GMsh input/output"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:59
msgid "Mayavi Viewer"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:66
msgid "Mesh Converter"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:68
msgid ""
"The following functions can be used to convert a mesh file supported by "
"`meshio <https://github.com/nschloe/meshio>`_ to a set of surface points."
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:74
msgid "Particle Packer"
msgstr ""

#: ../../pysph/docs/source/reference/tools.rst:76
msgid ""
"The following functions can be used to create a domain with particle packed "
"around a solid surface in both 2D and 3D."
msgstr ""
